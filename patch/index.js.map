{"version":3,"file":"index.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/lib/utils.js","../src/utils/crypto.js","../node_modules/bn.js/lib/bn.js","../node_modules/@ethersproject/logger/lib.esm/index.js","../node_modules/@ethersproject/logger/lib.esm/_version.js","../node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","../node_modules/@ethersproject/bignumber/lib.esm/_version.js","../node_modules/js-sha3/src/sha3.js","../node_modules/@ethersproject/address/lib.esm/_version.js","../node_modules/@ethersproject/address/lib.esm/index.js","../node_modules/@ethersproject/keccak256/lib.esm/index.js","../src/lib/constants.js","../src/utils/eth.js","../src/utils/sol.js","../src/utils/cosmos.js","../src/lib/bls-sdk.js","../src/utils/browser.js","../src/utils/lit.js","../src/utils/litNodeClient.js","../src/version.js","../src/index.js","../src/utils/frameComms.js","../src/utils/init.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const printError = (e) => {\n  console.log(\"Error Stack\", e.stack);\n  console.log(\"Error Name\", e.name);\n  console.log(\"Error Message\", e.message);\n};\n\nexport const mostCommonString = (arr) => {\n  return arr\n    .sort(\n      (a, b) =>\n        arr.filter((v) => v === a).length - arr.filter((v) => v === b).length\n    )\n    .pop();\n};\n\nexport const throwError = ({ message, name, errorCode }) => {\n  throw new (function () {\n    this.message = message;\n    this.name = name;\n    this.errorCode = errorCode;\n  })();\n};\n\nexport const log = (...args) => {\n  if (\n    globalThis &&\n    globalThis.litConfig &&\n    globalThis.litConfig.debug === false\n  ) {\n    return;\n  }\n  args.unshift(\"[Lit-JS-SDK]\");\n  console.log(...args);\n};\n","import nacl from \"tweetnacl\";\nimport naclUtil from \"tweetnacl-util\";\nimport {\n  fromString as uint8arrayFromString,\n  toString as uint8arrayToString,\n} from \"uint8arrays\";\nimport { throwError, log } from \"../lib/utils\";\n\nconst SYMM_KEY_ALGO_PARAMS = {\n  name: \"AES-CBC\",\n  length: 256,\n};\n\n/**\n * Hash the unified access control conditions using SHA-256 in a deterministic way.\n * @param {Object} unifiedAccessControlConditions - The unified access control conditions to hash.\n * @returns {Promise<ArrayBuffer>} A promise that resolves to an ArrayBuffer that contains the hash\n */\nexport function hashUnifiedAccessControlConditions(\n  unifiedAccessControlConditions\n) {\n  const conds = unifiedAccessControlConditions.map((c) =>\n    canonicalUnifiedAccessControlConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing unified access control conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function canonicalUnifiedAccessControlConditionFormatter(cond) {\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalUnifiedAccessControlConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    if (cond.conditionType === \"solRpc\") {\n      return canonicalSolRpcConditionFormatter(cond);\n    } else if (cond.conditionType === \"evmBasic\") {\n      return canonicalAccessControlConditionFormatter(cond);\n    } else if (cond.conditionType === \"evmContract\") {\n      return canonicalEVMContractConditionFormatter(cond);\n    } else if (cond.conditionType === \"cosmos\") {\n      return canonicalCosmosConditionFormatter(cond);\n    } else {\n      throwError({\n        message: `You passed an invalid access control condition that is missing or has a wrong \"conditionType\": ${JSON.stringify(\n          cond\n        )}`,\n        name: \"InvalidAccessControlCondition\",\n        errorCode: \"invalid_access_control_condition\",\n      });\n    }\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function hashCosmosConditions(cosmosConditions) {\n  const conds = cosmosConditions.map((c) =>\n    canonicalCosmosConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing cosmos conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function canonicalCosmosConditionFormatter(cond) {\n  // need to return in the exact format below:\n  /*\n  pub struct CosmosCondition {\n      pub path: String,\n      pub chain: String,\n      pub return_value_test: JsonReturnValueTestV2,\n}\n  */\n\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalCosmosConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    const { returnValueTest } = cond;\n\n    const canonicalReturnValueTest = {\n      key: returnValueTest.key,\n      comparator: returnValueTest.comparator,\n      value: returnValueTest.value,\n    };\n\n    return {\n      path: cond.path,\n      chain: cond.chain,\n      returnValueTest: canonicalReturnValueTest,\n    };\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function hashSolRpcConditions(solRpcConditions) {\n  const conds = solRpcConditions.map((c) =>\n    canonicalSolRpcConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing sol rpc conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function canonicalSolRpcConditionFormatter(cond) {\n  // need to return in the exact format below:\n  /*\n  pub struct SolRpcCondition {\n      pub method: String,\n      pub params: Vec<String>,\n      pub return_value_test: JsonReturnValueTestV2,\n  }\n  */\n\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalSolRpcConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    const { returnValueTest } = cond;\n\n    const canonicalReturnValueTest = {\n      key: returnValueTest.key,\n      comparator: returnValueTest.comparator,\n      value: returnValueTest.value,\n    };\n\n    return {\n      method: cond.method,\n      params: cond.params,\n      chain: cond.chain,\n      returnValueTest: canonicalReturnValueTest,\n    };\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function canonicalResourceIdFormatter(resId) {\n  // need to return in the exact format below:\n\n  return {\n    baseUrl: resId.baseUrl,\n    path: resId.path,\n    orgId: resId.orgId,\n    role: resId.role,\n    extraData: resId.extraData,\n  };\n}\n\nexport function hashResourceId(resourceId) {\n  const resId = canonicalResourceIdFormatter(resourceId);\n  const toHash = JSON.stringify(resId);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nfunction canonicalAbiParams(params) {\n  return params.map((param) => ({\n    name: param.name,\n    type: param.type,\n  }));\n}\n\nexport function canonicalEVMContractConditionFormatter(cond) {\n  // need to return in the exact format below:\n  /*\n  pub struct JsonAccessControlCondition {\n    pub contract_address: String,\n    pub chain: String,\n    pub standard_contract_type: String,\n    pub method: String,\n    pub parameters: Vec<String>,\n    pub return_value_test: JsonReturnValueTest,\n  }\n  */\n\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalEVMContractConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    /* abi needs to match:\n      pub name: String,\n    /// Function input.\n    pub inputs: Vec<Param>,\n    /// Function output.\n    pub outputs: Vec<Param>,\n    #[deprecated(note = \"The constant attribute was removed in Solidity 0.5.0 and has been \\\n          replaced with stateMutability. If parsing a JSON AST created with \\\n          this version or later this value will always be false, which may be wrong.\")]\n    /// Constant function.\n    #[cfg_attr(feature = \"full-serde\", serde(default))]\n    pub constant: bool,\n    /// Whether the function reads or modifies blockchain state\n    #[cfg_attr(feature = \"full-serde\", serde(rename = \"stateMutability\", default))]\n    pub state_mutability: StateMutability,\n    */\n\n    const { functionAbi, returnValueTest } = cond;\n\n    const canonicalAbi = {\n      name: functionAbi.name,\n      inputs: canonicalAbiParams(functionAbi.inputs),\n      outputs: canonicalAbiParams(functionAbi.outputs),\n      constant:\n        typeof functionAbi.constant === \"undefined\"\n          ? false\n          : functionAbi.constant,\n      stateMutability: functionAbi.stateMutability,\n    };\n\n    const canonicalReturnValueTest = {\n      key: returnValueTest.key,\n      comparator: returnValueTest.comparator,\n      value: returnValueTest.value,\n    };\n\n    return {\n      contractAddress: cond.contractAddress,\n      functionName: cond.functionName,\n      functionParams: cond.functionParams,\n      functionAbi: canonicalAbi,\n      chain: cond.chain,\n      returnValueTest: canonicalReturnValueTest,\n    };\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function hashEVMContractConditions(accessControlConditions) {\n  const conds = accessControlConditions.map((c) =>\n    canonicalEVMContractConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing evm contract conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function canonicalAccessControlConditionFormatter(cond) {\n  // need to return in the exact format below:\n  /*\n  pub struct JsonAccessControlCondition {\n    pub contract_address: String,\n    pub chain: String,\n    pub standard_contract_type: String,\n    pub method: String,\n    pub parameters: Vec<String>,\n    pub return_value_test: JsonReturnValueTest,\n  }\n  */\n\n  if (Array.isArray(cond)) {\n    return cond.map((c) => canonicalAccessControlConditionFormatter(c));\n  }\n\n  if (\"operator\" in cond) {\n    return {\n      operator: cond.operator,\n    };\n  }\n\n  if (\"returnValueTest\" in cond) {\n    return {\n      contractAddress: cond.contractAddress,\n      chain: cond.chain,\n      standardContractType: cond.standardContractType,\n      method: cond.method,\n      parameters: cond.parameters,\n      returnValueTest: {\n        comparator: cond.returnValueTest.comparator,\n        value: cond.returnValueTest.value,\n      },\n    };\n  }\n\n  throwError({\n    message: `You passed an invalid access control condition: ${cond}`,\n    name: \"InvalidAccessControlCondition\",\n    errorCode: \"invalid_access_control_condition\",\n  });\n}\n\nexport function hashAccessControlConditions(accessControlConditions) {\n  const conds = accessControlConditions.map((c) =>\n    canonicalAccessControlConditionFormatter(c)\n  );\n  const toHash = JSON.stringify(conds);\n  log(\"Hashing access control conditions: \", toHash);\n  const encoder = new TextEncoder();\n  const data = encoder.encode(toHash);\n  return crypto.subtle.digest(\"SHA-256\", data);\n}\n\nexport function compareArrayBuffers(buf1, buf2) {\n  if (buf1.byteLength !== buf2.byteLength) return false;\n  const dv1 = new Uint8Array(buf1);\n  const dv2 = new Uint8Array(buf2);\n  for (let i = 0; i !== buf1.byteLength; i++) {\n    if (dv1[i] !== dv2[i]) return false;\n  }\n  return true;\n}\n\nexport async function importSymmetricKey(symmKey) {\n  const importedSymmKey = await crypto.subtle.importKey(\n    \"raw\",\n    symmKey,\n    SYMM_KEY_ALGO_PARAMS,\n    true,\n    [\"encrypt\", \"decrypt\"]\n  );\n  return importedSymmKey;\n}\nexport async function generateSymmetricKey() {\n  const symmKey = await crypto.subtle.generateKey(SYMM_KEY_ALGO_PARAMS, true, [\n    \"encrypt\",\n    \"decrypt\",\n  ]);\n  return symmKey;\n}\n\n/**\n * Decrypt an encrypted blob with a symmetric key.  Uses AES-CBC via SubtleCrypto\n * @param {Blob} encryptedBlob The encrypted blob that should be decrypted\n * @param {Object} symmKey The symmetric key\n * @returns {Blob} The decrypted blob\n */\nexport async function decryptWithSymmetricKey(encryptedBlob, symmKey) {\n  const recoveredIv = await encryptedBlob.slice(0, 16).arrayBuffer();\n  const encryptedZipArrayBuffer = await encryptedBlob.slice(16).arrayBuffer();\n  const decryptedZip = await crypto.subtle.decrypt(\n    {\n      name: \"AES-CBC\",\n      iv: recoveredIv,\n    },\n    symmKey,\n    encryptedZipArrayBuffer\n  );\n  return decryptedZip;\n}\n\n// used this as an example\n// https://github.com/infotechinc/symmetric-encryption-in-browser/blob/master/crypto.js\n/**\n * Encrypt a blob with a symmetric key\n * @param {Object} symmKey The symmetric key\n * @param {Blob} data The blob to encrypt\n * @returns {Blob} The encrypted blob\n */\nexport async function encryptWithSymmetricKey(symmKey, data) {\n  // encrypt the zip with symmetric key\n  const iv = crypto.getRandomValues(new Uint8Array(16));\n\n  const encryptedZipData = await crypto.subtle.encrypt(\n    {\n      name: \"AES-CBC\",\n      iv,\n    },\n    symmKey,\n    data\n  );\n  const encryptedZipBlob = new Blob([iv, new Uint8Array(encryptedZipData)], {\n    type: \"application/octet-stream\",\n  });\n  return encryptedZipBlob;\n}\n\n// borrowed from eth-sig-util from meatmask.\n/**\n * Encrypt a blob with the public key of a receiver\n * @param {string} receiverPublicKey The base64 encoded 32 byte public key.  The corresponding private key will be able to decrypt this blob\n * @param {Blob} data The blob to encrypt\n * @param {string} version The encryption algorithm to use.  This should be set to \"x25519-xsalsa20-poly1305\" as no other algorithms are implemented right now.\n * @returns {Blob} The encrypted blob\n */\nexport function encryptWithPubKey(receiverPublicKey, data, version) {\n  switch (version) {\n    case \"x25519-xsalsa20-poly1305\": {\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(receiverPublicKey);\n      } catch (err) {\n        throw new Error(\"Bad public key\");\n      }\n\n      // padding?  not needed for c decryption?\n      // const paddingBytes = new Uint8Array(32)\n      // paddingBytes.fill(0)\n      // const msgParamsUInt8Array = new Uint8Array([...paddingBytes, ...naclUtil.decodeUTF8(data)])\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey\n      );\n\n      // handle encrypted data\n      const output = {\n        version: \"x25519-xsalsa20-poly1305\",\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error(\"Encryption type/version not supported\");\n  }\n}\n\n// borrowed from eth-sig-util from meatmask.\n/**\n * Decrypt a blob with a private key\n * @param {Blob} encryptedData The blob to decrypt\n * @param {string} receiverPrivateKey The base64 encoded 32 byte private key.  The corresponding public key was used to encrypt this blob\n * @param {string} version The encryption algorithm to use.  This should be set to \"x25519-xsalsa20-poly1305\" as no other algorithms are implemented right now.\n * @returns {Blob} The decrypted blob\n */\nexport function decryptWithPrivKey(encryptedData, receiverPrivateKey) {\n  switch (encryptedData.version) {\n    case \"x25519-xsalsa20-poly1305\": {\n      const recieverEncryptionPrivateKey =\n        naclUtil.decodeBase64(receiverPrivateKey);\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error(\"Decryption failed.  Could not encode result as utf8\");\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error(\"Decryption failed.  Output is falsy\");\n    }\n\n    default:\n      throw new Error(\"Encryption type/version not supported.\");\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nimport _BN from \"bn.js\";\nvar BN = _BN.BN;\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n    pow(other) {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n    and(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n    or(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n    xor(other) {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n    mask(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    shl(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n    shr(value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isNegative() {\n        return (this._hex[0] === \"-\");\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toBigInt() {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    toJSON(key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        const anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nexport function _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\n// value should have no prefix\nexport function _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\n//# sourceMappingURL=bignumber.js.map","export const version = \"bignumber/5.6.2\";\n//# sourceMappingURL=_version.js.map","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","export const version = \"address/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    const chars = address.substring(2).split(\"\");\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n    const hashed = arrayify(keccak256(expanded));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nconst ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\nexport function getCreate2Address(from, salt, initCodeHash) {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([\"0xff\", getAddress(from), salt, initCodeHash])), 12));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {Object} LITChain\n * @property {string} vmType - Either EVM for an Ethereum compatible chain or SVM for a Solana compatible chain\n * @property {string} name - The human readable name of the chain\n */\n\n/**\n * @typedef {Object} LITEVMChain\n * @property {string} contractAddress - The address of the token contract for the optional predeployed ERC1155 contract.  Only present on EVM chains.\n * @property {string} chainId - The chain ID of the chain that this token contract is deployed on.  Used for EVM chains.\n * @property {string} name - The human readable name of the chain\n */\n\n/**\n * @typedef {Object} LITSVMChain\n * @property {string} name - The human readable name of the chain\n */\n\n/**\n * @typedef {Object} LITCosmosChain\n * @property {string} name - The human readable name of the chain\n */\n\n/**\n * EVM Chains supported by the LIT protocol.  Each chain includes an optional pre-deployed token contract that you may use for minting LITs.  These are ERC1155 contracts that let you mint any quantity of a given token.  Use the chain name as a key in this object.\n * @constant\n * @type {LITEVMChain}\n * @default\n */\nexport const LIT_CHAINS = {\n  ethereum: {\n    contractAddress: \"0xA54F7579fFb3F98bd8649fF02813F575f9b3d353\",\n    chainId: 1,\n    name: \"Ethereum\",\n    symbol: \"ETH\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\n      \"https://eth-mainnet.alchemyapi.io/v2/EuGnkVlzVoEkzdg0lpCarhm8YHOxWVxE\",\n    ],\n    blockExplorerUrls: [\"https://etherscan.io\"],\n    vmType: \"EVM\",\n  },\n  polygon: {\n    contractAddress: \"0x7C7757a9675f06F3BE4618bB68732c4aB25D2e88\",\n    chainId: 137,\n    name: \"Polygon\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    rpcUrls: [\"https://polygon-rpc.com\"],\n    blockExplorerUrls: [\"https://explorer.matic.network\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  fantom: {\n    contractAddress: \"0x5bD3Fe8Ab542f0AaBF7552FAAf376Fd8Aa9b3869\",\n    chainId: 250,\n    name: \"Fantom\",\n    symbol: \"FTM\",\n    decimals: 18,\n    rpcUrls: [\"https://rpcapi.fantom.network\"],\n    blockExplorerUrls: [\"https://ftmscan.com\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  xdai: {\n    contractAddress: \"0xDFc2Fd83dFfD0Dafb216F412aB3B18f2777406aF\",\n    chainId: 100,\n    name: \"xDai\",\n    symbol: \"xDai\",\n    decimals: 18,\n    rpcUrls: [\"https://rpc.gnosischain.com\"],\n    blockExplorerUrls: [\" https://blockscout.com/xdai/mainnet\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  bsc: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 56,\n    name: \"Binance Smart Chain\",\n    symbol: \"BNB\",\n    decimals: 18,\n    rpcUrls: [\"https://bsc-dataseed.binance.org/\"],\n    blockExplorerUrls: [\" https://bscscan.com/\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  arbitrum: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 42161,\n    name: \"Arbitrum\",\n    symbol: \"AETH\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\"https://arb1.arbitrum.io/rpc\"],\n    blockExplorerUrls: [\"https://arbiscan.io/\"],\n    vmType: \"EVM\",\n  },\n  avalanche: {\n    contractAddress: \"0xBB118507E802D17ECDD4343797066dDc13Cde7C6\",\n    chainId: 43114,\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\"https://api.avax.network/ext/bc/C/rpc\"],\n    blockExplorerUrls: [\"https://snowtrace.io/\"],\n    vmType: \"EVM\",\n  },\n  fuji: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 43113,\n    name: \"Avalanche FUJI Testnet\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\"https://api.avax-test.network/ext/bc/C/rpc\"],\n    blockExplorerUrls: [\"https://testnet.snowtrace.io/\"],\n    vmType: \"EVM\",\n  },\n  harmony: {\n    contractAddress: \"0xBB118507E802D17ECDD4343797066dDc13Cde7C6\",\n    chainId: 1666600000,\n    name: \"Harmony\",\n    symbol: \"ONE\",\n    decimals: 18,\n    type: \"ERC1155\",\n    rpcUrls: [\"https://api.harmony.one\"],\n    blockExplorerUrls: [\"https://explorer.harmony.one/\"],\n    vmType: \"EVM\",\n  },\n  kovan: {\n    contractAddress: \"0x9dB60Db3Dd9311861D87D33B0463AaD9fB4bb0E6\",\n    chainId: 42,\n    name: \"Kovan\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://kovan.infura.io/v3/ddf1ca3700f34497bca2bf03607fde38\"],\n    blockExplorerUrls: [\"https://kovan.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  mumbai: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 80001,\n    name: \"Mumbai\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    rpcUrls: [\n      \"https://rpc-mumbai.maticvigil.com/v1/96bf5fa6e03d272fbd09de48d03927b95633726c\",\n    ],\n    blockExplorerUrls: [\"https://mumbai.polygonscan.com\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  goerli: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 5,\n    name: \"Goerli\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://goerli.infura.io/v3/96dffb3d8c084dec952c61bd6230af34\"],\n    blockExplorerUrls: [\"https://goerli.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  ropsten: {\n    contractAddress: \"0x61544f0AE85f8fed6Eb315c406644eb58e15A1E7\",\n    chainId: 3,\n    name: \"Ropsten\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://ropsten.infura.io/v3/96dffb3d8c084dec952c61bd6230af34\"],\n    blockExplorerUrls: [\"https://ropsten.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  rinkeby: {\n    contractAddress: \"0xc716950e5deae248160109f562e1c9bf8e0ca25b\",\n    chainId: 4,\n    name: \"Rinkeby\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://rinkeby.infura.io/v3/96dffb3d8c084dec952c61bd6230af34\"],\n    blockExplorerUrls: [\"https://rinkeby.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  cronos: {\n    contractAddress: \"0xc716950e5DEae248160109F562e1C9bF8E0CA25B\",\n    chainId: 25,\n    name: \"Cronos\",\n    symbol: \"CRO\",\n    decimals: 18,\n    rpcUrls: [\"https://evm-cronos.org\"],\n    blockExplorerUrls: [\"https://cronos.org/explorer/\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  optimism: {\n    contractAddress: \"0xbF68B4c9aCbed79278465007f20a08Fa045281E0\",\n    chainId: 10,\n    name: \"Optimism\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://mainnet.optimism.io\"],\n    blockExplorerUrls: [\"https://optimistic.etherscan.io\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  celo: {\n    contractAddress: \"0xBB118507E802D17ECDD4343797066dDc13Cde7C6\",\n    chainId: 42220,\n    name: \"Celo\",\n    symbol: \"CELO\",\n    decimals: 18,\n    rpcUrls: [\"https://forno.celo.org\"],\n    blockExplorerUrls: [\"https://explorer.celo.org\"],\n    type: \"ERC1155\",\n    vmType: \"EVM\",\n  },\n  aurora: {\n    contractAddress: null,\n    chainId: 1313161554,\n    name: \"Aurora\",\n    symbol: \"ETH\",\n    decimals: 18,\n    rpcUrls: [\"https://mainnet.aurora.dev\"],\n    blockExplorerUrls: [\"https://aurorascan.dev\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  eluvio: {\n    contractAddress: null,\n    chainId: 955305,\n    name: \"Eluvio\",\n    symbol: \"ELV\",\n    decimals: 18,\n    rpcUrls: [\"https://host-76-74-28-226.contentfabric.io/eth\"],\n    blockExplorerUrls: [\"https://explorer.eluv.io\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  alfajores: {\n    contractAddress: null,\n    chainId: 44787,\n    name: \"Alfajores\",\n    symbol: \"CELO\",\n    decimals: 18,\n    rpcUrls: [\"https://alfajores-forno.celo-testnet.org\"],\n    blockExplorerUrls: [\"https://alfajores-blockscout.celo-testnet.org\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  xdc: {\n    contractAddress: null,\n    chainId: 50,\n    name: \"XDC Blockchain\",\n    symbol: \"XDC\",\n    decimals: 18,\n    rpcUrls: [\"https://rpc.xinfin.network\"],\n    blockExplorerUrls: [\"https://explorer.xinfin.network\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  evmos: {\n    contractAddress: null,\n    chainId: 9001,\n    name: \"EVMOS\",\n    symbol: \"EVMOS\",\n    decimals: 18,\n    rpcUrls: [\"https://eth.bd.evmos.org:8545\"],\n    blockExplorerUrls: [\"https://evm.evmos.org\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n  evmosTestnet: {\n    contractAddress: null,\n    chainId: 9000,\n    name: \"EVMOS Testnet\",\n    symbol: \"EVMOS\",\n    decimals: 18,\n    rpcUrls: [\"https://eth.bd.evmos.dev:8545\"],\n    blockExplorerUrls: [\"https://evm.evmos.dev\"],\n    type: null,\n    vmType: \"EVM\",\n  },\n};\n\n/**\n * Solana Chains supported by the LIT protocol.  Use the chain name as a key in this object.\n * @constant\n * @type {LITSVMChain}\n * @default\n */\nexport const LIT_SVM_CHAINS = {\n  solana: {\n    name: \"Solana\",\n    symbol: \"SOL\",\n    decimals: 9,\n    rpcUrls: [\"https://api.mainnet-beta.solana.com\"],\n    blockExplorerUrls: [\"https://explorer.solana.com/\"],\n    vmType: \"SVM\",\n  },\n  solanaDevnet: {\n    name: \"Solana Devnet\",\n    symbol: \"SOL\",\n    decimals: 9,\n    rpcUrls: [\"https://api.devnet.solana.com\"],\n    blockExplorerUrls: [\"https://explorer.solana.com/\"],\n    vmType: \"SVM\",\n  },\n  solanaTestnet: {\n    name: \"Solana Testnet\",\n    symbol: \"SOL\",\n    decimals: 9,\n    rpcUrls: [\"https://api.testnet.solana.com\"],\n    blockExplorerUrls: [\"https://explorer.solana.com/\"],\n    vmType: \"SVM\",\n  },\n};\n\n/**\n * Cosmos Chains supported by the LIT protocol.  Use the chain name as a key in this object.\n * @constant\n * @type {LITCosmosChain}\n * @default\n */\nexport const LIT_COSMOS_CHAINS = {\n  cosmos: {\n    name: \"Cosmos\",\n    symbol: \"ATOM\",\n    decimals: 6,\n    chainId: \"cosmoshub-4\",\n    rpcUrls: [\"https://lcd-cosmoshub.keplr.app\"],\n    blockExplorerUrls: [\"https://atomscan.com/\"],\n    vmType: \"CVM\",\n  },\n  kyve: {\n    name: \"Kyve\",\n    symbol: \"KYVE\",\n    decimals: 6,\n    chainId: \"korellia\",\n    rpcUrls: [\"https://api.korellia.kyve.network\"],\n    blockExplorerUrls: [\"https://explorer.kyve.network/\"],\n    vmType: \"CVM\",\n  },\n  evmosCosmos: {\n    name: \"EVMOS Cosmos\",\n    symbol: \"EVMOS\",\n    decimals: 18,\n    chainId: \"evmos_9001-2\",\n    rpcUrls: [\"https://rest.bd.evmos.org:1317\"],\n    blockExplorerUrls: [\"https://evmos.bigdipper.live\"],\n    vmType: \"CVM\",\n  },\n  evmosCosmosTestnet: {\n    name: \"Evmos Cosmos Testnet\",\n    symbol: \"EVMOS\",\n    decimals: 18,\n    chainId: \"evmos_9000-4\",\n    rpcUrls: [\"https://rest.bd.evmos.dev:1317\"],\n    blockExplorerUrls: [\"https://testnet.bigdipper.live\"],\n    vmType: \"CVM\",\n  },\n};\n\n/**\n * All Chains supported by the LIT protocol.  Use the chain name as a key in this object.\n * @constant\n * @type {LITChain}\n * @default\n */\nexport const ALL_LIT_CHAINS = {\n  ...LIT_CHAINS,\n  ...LIT_SVM_CHAINS,\n  ...LIT_COSMOS_CHAINS,\n};\n\nexport const NETWORK_PUB_KEY =\n  \"9971e835a1fe1a4d78e381eebbe0ddc84fde5119169db816900de796d10187f3c53d65c1202ac083d099a517f34a9b62\";\n","import { Contract } from \"@ethersproject/contracts\";\nimport { verifyMessage } from \"@ethersproject/wallet\";\nimport {\n  Web3Provider,\n  JsonRpcSigner,\n  JsonRpcProvider,\n} from \"@ethersproject/providers\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { hexlify } from \"@ethersproject/bytes\";\nimport { getAddress } from \"@ethersproject/address\";\nimport WalletConnectProvider from \"@walletconnect/ethereum-provider\";\nimport LitConnectModal from \"lit-connect-modal\";\nimport { SiweMessage } from \"lit-siwe\";\n\nimport naclUtil from \"tweetnacl-util\";\nimport nacl from \"tweetnacl\";\n\nimport LIT from \"../abis/LIT.json\";\nimport ERC20 from \"../abis/ERC20.json\";\nimport { LIT_CHAINS } from \"../lib/constants\";\nimport { throwError, log } from \"../lib/utils\";\n\nfunction chainHexIdToChainName(chainHexId) {\n  for (let i = 0; i < Object.keys(LIT_CHAINS).length; i++) {\n    const chainName = Object.keys(LIT_CHAINS)[i];\n    const litChainHexId = \"0x\" + LIT_CHAINS[chainName].chainId.toString(\"16\");\n    if (litChainHexId === chainHexId) {\n      return chainName;\n    }\n  }\n}\n\nexport function encodeCallData({ abi, functionName, functionParams }) {\n  const iface = new ethers.utils.Interface(abi);\n  const callData = iface.encodeFunctionData(functionName, functionParams);\n  return callData;\n}\n\nexport function decodeCallResult({ abi, functionName, data }) {\n  const iface = new ethers.utils.Interface(abi);\n  const decoded = iface.decodeFunctionResult(functionName, data);\n  return decoded;\n}\n\nexport async function connectWeb3({ chainId = 1 } = {}) {\n  const rpcUrls = {};\n  // need to make it look like this:\n  // rpc: {\n  //   1: \"https://mainnet.mycustomnode.com\",\n  //   3: \"https://ropsten.mycustomnode.com\",\n  //   100: \"https://dai.poa.network\",\n  //   // ...\n  // },\n\n  for (let i = 0; i < Object.keys(LIT_CHAINS).length; i++) {\n    const chainName = Object.keys(LIT_CHAINS)[i];\n    const chainId = LIT_CHAINS[chainName].chainId;\n    const rpcUrl = LIT_CHAINS[chainName].rpcUrls[0];\n    rpcUrls[chainId] = rpcUrl;\n  }\n\n  const providerOptions = {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        // infuraId: \"cd614bfa5c2f4703b7ab0ec0547d9f81\",\n        rpc: rpcUrls,\n        chainId,\n      },\n    },\n  };\n\n  log(\"getting provider via lit connect modal\");\n\n  const dialog = new LitConnectModal({\n    providerOptions,\n  });\n  const provider = await dialog.getWalletProvider();\n\n  log(\"got provider\", provider);\n  const web3 = new Web3Provider(provider);\n\n  // const provider = await detectEthereumProvider();\n  // const web3 = new Web3Provider(provider);\n\n  // trigger metamask popup\n  await provider.enable();\n\n  log(\"listing accounts\");\n  const accounts = await web3.listAccounts();\n  // const accounts = await provider.request({\n  //   method: \"eth_requestAccounts\",\n  //   params: [],\n  // });\n  log(\"accounts\", accounts);\n  const account = accounts[0].toLowerCase();\n\n  return { web3, account };\n}\n\n/**\n * Delete any saved AuthSigs from local storage.  Takes no params and returns nothing.  This will also clear out the WalletConnect cache in local storage.  We often run this function as a result of the user pressing a \"Logout\" button.\n */\nexport async function disconnectWeb3() {\n  localStorage.removeItem(\"walletconnect\");\n  localStorage.removeItem(\"lit-auth-signature\");\n  localStorage.removeItem(\"lit-auth-sol-signature\");\n  localStorage.removeItem(\"lit-auth-cosmos-signature\");\n  localStorage.removeItem(\"lit-web3-provider\");\n}\n\n// taken from the excellent repo https://github.com/zmitton/eth-proof\n// export async function getMerkleProof({ tokenAddress, balanceStorageSlot, tokenId }) {\n//   log(`getMerkleProof for { tokenAddress, balanceStorageSlot, tokenId } ${tokenAddress}, ${balanceStorageSlot}, ${tokenId}`)\n//   const { web3, account } = await connectWeb3()\n//   log(`getting mappingAt(${balanceStorageSlot}, ${tokenId}, ${account})`)\n//   const storageAddress = mappingAt(balanceStorageSlot, parseInt(tokenId), account)\n//   log('storageAddress: ', storageAddress)\n\n//   // you may need to try the below twicce because sometimes the proof isn't available for the latest block on polygon because the node just isn't fast enough\n//   let tries = 0\n//   let rpcProof = null\n//   let rpcBlock = null\n//   while (!rpcProof && tries < 6) {\n//     try {\n//       if (!rpcBlock) {\n//         // only set the rpc block once\n//         rpcBlock = await web3.request({ method: 'eth_getBlockByNumber', params: ['latest', false] })\n//         log('rpcBlock: ', rpcBlock)\n//       }\n//       rpcProof = await web3.request({ method: 'eth_getProof', params: [tokenAddress, [storageAddress], rpcBlock.number] })\n//       log('rpcProof: ', rpcProof)\n//     } catch (e) {\n//       log(e)\n//       log(`error getting rpc proof, have made ${tries} attempts`)\n//       tries++\n//     }\n//   }\n\n//   return {\n//     header: rpcBlock,\n//     accountProof: rpcProof.accountProof,\n//     storageProof: rpcProof.storageProof[0].proof,\n//     blockHash: rpcBlock.hash\n//   }\n// }\n\n// export async function checkAndDeriveKeypair () {\n//   let keypair = localStorage.getItem('lit-keypair')\n//   if (!keypair) {\n//     await deriveEncryptionKeys()\n//     keypair = localStorage.getItem('lit-keypair')\n//   }\n//   keypair = JSON.parse(keypair)\n//   const { web3, account } = await connectWeb3()\n//   // make sure we are on the right account\n//   if (account !== keypair.address) {\n//     await deriveEncryptionKeys()\n//     keypair = localStorage.getItem('lit-keypair')\n//     keypair = JSON.parse(keypair)\n//   }\n//   return keypair\n// }\n\nexport async function checkAndSignEVMAuthMessage({ chain, resources }) {\n  const selectedChain = LIT_CHAINS[chain];\n  const { web3, account } = await connectWeb3({\n    chainId: selectedChain.chainId,\n  });\n  log(`got web3 and account: ${account}`);\n\n  let chainId;\n  try {\n    const resp = await web3.getNetwork();\n    chainId = resp.chainId;\n  } catch (e) {\n    // couldn't get chainId.  throw the incorrect network error\n    log(\"getNetwork threw an exception\", e);\n    throwError({\n      message: `Incorrect network selected.  Please switch to the ${chain} network in your wallet and try again.`,\n      name: \"WrongNetworkException\",\n      errorCode: \"wrong_network\",\n    });\n  }\n  let selectedChainId = \"0x\" + selectedChain.chainId.toString(\"16\");\n  log(\"chainId from web3\", chainId);\n  log(\n    `checkAndSignAuthMessage with chainId ${chainId} and chain set to ${chain} and selectedChain is `,\n    selectedChain\n  );\n  if (chainId !== selectedChain.chainId) {\n    if (web3.provider instanceof WalletConnectProvider) {\n      // this chain switching won't work.  alert the user that they need to switch chains manually\n      throwError({\n        message: `Incorrect network selected.  Please switch to the ${chain} network in your wallet and try again.`,\n        name: \"WrongNetworkException\",\n        errorCode: \"wrong_network\",\n      });\n      return;\n    }\n    try {\n      log(\"trying to switch to chainId\", selectedChainId);\n      await web3.provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: selectedChainId }],\n      });\n    } catch (switchError) {\n      log(\"error switching to chainId\", switchError);\n      // This error code indicates that the chain has not been added to MetaMask.\n      if (switchError.code === 4902) {\n        try {\n          const data = [\n            {\n              chainId: selectedChainId,\n              chainName: selectedChain.name,\n              nativeCurrency: {\n                name: selectedChain.name,\n                symbol: selectedChain.symbol,\n                decimals: selectedChain.decimals,\n              },\n              rpcUrls: selectedChain.rpcUrls,\n              blockExplorerUrls: selectedChain.blockExplorerUrls,\n            },\n          ];\n          await web3.provider.request({\n            method: \"wallet_addEthereumChain\",\n            params: data,\n          });\n        } catch (addError) {\n          // handle \"add\" error\n          if (addError.code === -32601) {\n            // metamask code indicating \"no such method\"\n            throwError({\n              message: `Incorrect network selected.  Please switch to the ${chain} network in your wallet and try again.`,\n              name: \"WrongNetworkException\",\n              errorCode: \"wrong_network\",\n            });\n          } else {\n            throw addError;\n          }\n        }\n      } else {\n        if (switchError.code === -32601) {\n          // metamask code indicating \"no such method\"\n          throwError({\n            message: `Incorrect network selected.  Please switch to the ${chain} network in your wallet and try again.`,\n            name: \"WrongNetworkException\",\n            errorCode: \"wrong_network\",\n          });\n        } else {\n          throw switchError;\n        }\n      }\n    }\n  }\n  log(\"checking if sig is in local storage\");\n  let authSig = localStorage.getItem(\"lit-auth-signature\");\n  if (!authSig) {\n    log(\"signing auth message because sig is not in local storage\");\n    await signAndSaveAuthMessage({\n      web3,\n      account,\n      chainId: selectedChain.chainId,\n      resources,\n    });\n    authSig = localStorage.getItem(\"lit-auth-signature\");\n  }\n  authSig = JSON.parse(authSig);\n  // make sure we are on the right account\n  if (account !== authSig.address) {\n    log(\n      \"signing auth message because account is not the same as the address in the auth sig\"\n    );\n    await signAndSaveAuthMessage({\n      web3,\n      account,\n      chainId: selectedChain.chainId,\n      resources,\n    });\n    authSig = localStorage.getItem(\"lit-auth-signature\");\n    authSig = JSON.parse(authSig);\n  } else {\n    // check the resources of the sig and re-sign if they don't match\n    let mustResign = false;\n    try {\n      const parsedSiwe = new SiweMessage(authSig.signedMessage);\n      log(\"parsedSiwe.resources\", parsedSiwe.resources);\n\n      if (JSON.stringify(parsedSiwe.resources) !== JSON.stringify(resources)) {\n        log(\n          \"signing auth message because resources differ from the resources in the auth sig\"\n        );\n        mustResign = true;\n      } else if (parsedSiwe.address !== getAddress(parsedSiwe.address)) {\n        log(\n          \"signing auth message because parsedSig.address is not equal to the same address but checksummed.  This usually means the user had a non-checksummed address saved and so they need to re-sign.\"\n        );\n        mustResign = true;\n      }\n    } catch (e) {\n      log(\"error parsing siwe sig.  making the user sign again: \", e);\n      mustResign = true;\n    }\n    if (mustResign) {\n      await signAndSaveAuthMessage({\n        web3,\n        account,\n        chainId: selectedChain.chainId,\n        resources,\n      });\n      authSig = localStorage.getItem(\"lit-auth-signature\");\n      authSig = JSON.parse(authSig);\n    }\n  }\n  log(\"got auth sig\", authSig);\n  return authSig;\n}\n\n/**\n * Sign the auth message with the user's wallet, and store it in localStorage.  Called by checkAndSignAuthMessage if the user does not have a signature stored.\n * @param {Object} params\n * @param {Web3Provider} params.web3 An ethers.js Web3Provider instance\n * @param {string} params.account The account to sign the message with\n * @returns {AuthSig} The AuthSig created or retrieved\n */\nexport async function signAndSaveAuthMessage({\n  web3,\n  account,\n  chainId,\n  resources,\n}) {\n  // const { chainId } = await web3.getNetwork();\n\n  const preparedMessage = {\n    domain: globalThis.location.host,\n    address: getAddress(account), // convert to EIP-55 format or else SIWE complains\n    uri: globalThis.location.origin,\n    version: \"1\",\n    chainId,\n  };\n\n  if (resources && resources.length > 0) {\n    preparedMessage.resources = resources;\n  }\n\n  const message = new SiweMessage(preparedMessage);\n\n  const body = message.prepareMessage();\n\n  const signedResult = await signMessage({\n    body,\n    web3,\n    account,\n  });\n\n  localStorage.setItem(\n    \"lit-auth-signature\",\n    JSON.stringify({\n      sig: signedResult.signature,\n      derivedVia: \"web3.eth.personal.sign\",\n      signedMessage: body,\n      address: signedResult.address,\n    })\n  );\n  // store a keypair in localstorage for communication with sgx\n  const commsKeyPair = nacl.box.keyPair();\n  localStorage.setItem(\n    \"lit-comms-keypair\",\n    JSON.stringify({\n      publicKey: naclUtil.encodeBase64(commsKeyPair.publicKey),\n      secretKey: naclUtil.encodeBase64(commsKeyPair.secretKey),\n    })\n  );\n  log(\"generated and saved lit-comms-keypair\");\n}\n\n/**\n * @typedef {Object} AuthSig\n * @property {string} sig - The actual hex-encoded signature\n * @property {string} derivedVia - The method used to derive the signature. Typically \"web3.eth.personal.sign\"\n * @property {string} signedMessage - The message that was signed\n * @property {string} address - The crypto wallet address that signed the message\n */\n\nexport async function signMessage({ body, web3, account }) {\n  if (!web3 || !account) {\n    let resp = await connectWeb3();\n    web3 = resp.web3;\n    account = resp.account;\n  }\n\n  log(\"pausing...\");\n  await new Promise((resolve) => setTimeout(resolve, 500));\n  log(\"signing with \", account);\n  // const signature = await web3.getSigner().signMessage(body);\n  const signature = await signMessageAsync(web3.getSigner(), account, body);\n  //.request({ method: 'personal_sign', params: [account, body] })\n  const address = verifyMessage(body, signature).toLowerCase();\n\n  log(\"Signature: \", signature);\n  log(\"recovered address: \", address);\n\n  if (address !== account) {\n    const msg = `ruh roh, the user signed with a different address (${address}) then they\\'re using with web3 (${account}).  this will lead to confusion.`;\n    console.error(msg);\n    alert(\n      \"something seems to be wrong with your wallets message signing.  maybe restart your browser or your wallet.  your recovered sig address does not match your web3 account address\"\n    );\n    throw new Error(msg);\n  }\n\n  return { signature, address };\n}\n\n// wrapper around signMessage that tries personal_sign first.  this is to fix a\n// bug with walletconnect where just using signMessage was failing\nexport const signMessageAsync = async (signer, address, message) => {\n  const messageBytes = toUtf8Bytes(message);\n  if (signer instanceof JsonRpcSigner) {\n    try {\n      log(\"Signing with personal_sign\");\n      const signature = await signer.provider.send(\"personal_sign\", [\n        hexlify(messageBytes),\n        address.toLowerCase(),\n      ]);\n      return signature;\n    } catch (e) {\n      log(\n        \"Signing with personal_sign failed, trying signMessage as a fallback\"\n      );\n      if (e.message.includes(\"personal_sign\")) {\n        return await signer.signMessage(messageBytes);\n      }\n      throw e;\n    }\n  } else {\n    log(\"signing with signMessage\");\n    return await signer.signMessage(messageBytes);\n  }\n};\n\n// export async function decryptWithWeb3PrivateKey (encryptedData) {\n//   const { web3, account } = await connectWeb3()\n//   try {\n//     const decryptedMessage = ethereum\n//       .request({\n//         method: 'eth_decrypt',\n//         params: [encryptedData, account]\n//       })\n//     return decryptedMessage\n//   } catch (error) {\n//     log(error)\n//     return false\n//   }\n// }\n//\n// async function deriveKeysViaSignature () {\n//   const { signature, address } = await signMessage({ body: KEY_DERIVATION_SIGNATURE_BODY })\n//   log('Signed message: ' + signature)\n//\n//   // derive keypair\n//   const data = Buffer.from(signature.substring(2), 'hex')\n//   const hash = await crypto.subtle.digest('SHA-256', data)\n//   const uint8Hash = new Uint8Array(hash)\n//   const { publicKey, secretKey } = nacl.box.keyPair.fromSecretKey(uint8Hash)\n//   return {\n//     publicKey: naclUtil.encodeBase64(publicKey),\n//     secretKey: naclUtil.encodeBase64(secretKey)\n//   }\n// }\n//\n// // this only works on metamask :(\n// async function deriveKeysViaPrivateKey () {\n//   try {\n//     const { web3, account } = await connectWeb3()\n//     /* global ethereum */\n//     /* eslint no-undef: \"error\" */\n//     const publicKey = await ethereum\n//       .request({\n//         method: 'eth_getEncryptionPublicKey',\n//         params: [account] // you must have access to the specified account\n//       })\n//     return { publicKey }\n//   } catch (error) {\n//     log(error)\n//     if (error.code === 4001) {\n//       // EIP-1193 userRejectedRequest error\n//       log(\"We can't encrypt anything without the key.\")\n//       error('You must accept the metamask request to derive your public encryption key')\n//     } else {\n//       console.error(error)\n//     }\n//     return { error }\n//   }\n// }\n//\n// export async function deriveEncryptionKeys () {\n//   let keypair = {}\n//   // key derivation via metamask is more desirable because then even this SDK can't see the secret key :-D\n//   const { error, publicKey } = await deriveKeysViaPrivateKey()\n//   if (!error) {\n//     keypair = {\n//       publicKey,\n//       derivedVia: 'eth_getEncryptionPublicKey'\n//     }\n//   } else {\n//     const { publicKey, secretKey } = await deriveKeysViaSignature()\n//     keypair = {\n//       publicKey,\n//       secretKey,\n//       derivedVia: 'web3.eth.personal.sign',\n//       signedMessage: KEY_DERIVATION_SIGNATURE_BODY\n//     }\n//   }\n//\n//   const { web3, account } = await connectWeb3()\n//   keypair.address = account\n//\n//   log('public key: ' + keypair.publicKey)\n//   const asString = JSON.stringify(keypair)\n//   localStorage.setItem('lit-keypair', asString)\n//\n//   // is it already saved on the server?\n//   const { pubkey, errorCode } = await getPublicKey({\n//     address: account\n//   })\n//   if (errorCode === 'not_found' || pubkey !== keypair.publicKey) {\n//     // add it\n//     const msg = `I am saving my public key so that others can send me LITs.  It is ${pubkey}`\n//     const res = await signMessage({ body: msg })\n//     await savePublicKey({\n//       sig: res.signature,\n//       msg,\n//       pubkey: keypair.publicKey\n//     })\n//   }\n// }\n\n/**\n * This function mints a LIT using our pre-deployed token contracts.  You may use our contracts, or you may supply your own.  Our contracts are ERC1155 tokens on Polygon and Ethereum.  Using these contracts is the easiest way to get started.\n * @param {Object} params\n * @param {string} params.chain The chain to mint on.  \"ethereum\" and \"polygon\" are currently supported.\n * @param {number} params.quantity The number of tokens to mint.  Note that these will be fungible, so they will not have serial numbers.\n * @returns {Object} The txHash, tokenId, tokenAddress, mintingAddress, and authSig.\n */\nexport async function mintLIT({ chain, quantity }) {\n  log(`minting ${quantity} tokens on ${chain}`);\n  try {\n    const authSig = await checkAndSignEVMAuthMessage({ chain });\n    if (authSig.errorCode) {\n      return authSig;\n    }\n    const { web3, account } = await connectWeb3();\n    const tokenAddress = LIT_CHAINS[chain].contractAddress;\n    if (!tokenAddress) {\n      log(\"No token address for this chain.  It's not supported via MintLIT.\");\n      throwError({\n        message: `This chain is not supported for minting with the Lit token contract because it hasn't been deployed to this chain.  You can use Lit with your own token contract on this chain, though.`,\n        name: \"MintingNotSupported\",\n        errorCode: \"minting_not_supported\",\n      });\n      return;\n    }\n    const contract = new Contract(tokenAddress, LIT.abi, web3.getSigner());\n    log(\"sending to chain...\");\n    const tx = await contract.mint(quantity);\n    log(\"sent to chain.  waiting to be mined...\");\n    const txReceipt = await tx.wait();\n    log(\"txReceipt: \", txReceipt);\n    const tokenId = txReceipt.events[0].args[3].toNumber();\n    return {\n      txHash: txReceipt.transactionHash,\n      tokenId,\n      tokenAddress,\n      mintingAddress: account,\n      authSig,\n    };\n  } catch (error) {\n    log(error);\n    if (error.code === 4001) {\n      // EIP-1193 userRejectedRequest error\n      log(\"User rejected request\");\n      return { errorCode: \"user_rejected_request\" };\n    } else {\n      console.error(error);\n    }\n    return { errorCode: \"unknown_error\" };\n  }\n}\n\n/**\n * Finds the tokens that the current user owns from the predeployed LIT contracts\n * @param {Object} params\n * @param {string} params.chain The chain that was minted on. \"ethereum\" and \"polygon\" are currently supported.\n * @param {number} params.accountAddress The account address to check\n * @returns {array} The token ids owned by the accountAddress\n */\nexport async function findLITs() {\n  log(\"findLITs\");\n\n  try {\n    const { web3, account } = await connectWeb3();\n    const { chainId } = await web3.getNetwork();\n    const chainHexId = \"0x\" + chainId.toString(\"16\");\n    // const chainHexId = await web3.request({ method: 'eth_chainId', params: [] })\n    const chain = chainHexIdToChainName(chainHexId);\n    const tokenAddress = LIT_CHAINS[chain].contractAddress;\n    const contract = new Contract(tokenAddress, LIT.abi, web3.getSigner());\n    log(\"getting maxTokenid\");\n    const maxTokenId = await contract.tokenIds();\n    const accounts = [];\n    const tokenIds = [];\n    for (let i = 0; i <= maxTokenId; i++) {\n      accounts.push(account);\n      tokenIds.push(i);\n    }\n    log(\"getting balanceOfBatch\");\n    const balances = await contract.balanceOfBatch(accounts, tokenIds);\n    // log('balances', balances)\n    const tokenIdsWithNonzeroBalances = balances\n      .map((b, i) => (b.toNumber() === 0 ? null : i))\n      .filter((b) => b !== null);\n    return { tokenIds: tokenIdsWithNonzeroBalances, chain };\n  } catch (error) {\n    log(error);\n    if (error.code === 4001) {\n      // EIP-1193 userRejectedRequest error\n      log(\"User rejected request\");\n      return { errorCode: \"user_rejected_request\" };\n    } else {\n      console.error(error);\n    }\n    return { errorCode: \"unknown_error\" };\n  }\n}\n\n/**\n * Send a token to another account\n * @param {Object} params\n * @param {string} params.tokenMetadata The token metadata of the token to be transferred.  Should include tokenId, tokenAddress, and chain\n * @param {number} params.to The account address to send the token to\n * @returns {Object} Success or error\n */\nexport async function sendLIT({ tokenMetadata, to }) {\n  log(\"sendLIT for \", tokenMetadata);\n\n  try {\n    const { web3, account } = await connectWeb3();\n    const { tokenAddress, tokenId, chain } = tokenMetadata;\n    const contract = new Contract(tokenAddress, LIT.abi, web3.getSigner());\n    log(\"transferring\");\n    const maxTokenId = await contract.safeTransferFrom(\n      account,\n      to,\n      tokenId,\n      1,\n      []\n    );\n    log(\"sent to chain\");\n    return { success: true };\n  } catch (error) {\n    log(error);\n    if (error.code === 4001) {\n      // EIP-1193 userRejectedRequest error\n      log(\"User rejected request\");\n      return { errorCode: \"user_rejected_request\" };\n    } else {\n      console.error(error);\n    }\n    return { errorCode: \"unknown_error\" };\n  }\n}\n\n/**\n * Get the number of decimal places in a token\n * @param {Object} params\n * @param {string} params.contractAddress The token contract address\n * @param {string} params.chain The chain on which the token is deployed\n * @returns {number} The number of decimal places in the token\n */\nexport async function decimalPlaces({ contractAddress, chain }) {\n  // if (chain) {\n  //   await checkAndSignEVMAuthMessage({ chain }); // this will switch them to the correct chain\n  // }\n  // const { web3, account } = await connectWeb3();\n  const rpcUrl = LIT_CHAINS[chain].rpcUrls[0];\n  const web3 = new JsonRpcProvider(rpcUrl);\n  const contract = new Contract(contractAddress, ERC20.abi, web3);\n  return await contract.decimals();\n}\n\n/**\n * Lookup an eth address from a given ENS name\n * @param {Object} params\n * @param {string} params.chain The chain on which to resolve the name\n * @param {string} params.name The name to resolve\n * @returns {string} The resolved eth address\n */\nexport async function lookupNameServiceAddress({ chain, name }) {\n  // await checkAndSignEVMAuthMessage({ chain }); // this will switch them to the correct chain\n  // const { web3, account } = await connectWeb3();\n  const rpcUrl = LIT_CHAINS[chain].rpcUrls[0];\n  const web3 = new JsonRpcProvider(rpcUrl);\n\n  var address = await web3.resolveName(name);\n  return address;\n\n  // const parts = name.split(\".\");\n  // const tld = parts[parts.length - 1].toLowerCase();\n  // if (tld === \"eth\") {\n  //   var address = await web3.resolveName(name);\n  //   return address;\n  // } //else {\n  // const resolution = Resolution.fromEthersProvider(web3);\n  // const address = await resolution.addr(name, \"ETH\");\n\n  // // TODO: remove unstoppable dependency because it's big.  the below code is\n  // // from the ethers ens lib.  can we make the above this small and remove the unstoppable lib?\n  // // const addrData = await this.call({\n  // //   to: network.ensAddress,\n  // //   data: \"0x0178b8bf\" + namehash(name).substring(2),\n  // // });\n  // // return this.formatter.callAddress(addrData);\n\n  // return address;\n  //}\n}\n","import {\n  fromString as uint8arrayFromString,\n  toString as uint8arrayToString,\n} from \"uint8arrays\";\nimport { throwError, log } from \"../lib/utils\";\n\nexport const AUTH_SIGNATURE_BODY =\n  \"I am creating an account to use Lit Protocol at {{timestamp}}\";\n\nfunction getProvider() {\n  if (\"solana\" in window) {\n    return window.solana;\n    // const provider = window.solana;\n    // if (provider.isPhantom) {\n    //   return provider;\n    // }\n  } else {\n    throwError({\n      message:\n        \"No web3 wallet was found that works with Solana.  Install a Solana wallet or choose another chain\",\n      name: \"NoWalletException\",\n      errorCode: \"no_wallet\",\n    });\n  }\n}\n\nexport async function connectSolProvider() {\n  const provider = getProvider();\n  await provider.connect();\n  const account = provider.publicKey.toBase58();\n  return { provider, account };\n}\n\nexport async function checkAndSignSolAuthMessage({ chain }) {\n  // Connect to cluster\n  // const connection = new solWeb3.Connection(\n  //   solWeb3.clusterApiUrl(\"devnet\"),\n  //   \"confirmed\"\n  // );\n\n  const { provider, account } = await connectSolProvider();\n\n  let authSig = localStorage.getItem(\"lit-auth-sol-signature\");\n  if (!authSig) {\n    log(\"signing auth message because sig is not in local storage\");\n    await signAndSaveAuthMessage({ provider, account });\n    authSig = localStorage.getItem(\"lit-auth-sol-signature\");\n  }\n  authSig = JSON.parse(authSig);\n\n  if (account !== authSig.address) {\n    log(\n      \"signing auth message because account is not the same as the address in the auth sig\"\n    );\n    await signAndSaveAuthMessage({ provider, account });\n    authSig = localStorage.getItem(\"lit-auth-sol-signature\");\n    authSig = JSON.parse(authSig);\n  }\n\n  log(\"authSig\", authSig);\n\n  return authSig;\n}\n\nexport async function signAndSaveAuthMessage({ provider, account }) {\n  const now = new Date().toISOString();\n  const body = AUTH_SIGNATURE_BODY.replace(\"{{timestamp}}\", now);\n\n  const data = new TextEncoder().encode(body);\n  const signed = await provider.signMessage(data, \"utf8\");\n\n  const hexSig = uint8arrayToString(signed.signature, \"base16\");\n\n  const authSig = {\n    sig: hexSig,\n    derivedVia: \"solana.signMessage\",\n    signedMessage: body,\n    address: provider.publicKey.toBase58(),\n  };\n\n  localStorage.setItem(\"lit-auth-sol-signature\", JSON.stringify(authSig));\n}\n","import {\n  fromString as uint8arrayFromString,\n  toString as uint8arrayToString,\n} from \"uint8arrays\";\nimport { throwError, log } from \"../lib/utils\";\nimport { LIT_COSMOS_CHAINS } from \"../lib/constants\";\n\nexport const AUTH_SIGNATURE_BODY =\n  \"I am creating an account to use Lit Protocol at {{timestamp}}\";\n\nfunction getProvider() {\n  if (\"keplr\" in window) {\n    return keplr;\n  } else {\n    throwError({\n      message:\n        \"No web3 wallet was found that works with Cosmos.  Install a Cosmos wallet or choose another chain\",\n      name: \"NoWalletException\",\n      errorCode: \"no_wallet\",\n    });\n  }\n}\n\nexport async function connectCosmosProvider({ chain }) {\n  const chainId = LIT_COSMOS_CHAINS[chain].chainId;\n\n  const keplr = getProvider();\n\n  // Enabling before using the Keplr is recommended.\n  // This method will ask the user whether to allow access if they haven't visited this website.\n  // Also, it will request that the user unlock the wallet if the wallet is locked.\n  await keplr.enable(chainId);\n\n  const offlineSigner = keplr.getOfflineSigner(chainId);\n\n  // You can get the address/public keys by `getAccounts` method.\n  // It can return the array of address/public key.\n  // But, currently, Keplr extension manages only one address/public key pair.\n  // XXX: This line is needed to set the sender address for SigningCosmosClient.\n  const accounts = await offlineSigner.getAccounts();\n\n  // // Initialize the gaia api with the offline signer that is injected by Keplr extension.\n  // const cosmJS = new SigningCosmosClient(\n  //   \"https://lcd-cosmoshub.keplr.app\",\n  //   accounts[0].address,\n  //   offlineSigner\n  // );\n\n  // console.log(\"accounts[0]\", accounts[0]);\n\n  return { provider: keplr, account: accounts[0].address, chainId };\n}\n\nexport async function checkAndSignCosmosAuthMessage({ chain }) {\n  const { provider, account, chainId } = await connectCosmosProvider({ chain });\n\n  let authSig = localStorage.getItem(\"lit-auth-cosmos-signature\");\n  if (!authSig) {\n    log(\"signing auth message because sig is not in local storage\");\n    await signAndSaveAuthMessage({ provider, account, chainId });\n    authSig = localStorage.getItem(\"lit-auth-cosmos-signature\");\n  }\n  authSig = JSON.parse(authSig);\n\n  if (account !== authSig.address) {\n    log(\n      \"signing auth message because account is not the same as the address in the auth sig\"\n    );\n    await signAndSaveAuthMessage({ provider, account, chainId });\n    authSig = localStorage.getItem(\"lit-auth-cosmos-signature\");\n    authSig = JSON.parse(authSig);\n  }\n\n  log(\"authSig\", authSig);\n\n  return authSig;\n}\n\nexport async function signAndSaveAuthMessage({ provider, account, chainId }) {\n  const now = new Date().toISOString();\n  const body = AUTH_SIGNATURE_BODY.replace(\"{{timestamp}}\", now);\n\n  // const signed = provider.signArbitrary(chainId, account, body);\n\n  // const data = new TextEncoder().encode(body);\n  // console.log(\"data being signed\", data);\n  const signed = await provider.signArbitrary(chainId, account, body);\n  // const hexSig = uint8arrayToString(signed.signature, \"base16\");\n\n  const data = uint8arrayToString(uint8arrayFromString(body, \"utf8\"), \"base64\"); //Buffer.from(body).toString(\"base64\");\n\n  // console.log(\"signed\", signed);\n  // console.log(\"pubkey: \", signed.pub_key.value);\n\n  // ok now we have to create the actual message\n  const signDoc = {\n    chain_id: \"\",\n    account_number: \"0\",\n    sequence: \"0\",\n    fee: {\n      gas: \"0\",\n      amount: [],\n    },\n    msgs: [\n      {\n        type: \"sign/MsgSignData\",\n        value: {\n          signer: account,\n          data,\n        },\n      },\n    ],\n    memo: \"\",\n  };\n\n  const encodedSignedMsg = serializeSignDoc(signDoc);\n  const digest = await crypto.subtle.digest(\"SHA-256\", encodedSignedMsg);\n  // console.log(\"digest length\", digest.byteLength);\n  const digest_hex = uint8arrayToString(new Uint8Array(digest), \"base16\");\n  // console.log(\"digest_hex length\", digest_hex.length);\n\n  const authSig = {\n    sig: signed.signature,\n    derivedVia: \"cosmos.signArbitrary\",\n    signedMessage: digest_hex,\n    address: account,\n  };\n\n  localStorage.setItem(\"lit-auth-cosmos-signature\", JSON.stringify(authSig));\n}\n\nfunction sortedObject(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return obj;\n  }\n  if (Array.isArray(obj)) {\n    return obj.map(sortedObject);\n  }\n  const sortedKeys = Object.keys(obj).sort();\n  const result = {};\n  // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n  sortedKeys.forEach((key) => {\n    result[key] = sortedObject(obj[key]);\n  });\n  return result;\n}\n\nexport function serializeSignDoc(signDoc) {\n  const sorted = JSON.stringify(sortedObject(signDoc));\n  return uint8arrayFromString(sorted, \"utf8\");\n}\n","import pako from \"pako\";\n\n// Contants\n\nconst skLen = 32; // bytes\nconst pkLen = 48; // bytes\nconst sigLen = 96; // bytes\nconst maxMsgLen = 1049600; // bytes\nconst maxCtLen = 1049600; // bytes\nconst decryptionShareLen = 48; // bytes\n\n// the number of bytes in a row derived from a BivarPoly\n// which varies depending on the threshold.\nconst row_sizes_by_threshold = [\n  40, // threshold 0\n  72, // threshold 1\n  104, // threshold 2\n  136, // threshold 3\n  168, // threshold 4\n  200, // threshold 5\n  232, // threshold 6\n  264, // threshold 7\n  296, // threshold 8\n  328, // threshold 9\n  360, // threshold 10\n];\n\n// the number of bytes in a commitment derived from a BivarPoly\n// which varies depending on the threshold.\nconst commitment_sizes_by_threshold = [\n  56, // threshold 0\n  104, // threshold 1\n  152, // threshold 2\n  200, // threshold 3\n  248, // threshold 4\n  296, // threshold 5\n  344, // threshold 6\n  392, // threshold 7\n  440, // threshold 8\n  488, // threshold 9\n  536, // threshold 10\n];\n\n// the number of bytes in the master secret key (Poly)\n// which varies depending on the threshold.\nconst poly_sizes_by_threshold = [\n  40, // threshold 0\n  72, // threshold 1\n  104, // threshold 2\n  136, // threshold 3\n  168, // threshold 4\n  200, // threshold 5\n  232, // threshold 6\n  264, // threshold 7\n  296, // threshold 8\n  328, // threshold 9\n  360, // threshold 10\n];\n\n// Encoding conversions\n\n// modified from https://stackoverflow.com/a/11058858\nfunction asciiToUint8Array(a) {\n  let b = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    b[i] = a.charCodeAt(i);\n  }\n  return b;\n}\n// https://stackoverflow.com/a/19102224\n// TODO resolve RangeError possibility here, see SO comments\nfunction uint8ArrayToAscii(a) {\n  return String.fromCharCode.apply(null, a);\n}\n// https://stackoverflow.com/a/50868276\nfunction hexToUint8Array(h) {\n  if (h.length == 0) {\n    return new Uint8Array();\n  }\n  return new Uint8Array(h.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));\n}\nfunction uint8ArrayToHex(a) {\n  return a.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\nfunction uint8ArrayToByteStr(a) {\n  return \"[\" + a.join(\", \") + \"]\";\n}\n\n//https://gist.github.com/enepomnyaschih/72c423f727d395eeaa09697058238727\n/*\nMIT License\nCopyright (c) 2020 Egor Nepomnyaschih\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n/*\n// This constant can also be computed with the following algorithm:\nconst base64abc = [],\n    A = \"A\".charCodeAt(0),\n    a = \"a\".charCodeAt(0),\n    n = \"0\".charCodeAt(0);\nfor (let i = 0; i < 26; ++i) {\n    base64abc.push(String.fromCharCode(A + i));\n}\nfor (let i = 0; i < 26; ++i) {\n    base64abc.push(String.fromCharCode(a + i));\n}\nfor (let i = 0; i < 10; ++i) {\n    base64abc.push(String.fromCharCode(n + i));\n}\nbase64abc.push(\"+\");\nbase64abc.push(\"/\");\n*/\nconst base64abc = [\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\",\n  \"E\",\n  \"F\",\n  \"G\",\n  \"H\",\n  \"I\",\n  \"J\",\n  \"K\",\n  \"L\",\n  \"M\",\n  \"N\",\n  \"O\",\n  \"P\",\n  \"Q\",\n  \"R\",\n  \"S\",\n  \"T\",\n  \"U\",\n  \"V\",\n  \"W\",\n  \"X\",\n  \"Y\",\n  \"Z\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"+\",\n  \"/\",\n];\n\n/*\n// This constant can also be computed with the following algorithm:\nconst l = 256, base64codes = new Uint8Array(l);\nfor (let i = 0; i < l; ++i) {\n    base64codes[i] = 255; // invalid character\n}\nbase64abc.forEach((char, index) => {\n    base64codes[char.charCodeAt(0)] = index;\n});\nbase64codes[\"=\".charCodeAt(0)] = 0; // ignored anyway, so we just need to prevent an error\n*/\nconst base64codes = [\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,\n  255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 255,\n  255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 0, 255, 255,\n  255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n  21, 22, 23, 24, 25, 255, 255, 255, 255, 255, 255, 26, 27, 28, 29, 30, 31, 32,\n  33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\n];\n\nfunction getBase64Code(charCode) {\n  if (charCode >= base64codes.length) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  const code = base64codes[charCode];\n  if (code === 255) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  return code;\n}\n\nexport function uint8ArrayToBase64(bytes) {\n  let result = \"\",\n    i,\n    l = bytes.length;\n  for (i = 2; i < l; i += 3) {\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n    result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)];\n    result += base64abc[bytes[i] & 0x3f];\n  }\n  if (i === l + 1) {\n    // 1 octet yet to write\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[(bytes[i - 2] & 0x03) << 4];\n    result += \"==\";\n  }\n  if (i === l) {\n    // 2 octets yet to write\n    result += base64abc[bytes[i - 2] >> 2];\n    result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n    result += base64abc[(bytes[i - 1] & 0x0f) << 2];\n    result += \"=\";\n  }\n  return result;\n}\n\nexport function base64ToUint8Array(str) {\n  if (str.length % 4 !== 0) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  const index = str.indexOf(\"=\");\n  if (index !== -1 && index < str.length - 2) {\n    throw new Error(\"Unable to parse base64 string.\");\n  }\n  let missingOctets = str.endsWith(\"==\") ? 2 : str.endsWith(\"=\") ? 1 : 0,\n    n = str.length,\n    result = new Uint8Array(3 * (n / 4)),\n    buffer;\n  for (let i = 0, j = 0; i < n; i += 4, j += 3) {\n    buffer =\n      (getBase64Code(str.charCodeAt(i)) << 18) |\n      (getBase64Code(str.charCodeAt(i + 1)) << 12) |\n      (getBase64Code(str.charCodeAt(i + 2)) << 6) |\n      getBase64Code(str.charCodeAt(i + 3));\n    result[j] = buffer >> 16;\n    result[j + 1] = (buffer >> 8) & 0xff;\n    result[j + 2] = buffer & 0xff;\n  }\n  return result.subarray(0, result.length - missingOctets);\n}\n\n// export function base64encode(str, encoder = new TextEncoder()) {\n// \treturn bytesToBase64(encoder.encode(str));\n// }\n\n// export function base64decode(str, decoder = new TextDecoder()) {\n// \treturn decoder.decode(base64ToBytes(str));\n// }\n\n// https://stackoverflow.com/a/12713326\n// function uint8ArrayToBase64(a) {\n//     return btoa(String.fromCharCode.apply(null, a));\n// }\n// function base64ToUint8Array(b) {\n//     return new Uint8Array(atob(b).split(\"\").map(function(c) {\n//             return c.charCodeAt(0);\n//     }));\n// }\n\n// threshold_crypto wasm calls. Since they operate on single bytes at a time\n// it's handy to have helpers to do the required looping.\n\nlet isWasming = false;\nexport const wasmBlsSdkHelpers = new (function () {\n  // s is secret key unit8array\n  this.sk_bytes_to_pk_bytes = function (s) {\n    isWasming = true;\n    const pkBytes = [];\n    try {\n      // set sk bytes\n      for (let i = 0; i < s.length; i++) {\n        globalThis.wasmExports.set_sk_byte(i, s[i]);\n      }\n      // convert into pk bytes\n      globalThis.wasmExports.derive_pk_from_sk();\n      // read pk bytes\n      for (let i = 0; i < pkLen; i++) {\n        const pkByte = globalThis.wasmExports.get_pk_byte(i);\n        pkBytes.push(pkByte);\n      }\n    } catch (e) {\n      isWasming = false;\n      throw \"Failed to generate\";\n    }\n    isWasming = false;\n    return pkBytes;\n  };\n\n  // s is secret key uint8array\n  // m is message uint8array\n  this.sign_msg = function (s, m) {\n    isWasming = true;\n    const sigBytes = [];\n    try {\n      // set secret key bytes\n      for (let i = 0; i < s.length; i++) {\n        globalThis.wasmExports.set_sk_byte(i, s[i]);\n      }\n      // set message bytes\n      for (let i = 0; i < m.length; i++) {\n        globalThis.wasmExports.set_msg_byte(i, m[i]);\n      }\n      // sign message\n      globalThis.wasmExports.sign_msg(m.length);\n      // get signature bytes\n      for (let i = 0; i < sigLen; i++) {\n        const sigByte = globalThis.wasmExports.get_sig_byte(i);\n        sigBytes.push(sigByte);\n      }\n    } catch (e) {\n      console.log(\"error signing in bls-sdk.js:\");\n      console.log(e);\n      isWasming = false;\n    }\n    isWasming = false;\n    return Uint8Array.from(sigBytes);\n  };\n\n  // p is public key uint8array\n  // s is signature uint8array\n  // m is message uint8array\n  this.verify = function (p, s, m) {\n    isWasming = true;\n    let verified = false;\n    try {\n      // set public key bytes\n      for (let i = 0; i < p.length; i++) {\n        globalThis.wasmExports.set_pk_byte(i, p[i]);\n      }\n      // set signature bytes\n      for (let i = 0; i < s.length; i++) {\n        globalThis.wasmExports.set_sig_byte(i, s[i]);\n      }\n      // set message bytes\n      for (let i = 0; i < m.length; i++) {\n        globalThis.wasmExports.set_msg_byte(i, m[i]);\n      }\n      verified = globalThis.wasmExports.verify(m.length);\n    } catch (e) {\n      console.log(\"error verifying sig in bls-sdk.js:\");\n      console.log(e);\n      isWasming = false;\n    }\n    isWasming = false;\n    return verified;\n  };\n\n  this.set_rng_values = function () {\n    // Warning if no globalThis.crypto available\n    if (!globalThis.crypto) {\n      const msg =\n        \"Secure randomness not available in this browser, output is insecure.\";\n      alert(msg);\n      console.log(msg);\n      return;\n    }\n    const RNG_VALUES_SIZE = globalThis.wasmExports.get_rng_values_size();\n    const rngValues = new Uint32Array(RNG_VALUES_SIZE);\n    globalThis.crypto.getRandomValues(rngValues);\n    for (let i = 0; i < rngValues.length; i++) {\n      globalThis.wasmExports.set_rng_value(i, rngValues[i]);\n    }\n  };\n\n  // p is public key uint8array\n  // m is message uint8array\n  this.encrypt = function (p, m) {\n    isWasming = true;\n    const ctBytes = [];\n    try {\n      wasmBlsSdkHelpers.set_rng_values();\n      // set public key bytes\n      for (let i = 0; i < p.length; i++) {\n        globalThis.wasmExports.set_pk_byte(i, p[i]);\n      }\n      // set message bytes\n      for (let i = 0; i < m.length; i++) {\n        globalThis.wasmExports.set_msg_byte(i, m[i]);\n      }\n      // generate strong random u64 used by encrypt\n      // encrypt the message\n      const ctSize = globalThis.wasmExports.encrypt(m.length);\n      // get ciphertext bytes\n      for (let i = 0; i < ctSize; i++) {\n        const ctByte = globalThis.wasmExports.get_ct_byte(i);\n        ctBytes.push(ctByte);\n      }\n    } catch (e) {\n      console.log(\"error encrypting in bls-sdk.js:\");\n      console.log(e);\n      isWasming = false;\n    }\n    isWasming = false;\n    return Uint8Array.from(ctBytes);\n  };\n\n  // s is secret key uint8array\n  // c is message uint8array\n  this.decrypt = function (s, c) {\n    isWasming = true;\n    const msgBytes = [];\n    try {\n      // set secret key bytes\n      for (let i = 0; i < s.length; i++) {\n        globalThis.wasmExports.set_sk_byte(i, s[i]);\n      }\n      // set ciphertext bytes\n      for (let i = 0; i < c.length; i++) {\n        globalThis.wasmExports.set_ct_byte(i, c[i]);\n      }\n      const msgSize = globalThis.wasmExports.decrypt(c.length);\n      // get message bytes\n      for (let i = 0; i < msgSize; i++) {\n        const msgByte = globalThis.wasmExports.get_msg_byte(i);\n        msgBytes.push(msgByte);\n      }\n    } catch (e) {\n      console.log(\"error decrypting in bls-sdk.js:\");\n      console.log(e);\n      isWasming = false;\n    }\n    isWasming = false;\n    return Uint8Array.from(msgBytes);\n  };\n\n  this.generate_poly = function (threshold) {\n    wasmBlsSdkHelpers.set_rng_values();\n    const polySize = poly_sizes_by_threshold[threshold];\n    globalThis.wasmExports.generate_poly(threshold);\n    const polyBytes = [];\n    for (let i = 0; i < polySize; i++) {\n      const polyByte = globalThis.wasmExports.get_poly_byte(i);\n      polyBytes.push(polyByte);\n    }\n    return polyBytes;\n  };\n\n  this.get_msk_bytes = function () {\n    const mskBytes = [];\n    for (let i = 0; i < skLen; i++) {\n      const mskByte = globalThis.wasmExports.get_msk_byte(i);\n      mskBytes.push(mskByte);\n    }\n    return mskBytes;\n  };\n\n  this.get_mpk_bytes = function () {\n    const mpkBytes = [];\n    for (let i = 0; i < pkLen; i++) {\n      const mpkByte = globalThis.wasmExports.get_mpk_byte(i);\n      mpkBytes.push(mpkByte);\n    }\n    return mpkBytes;\n  };\n\n  this.get_mc_bytes = function (threshold) {\n    const mcBytes = [];\n    const mcSize = commitment_sizes_by_threshold[threshold];\n    for (let i = 0; i < mcSize; i++) {\n      const mcByte = globalThis.wasmExports.get_mc_byte(i);\n      mcBytes.push(mcByte);\n    }\n    return mcBytes;\n  };\n\n  this.set_mc_bytes = function (mcBytes) {\n    // set master commitment in wasm\n    for (let i = 0; i < mcBytes.length; i++) {\n      const v = mcBytes[i];\n      globalThis.wasmExports.set_mc_byte(i, v);\n    }\n  };\n\n  this.get_skshare = function () {\n    const skshareBytes = [];\n    for (let i = 0; i < skLen; i++) {\n      const skshareByte = globalThis.wasmExports.get_skshare_byte(i);\n      skshareBytes.push(skshareByte);\n    }\n    return skshareBytes;\n  };\n\n  this.get_pkshare = function () {\n    const pkshareBytes = [];\n    for (let i = 0; i < pkLen; i++) {\n      const pkshareByte = globalThis.wasmExports.get_pkshare_byte(i);\n      pkshareBytes.push(pkshareByte);\n    }\n    return pkshareBytes;\n  };\n\n  this.combine_signatures = function (mcBytes, sigshares) {\n    // set master commitment in wasm\n    wasmBlsSdkHelpers.set_mc_bytes(mcBytes);\n    // set the signature shares\n    for (let shareIndex = 0; shareIndex < sigshares.length; shareIndex++) {\n      const share = sigshares[shareIndex];\n      const sigHex = share.shareHex;\n      const sigBytes = hexToUint8Array(sigHex);\n      const sigIndex = share.shareIndex;\n      for (let byteIndex = 0; byteIndex < sigBytes.length; byteIndex++) {\n        const sigByte = sigBytes[byteIndex];\n        // NB shareIndex is used instead of sigIndex so we can interate\n        // over both\n        // SHARE_INDEXES[i]\n        // and\n        // SIGNATURE_SHARE_BYTES[i*96:(i+1)*96]\n        globalThis.wasmExports.set_signature_share_byte(\n          byteIndex,\n          shareIndex,\n          sigByte\n        );\n        globalThis.wasmExports.set_share_indexes(shareIndex, sigIndex);\n      }\n    }\n    // combine the signatures\n    globalThis.wasmExports.combine_signature_shares(\n      sigshares.length,\n      mcBytes.length\n    );\n    // read the combined signature\n    const sigBytes = [];\n    for (let i = 0; i < sigLen; i++) {\n      const sigByte = globalThis.wasmExports.get_sig_byte(i);\n      sigBytes.push(sigByte);\n    }\n    return Uint8Array.from(sigBytes);\n  };\n\n  // s is secret key share bytes\n  // ct is ciphertext bytes\n  // uiShareIndex is the index of the share as it appears in the UI\n  // derivedShareIndex is the index of the share when derived from the poly\n  this.create_decryption_share = function (\n    s,\n    uiShareIndex,\n    derivedShareIndex,\n    ct\n  ) {\n    // set ct bytes\n    for (let i = 0; i < ct.length; i++) {\n      globalThis.wasmExports.set_ct_byte(i, ct[i]);\n    }\n    // set secret key share\n    for (let i = 0; i < s.length; i++) {\n      globalThis.wasmExports.set_sk_byte(i, s[i]);\n    }\n    // create decryption share\n    const dshareSize = globalThis.wasmExports.create_decryption_share(\n      uiShareIndex,\n      ct.length\n    );\n    // set derivedShareIndex\n    globalThis.wasmExports.set_share_indexes(uiShareIndex, derivedShareIndex);\n    // read decryption share\n    const dshareBytes = [];\n    for (let i = 0; i < decryptionShareLen; i++) {\n      const dshareByte = globalThis.wasmExports.get_decryption_shares_byte(\n        i,\n        uiShareIndex\n      );\n      dshareBytes.push(dshareByte);\n    }\n    return Uint8Array.from(dshareBytes);\n  };\n\n  // Assumes master commitment is already set.\n  // Assumes create_decryption_share is already called for all shares,\n  // Which means ciphertext is already set\n  // and decryption shares are already set\n  // and share_indexes is already set\n  this.combine_decryption_shares = function (totalShares, mcSize, ctSize) {\n    // combine decryption shares\n    const msgSize = globalThis.wasmExports.combine_decryption_shares(\n      totalShares,\n      mcSize,\n      ctSize\n    );\n    // read msg\n    const msgBytes = [];\n    for (let i = 0; i < msgSize; i++) {\n      const msgByte = globalThis.wasmExports.get_msg_byte(i);\n      msgBytes.push(msgByte);\n    }\n    return Uint8Array.from(msgBytes);\n  };\n})();\n\nlet wasm;\n\nlet cachedTextDecoder = new TextDecoder(\"utf-8\", {\n  ignoreBOM: true,\n  fatal: true,\n});\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (\n    cachegetUint8Memory0 === null ||\n    cachegetUint8Memory0.buffer !== wasm.memory.buffer\n  ) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n/**\n * @private\n * @returns {number}\n */\nexport function get_rng_values_size() {\n  var ret = wasm.get_rng_values_size();\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_rng_value(i, v) {\n  wasm.set_rng_value(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_sk_byte(i, v) {\n  wasm.set_sk_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_sk_byte(i) {\n  var ret = wasm.get_sk_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_pk_byte(i, v) {\n  wasm.set_pk_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_pk_byte(i) {\n  var ret = wasm.get_pk_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_sig_byte(i, v) {\n  wasm.set_sig_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_sig_byte(i) {\n  var ret = wasm.get_sig_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_msg_byte(i, v) {\n  wasm.set_msg_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_msg_byte(i) {\n  var ret = wasm.get_msg_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_ct_byte(i, v) {\n  wasm.set_ct_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_ct_byte(i) {\n  var ret = wasm.get_ct_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @returns {number}\n */\nexport function get_rng_next_count() {\n  var ret = wasm.get_rng_next_count();\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_poly_byte(i, v) {\n  wasm.set_poly_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_poly_byte(i) {\n  var ret = wasm.get_poly_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_msk_byte(i, v) {\n  wasm.set_msk_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_msk_byte(i) {\n  var ret = wasm.get_msk_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_mpk_byte(i, v) {\n  wasm.set_mpk_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_mpk_byte(i) {\n  var ret = wasm.get_mpk_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_mc_byte(i, v) {\n  wasm.set_mc_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_mc_byte(i) {\n  var ret = wasm.get_mc_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_skshare_byte(i, v) {\n  wasm.set_skshare_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_skshare_byte(i) {\n  var ret = wasm.get_skshare_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_pkshare_byte(i, v) {\n  wasm.set_pkshare_byte(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_pkshare_byte(i) {\n  var ret = wasm.get_pkshare_byte(i);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} from_node\n * @param {number} to_node\n * @param {number} v\n */\nexport function set_bivar_row_byte(i, from_node, to_node, v) {\n  wasm.set_bivar_row_byte(i, from_node, to_node, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} from_node\n * @param {number} to_node\n * @returns {number}\n */\nexport function get_bivar_row_byte(i, from_node, to_node) {\n  var ret = wasm.get_bivar_row_byte(i, from_node, to_node);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} from_node\n * @param {number} v\n */\nexport function set_bivar_commitments_byte(i, from_node, v) {\n  wasm.set_bivar_commitments_byte(i, from_node, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} from_node\n * @returns {number}\n */\nexport function get_bivar_commitments_byte(i, from_node) {\n  var ret = wasm.get_bivar_commitments_byte(i, from_node);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} node_index\n * @param {number} v\n */\nexport function set_bivar_sks_byte(i, node_index, v) {\n  wasm.set_bivar_sks_byte(i, node_index, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} node_index\n * @returns {number}\n */\nexport function get_bivar_sks_byte(i, node_index) {\n  var ret = wasm.get_bivar_sks_byte(i, node_index);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} node_index\n * @param {number} v\n */\nexport function set_bivar_pks_byte(i, node_index, v) {\n  wasm.set_bivar_pks_byte(i, node_index, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} node_index\n * @returns {number}\n */\nexport function get_bivar_pks_byte(i, node_index) {\n  var ret = wasm.get_bivar_pks_byte(i, node_index);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} sig_index\n * @param {number} v\n */\nexport function set_signature_share_byte(i, sig_index, v) {\n  wasm.set_signature_share_byte(i, sig_index, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} sig_index\n * @returns {number}\n */\nexport function get_signature_share_byte(i, sig_index) {\n  var ret = wasm.get_signature_share_byte(i, sig_index);\n  return ret;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} v\n */\nexport function set_share_indexes(i, v) {\n  wasm.set_share_indexes(i, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @returns {number}\n */\nexport function get_share_indexes(i) {\n  var ret = wasm.get_share_indexes(i);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} share_index\n * @param {number} v\n */\nexport function set_decryption_shares_byte(i, share_index, v) {\n  wasm.set_decryption_shares_byte(i, share_index, v);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} share_index\n * @returns {number}\n */\nexport function get_decryption_shares_byte(i, share_index) {\n  var ret = wasm.get_decryption_shares_byte(i, share_index);\n  return ret;\n}\n\n/**\n * @private\n */\nexport function derive_pk_from_sk() {\n  wasm.derive_pk_from_sk();\n}\n\n/**\n * @private\n * @param {number} msg_size\n */\nexport function sign_msg(msg_size) {\n  wasm.sign_msg(msg_size);\n}\n\n/**\n * @private\n * @param {number} msg_size\n * @returns {boolean}\n */\nexport function verify(msg_size) {\n  var ret = wasm.verify(msg_size);\n  return ret !== 0;\n}\n\n/**\n * @private\n * @param {number} msg_size\n * @returns {number}\n */\nexport function encrypt(msg_size) {\n  var ret = wasm.encrypt(msg_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} ct_size\n * @returns {number}\n */\nexport function decrypt(ct_size) {\n  var ret = wasm.decrypt(ct_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} threshold\n */\nexport function generate_poly(threshold) {\n  wasm.generate_poly(threshold);\n}\n\n/**\n * @private\n * @param {number} poly_size\n * @returns {number}\n */\nexport function get_poly_degree(poly_size) {\n  var ret = wasm.get_poly_degree(poly_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} mc_size\n * @returns {number}\n */\nexport function get_mc_degree(mc_size) {\n  var ret = wasm.get_mc_degree(mc_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} poly_size\n */\nexport function derive_master_key(poly_size) {\n  wasm.derive_master_key(poly_size);\n}\n\n/**\n * @private\n * @param {number} i\n * @param {number} poly_size\n */\nexport function derive_key_share(i, poly_size) {\n  wasm.derive_key_share(i, poly_size);\n}\n\n/**\n * @private\n * @param {number} threshold\n * @param {number} total_nodes\n */\nexport function generate_bivars(threshold, total_nodes) {\n  wasm.generate_bivars(threshold, total_nodes);\n}\n\n/**\n * @private\n * @param {number} total_signatures\n * @param {number} commitment_size\n */\nexport function combine_signature_shares(total_signatures, commitment_size) {\n  wasm.combine_signature_shares(total_signatures, commitment_size);\n}\n\n/**\n * @private\n * @param {number} share_index\n * @param {number} ct_size\n * @returns {number}\n */\nexport function create_decryption_share(share_index, ct_size) {\n  var ret = wasm.create_decryption_share(share_index, ct_size);\n  return ret >>> 0;\n}\n\n/**\n * @private\n * @param {number} total_decryption_shares\n * @param {number} commitment_size\n * @param {number} ct_size\n * @returns {number}\n */\nexport function combine_decryption_shares(\n  total_decryption_shares,\n  commitment_size,\n  ct_size\n) {\n  var ret = wasm.combine_decryption_shares(\n    total_decryption_shares,\n    commitment_size,\n    ct_size\n  );\n  return ret >>> 0;\n}\n\nasync function load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\n            \"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",\n            e\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\n\nasync function init(input) {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbindgen_throw = function (arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n\n  const { instance, module } = await load(await input, imports);\n\n  wasm = instance.exports;\n  init.__wbindgen_wasm_module = module;\n\n  return wasm;\n}\n\nexport default init;\n\nexport async function initWasmBlsSdk() {\n  var b = \"\";\n\n  b +=\n    \"eNrsvQuAVVd1MHzOPs/7mnvnAQzvc29IMmBMgMCAeRAuCRBCIjGJGl8lBCaE4f2Iku+fwKhUSYJ\";\n  b +=\n    \"1rNRiy9dOK/1DW6Kj0n70a1onSiut2M6vUamldVSqWGm/UdP+9PvQfOt1ztnn3jsPkhg1XpK5Z+\";\n  b +=\n    \"+1H2fvtdZee62z11nHWLNzs2kYhnlYXfmA2rvXeMDai7+QNPc+YELKxAQC4WLvpUJnL1+haM8DB\";\n  b +=\n    \"sDdvQLx9oYpqgpFhvFAam/4L64KKX9vVNkJYZm9e/XKXpyMO8Eh7tnDQ9wTwvcgBKrviTp8TK5d\";\n  b +=\n    \"PJ09OKTHeGRd0gnPrItn1sUz3oOwPXujSe9B0B7ValrvenB9YfXqdz24Ycu69R1bVu96eMfWdxm\";\n  b +=\n    \"GdcH/V18BAg3Dsw3851mWhRg1bMszTLPJNV0H4aZpKgfylmE6BaPFzOTNloxrKNdzlelBqWsaWc\";\n  b +=\n    \"O0XFMZ+bRrmgY0U56pLEsp17A8zzUd01YqayosyzuuF0AGurZNw80aruEow5aGUHW6MqBLKHJMw\";\n  b +=\n    \"3JdVykzbbqW4Ziu4dquwkE5puPaOZfGm7YM18VxYknOVMowXRfm4hgm9eQaE6AOFrqNpsI2tipg\";\n  b +=\n    \"EyhW+ANTgOZpy2um/mBYpm03QvW0BahJ0zjhloAAvJYMZcG9oL3juum0iXWgDG5guePhLinsE0Z\";\n  b +=\n    \"t2qZrw1CoUSvcFyopqEsAczyUG66lZDr4MwNGi7fHqQBeLU8R8mHOMM6GBmyFpRbgxnZdqWhaiG\";\n  b +=\n    \"1Am+tOxmEq+IHBwPSBfIhP26bZwaABbFrcCWT5Xx6pC/cBMvgAgzHRXLEcrzAez0OIDw0t207ja\";\n  b +=\n    \"C3bI4YB8irHxyGYljUOqI2IgAy0nIZ8YdDIadgWDVbBsGGAyqIRY384Abg/0MvAQSqFfSqTSqHY\";\n  b +=\n    \"tgzbVjgNGL3lQgb+ecCgloXNDQ/+MzzAq01EY4QgAaFF2spafFvoCgaIGYsobhiFgm3ZVs7IAZv\";\n  b +=\n    \"YViZD0wFywhzwTgBAzoUJEtco6hX52UJIClcK468IeRMb4RQtJCi0gsVzhRH/ozWl8nb8j2qnJk\";\n  b +=\n    \"1s9GhIeC9INDc0NOEf8G0K/iEhbEM5CucDawfXZcbGkSpYnwpXH64RWJqIL8QgsARSEv7GIZJt2\";\n  b +=\n    \"yESuDR4pLrjMOltGj5i30ZkO8ohrOdsJDpVDX8BQANGQjtIBkzRLRT/EATZ0yaM2HaKqAb/W6mc\";\n  b +=\n    \"D/9wKj4wj+2Z28yPwH8OTHiu+5bMXrPc3d1vZPYa5cGv8LX7q3L9J74el2v3t/jaK+X9Z/ja9zV\";\n  b +=\n    \"p/3XJY32vb96fKndzx+atOx5VRvP6jl2rd2xZv/qdazY90rFz9c4N/63D+Cc/t1MHG3/jZhCwc+\";\n  b +=\n    \"PqBx/d1WF83c2s17IXuHSbZP+RS8Psv7lZarthPefPutn1ev7fuXzzTsn/E5dH+f/Fva/dxdl/5\";\n  b +=\n    \"t7D7JDbFM5gS8dugG99ZMsu48s8gW1bNz3K1b7h5tYnAD8I7yqjHAzvKvkfSnk4i29KeZj/EY9q\";\n  b +=\n    \"81rOfotHFWafdwuMr50Pr9nRwbBvu4X1lbD/4HrbdNg5rpeA/afbhPUe3PDONTtWw+7E0Pfw3Cu\";\n  b +=\n    \"gH3QnxXXXbt28ecOuzR1bdu3k0j90J60fvvQZ/T4wUob+kX6fCPoXet1tIfSP9boR9C/dVuGBLW\";\n  b +=\n    \"t2PQKz0uZ2zG1dP1zZZ9xGakcQ2J47dnfsNP7WbVxfBRzgWa/rWLvj0W27NmzdwuVy/6d51sOU9\";\n  b +=\n    \"ruN6zp2bHhnB/LsQzu2boZJGv/s+zgk5EPjOd99J1R46FHjK77XsYU6Mb7qe9Kf8TUfuGtLx441\";\n  b +=\n    \"uzqIxYwzfj5it3Ud63d0dBj/4OeEQwTwdT+86+Y1O3d17Fi9seNR4x/9ggAhx4M0+rAz6Z3wutP\";\n  b +=\n    \"4pN8KtAOFpaMSbzuNT/kT1u7owMqV0zU+7U8Mm1WhwtjvFx7ctBMGPWf1hp2rO7Y/smaT8ef+hB\";\n  b +=\n    \"C25qGHsF1UdMmS6nNjWH9YfW5V9R9bOSp6aNucuau3bukw/sVvigFRtZ/o1TY/ssn4XRnV5g2bN\";\n  b +=\n    \"gGONm3dus34Va+BK23YsmbT6o7d24yTic62rF6/Y+sj2wx/XAykukLEAZOHCS3XbFm3enPHzp1r\";\n  b +=\n    \"1nes3r15nfF9cyIV7Vy7ZhMwMDHDg8yMO41ZzTy7NRt2bAB5g6Jy60PGd/zGBHjDlg27jB43SAD\";\n  b +=\n    \"XPrxx9ZbVa9avx0VBI5xjfNgbrc5c44PeVTXqAGKqejs4xppzjR6P8YLQjvXAKOuki2/VLphrfN\";\n  b +=\n    \"tLzpzlhvEFuykB3tyxY32H8ZTZmoDqmP8rf1KibMead8V3Mz5itiRK1+wk2hknbOaBR7Zs2B5i/\";\n  b +=\n    \"f8XHiAYofy0r0GAXLuMXlPGN2fn6l1bhSWNPzSviqCAHkhs2LatY8t64K6da2GRrX04vEe3M2GY\";\n  b +=\n    \"msYfhV3P1bvecFUEHLnnd4c9V9U0Pm/GN921YVOHVvRfWquKov/tZKgIpAbICuNWRiRsZjC4bRv\";\n  b +=\n    \"nCoEfV3mCP7xm58NYAqTd7zJpSdbFNT8pRHywY8u6DWu2iFSkRWE8abXWWCNUz/i2yoV3Xvtwx9\";\n  b +=\n    \"qNxhdkESYkyIYtsGyslsoCuvMBszGEx4g9oCrlELDgNpBaO42DqrWiaCfw2ppNqMd8NmIA4Iqox\";\n  b +=\n    \"Qm/OYSu64gr/1kMpinJrf/anBL1v27d6q07Vq/b+siDgHwp/w1tgnq5MSirKSEMceYDdktlAa2y\";\n  b +=\n    \"/wpnPleb+d+rSpEazeNz4UKbWz3z/1Ihf+oz/4twinMTM/9LPxeJchrJcSeqp6PiaTUlumEtVPy\";\n  b +=\n    \"2P65mufFNjxvCTjN3fvvqBzdtXbtx9bo1u9ZAHdjujA+amSV33gtS+vqFc1bvsMyclrvnHkvldn\";\n  b +=\n    \"SsW7t689Ytu1ZDe+O014xyjfI7t8F+2EHgP/OyISXWbulYb/x3T+v1bsvKIhRarQPAPOOIOS5B7\";\n  b +=\n    \"s41a7c+iCz8P6r2PNgj1z6y450dxlesDE4s7GJ3tGFGNY6bDZt2PrzhoV1RpX1mjvqn0SLg4Yi/\";\n  b +=\n    \"YwqcV40712+ZvXrbrkfjip1R9xEBz5jZeEr37LZsPXuPJUKAWdH4sJ/Z+ciD0UB+N14MOAmh2UG\";\n  b +=\n    \"RmrgYmFj/U5gkFB6yLj/ia/daPsdym3S5IYzzm34NaTLXeEJFlEFpZ/yWmSPpQGND0v1QjdcWKh\";\n  b +=\n    \"bB3kNV91kNmlaCy+cpO0KgqEVbdxjf9iulgF7GXWxes42E3hzjkGzZoMptXdcRAt0K4TjHeL+bi\";\n  b +=\n    \"25OSPh8OJG5zGL/wx2XWCgREz3j5yIWBeTvNhp07M21vMpVHXHQJ+1Ir4pgmyLBELPMabOpimV2\";\n  b +=\n    \"G8WoccQzezLaojQ+6jfpa1S44LdCLpgbcsFnanHBXOOwX032OcZ/92vtN3ONPjNCFxHz0+Z4TSr\";\n  b +=\n    \"pZP59u0HTJpHMP1LRpGNSnvMrRZ5eliTzXON3qsk81/ioq2mYO7fvMJ6VPgmw9tG1m7bu2rp5w1\";\n  b +=\n    \"oq+6zIglAdBUVw9e5HZ8/+b7ONXkEQN9u6pfMR0mFeEO4UTRT0np0dxuf0boBRYLfc8MhOHKnxx\";\n  b +=\n    \"kJCC0bN+BtKmGpHBxLxEdDkN8FUdxofFfRpurCULEsqTmTrgAL0O970pEIVqloxQT/gXZnU4SKF\";\n  b +=\n    \"saLir43W1xzjQ2Pra47x615LUtEM9ROzFnyu8eeila/dCmYOq5JxZ8esYQvnGk9bWcEv0nOX8dd\";\n  b +=\n    \"+SB7E9k6wOcAs+rzfsnZXnI8k5paQU+Zy41ORlTFXa/27Tj7qUuj9N7IeANTxyNpNGrwQdyCwj9\";\n  b +=\n    \"vjIlii8sdt6XdHBPqW0xKCElW/5WQjnREX+V9F647zv6GuTCqy73pwA5j8GoOJXvo/vWkjVzTOe\";\n  b +=\n    \"aVaNSr020+EBkOiltEXMsjcUcbx5+E4hqto/Es4jrkjjeOT4TgStYxPec1A0CoF4hkvqwtt4y+8\";\n  b +=\n    \"bFQN83/pRds/Vj9mRvsrZs+ZBZEQ10ew73hJGPbyXU9XEbDWn5ixaoL5H5jNeJ8tq5Ob5NZmvF0\";\n  b +=\n    \"ltEtTLzD/flPTlvB+X/QadiTv911Th2CdPzAL6za8E8c5N4L9sVnQNhiG/a3fWAnbbXxNNSGa2N\";\n  b +=\n    \"iU215v/JOT05A3d7exvAkXGXNsNJS/8yqheJu/9zI4nOtBum1+cKfxhJV9Z8dapP5DHUBc419lE\";\n  b +=\n    \"Ys6+fDardseNb7tFHRgBxqoH1GJig9SxY9bIU0WRjc87zVW0mm38V9uY2XF3cb/dlsFOGf1tk0g\";\n  b +=\n    \"xDfEZSetrKYe7ja+5GY1BWy38WVXRwkAPuBktz+yddfqHR2bV8+Zu9DoV5ko3z7POG1lwuWOq/h\";\n  b +=\n    \"7XpSFbo1/9QphNhy78f3wyQjsDkRh40IMYZob/xZ3gw9YPqP1CjtevyjRkCUN51dVOszv2mo8FZ\";\n  b +=\n    \"ci1xn/LutL8qGF+AmrucpCfGiHcUpMvggsNuJRK9I1NL43/pcXgTXGN4ZiMG8wDP6GmQ/BoVjcp\";\n  b +=\n    \"zKhGEb8/cCLsoi/H4b42xbj70dVsIXG8yEGt4U4/Y+4I8Tgs1q/qDN40ZZDGPyclw7zgMGjcSlh\";\n  b +=\n    \"8D9DDHJ+9SMbtuy6fi5UYzBnBYPbatYGRtFrt8/TarckaodG+t8KHRLGPdT/bTtZf5PUH5L6myr\";\n  b +=\n    \"qf8zORlsXIvgLbpxHDJ92G6N8hOLvVgMXGufdfAQUJH9P6wyxPOBl9d3Y+Ikd786E579yJ1QxnW\";\n  b +=\n    \"DzC/LgRMemsOppp3YrwOoRd0IVVqXVH7jVj0BCbA3ardXYknaDdnK9yJ2eqkW/HbC6Jta4izyMn\";\n  b +=\n    \"FNd9nDH7jU7127YYPxe9OSzouB9XiE2Q16/dDkacn4laK6V0oyVbbOtdKpPmUbZzPyG+Qn7Cf97\";\n  b +=\n    \"/ofg79PuPv+kt/1x/xve19VvOt/zj3jf8//K+7L6EKT/P0h/z/8/9r9Z3/P/BFLHfcw/6b8fft8\";\n  b +=\n    \"PZR92v+f/NvwdgPwH/Mf9H0GbfucAlHwTIN+Av2/5XOs34O/X/X3ex+A6CLDf98/6v+fi337vX9\";\n  b +=\n    \"3/cP5Ofcn7Z+fv/H92eqwXrG6bW73f+1eo+1XzS97n3C+6f+p92P11/7vQ99+5Z9SXreedf/B+3\";\n  b +=\n    \"/t99yn3Y/7nna97B50/hDt/3nmP/xvOe/2z3knv/c5/2M+b3/PP+3/s/6H/IfO91kedP/Lf5/9Y\";\n  b +=\n    \"fcS5oL7vdnuPez9xH/degBT+dXufsvGX//ux+5te+sSHpsAY7lXr91p7rjDKQ97GkpphBGab6lZ\";\n  b +=\n    \"FI1DlU0ZnYBa+5qnFAWTb1J0rcghevJGgCLnNXhyY5YOqs00ZRRuSPZyEXsoHOOlC8qjqLN2JmS\";\n  b +=\n    \"xkjjE8A8k+1TnTMoqdeM/9qpiGzg+ZnaWJUNQLRcoobVhg4S2PAjQXSOYEZBrCzCnINEoGmh2CO\";\n  b +=\n    \"90lDXtMAMG1V659cu2Ha3kA5qbKPWZnud8oPO1PChqDTuykgS85vqgg+3SQeXpJ8L59pQ1LrK7S\";\n  b +=\n    \"xkWKmp80O4ONS4L9ixRW2rBEURHeoXy8osjsKm1YpHAQ5SNQtCEqgjscwiFl2tVBvGbbFQzZLO9\";\n  b +=\n    \"XncXXQ+0hW4ZY+A8LEvsdwlsekcTJAmKGkzORGt1O8bV43ecUr8XrAad4HV57nOJsvB50inPwet\";\n  b +=\n    \"gpzsVrr1Och9cjTnE+Xo85xXa8DtnFBXh93i4uxOtFu/g6vF6yizfALfvNzuIkuPY6nUXggnIf5\";\n  b +=\n    \"CfjSCHvIxzyU+DaDfkUwr3OYoB5uBZxXm5nsQTXi1A+FUkB8Cvgeh7y07B/yM+A6xnIT8f+IX8l\";\n  b +=\n    \"wgEvV2EerlfjfeDahu3huhLvA9e7MQ/3v778L0PPPukWbyz/+6l3f9Qq3lT+1Nf3f8Er3lx+/m/\";\n  b +=\n    \"f/Q9ucVE5XVwV2MCQyIluMRekiw2Qb4R8E+SbId8C+XGQHw/5CZBvlba3SF+Lpe+y3GuJlN8q5b\";\n  b +=\n    \"dJ+VIpXyblyyV/u5SvkPp3WIuDicEd7cQcdrs6oOBqtMPKgKvbrvbhNd0Oq5OZ5ZIwz0W85trV8\";\n  b +=\n    \"3htaFdDeG1sVxfw2tSuzuO1uV2dw2tLuxrE67h2dRav49vVGbxOaFfP4bW1XQ3gdVG7Oo3Xm9vV\";\n  b +=\n    \"Kbze1K5O4vXGdloAwS3t6hm8Lm5XJ/BablfH8bqknVZBcGu7OobX29rVUbwubVdH8LqsnZZCsLx\";\n  b +=\n    \"dHcbrCmH+24n57+aVyWsSRIcK2gEPwP3BTMADXucDHvA6D/CA17mAB8RHAfCA1zmAB7zOBjzg9T\";\n  b +=\n    \"rAA17zgAe8Xgt4wOtrAQ94vQHwgNfXAR7wuhDwgNcFgAcli/D6UEbAcvM6S04wEaQWiwc1E8QMi\";\n  b +=\n    \"BhcBwNOZ8mCyj7IKhBBXOF6Sp1yeCUj13r4e8rpLPzQCZxgClZ/bVR9CqWgOytIYcmsqCQVdjSl\";\n  b +=\n    \"upPJWPXaqOrkuBMfS14TlfhhJ5OrO5mEVa+Lqk6KO/Gw5JqoxAs7mVTZCWdXxugCeFLKwqq2Oks\";\n  b +=\n    \"G1IEuG6IuV1JqAMXcIbuzZFdjuMeOJOKARZ3anYXvWrAxXYldNUZdXRl2ZQfTsSQdlUynFHSUqu\";\n  b +=\n    \"5kBlZtiqrOiDuZhiXZqGRa2Ilf3ckVWLU5qnpF3MlULMlEJVPDTrzKTlR50O3kmYYoQ+B5t7PUo\";\n  b +=\n    \"qNk0BWmYpQg/g+4ULWENxoX3agUkiqlVypipfFRpWJYydcrBVhpQlQpCCt5caWQvtpgeUAruYiB\";\n  b +=\n    \"pXxY6AQudtoaderGPBbzQj68k1vNo23YfnZUtS1uX2OhtFW3vxrbz4mqXh23r7FGrq5ufxW2nxt\";\n  b +=\n    \"VvSpuX2N5XFV7eVyfXB5umAWlo0JqEOtUYmv4hVBzDYyN/Wty/tiYvia/v2hWH43JH0fWHIG/qX\";\n  b +=\n    \"wE1qbyEbj68RG4+voEVxdirq61HVgaNQuj7AE1xf/YJH9NoT82eV9T1I9dyudHkPJG1XImrrgMo\";\n  b +=\n    \"f7LwMtPjsLLT47Cy0+OwstPjsDL+QQvz4x5eRThPHME4fwS5PJLEMkvURoXxiCNC3VpXJuDnxiF\";\n  b +=\n    \"g58YhYOfGIWDn6jJwQWdd8EInihmMRi6Jhu0B002aA+bbND2mmzQHjHZoD1qskF7zESDtg0sluK\";\n  b +=\n    \"NeD1uFm/C6wmzeDNenzGLi/DabxZvwetJs7gYr6fMYhmvp83iErw+ZxZvxesZs3gbXs+axaV4HT\";\n  b +=\n    \"CLy/B6ziwux+t5s3g7Xi+YxRV4HTSLd5ChbRbfQIa2WbyHDG2zeC8Z4mbxPjLoVfGNeN2vim8iw\";\n  b +=\n    \"14V30wGvyreL88yIsbF26viW+j2qvhWGp4qvo2Gp4pvp9ur4jvo9qr4KzQ8VVxNw1PFB+j2qriG\";\n  b +=\n    \"bq+KD9LwVHEtDU8V19HtrWIH3d4qPkTDs4rraXhW8eGIYJEZh1IF1H6jU2emu8VmYl6ChVh4Dy7\";\n  b +=\n    \"myvUBdVJ6eeUigHJfL6/kdCj34vJQAGi8NBENQ6x/v9jbbxZ7+01ib79R7O37xN6+V+zte8Tefo\";\n  b +=\n    \"PY23eIvb1C7O3bxd5eLvb2MrG3l4q9fZvY27eKvb1E7O2y2NuLxd6+ReztRWJv3yz29k1ib98o9\";\n  b +=\n    \"vYNYm+/TuzthWJvLxB7u13s7flib88je1ukuCwlWEPBw2Jvrxd7+yGxtzvE3l4n9vZasbcfFHt7\";\n  b +=\n    \"jdjbD4i9vVrs7V8Re/sdYm+/Xeztt4m9/Vaxt9+i2du/7KrVzDGqVjPrqtVItvBoZvBoFvCLNH5\";\n  b +=\n    \"nJlQrt5Zqla+lWrnhTfKvTtUqP2bVKl9XrX6mhm6hbuhqbOyOURq7dWn8c2jounVpXJfGrwZDdx\";\n  b +=\n    \"LbuXeInXu72LkrxM5dLnbuMrFzl4qde5vYubeKnbtE7Nyy2LmLxc69RezcG8XOvUns3JvFzl0k9\";\n  b +=\n    \"uwEsXfHi707TuzdVrFnm8XebRJ7t1Hs3RaxZ3Ni72bE3s2Kvdsg9qwr9q4h9q4t9m66km/ZDp0p\";\n  b +=\n    \"dud8sUPniV3aLnZsQezWOWLHzha7dq7YwXmxe68VO/i1YhdfJ3b068RuXih29AKxq2/Q2SMWKpb\";\n  b +=\n    \"OR6ccMXKjvZCN1EpJAXWm6OWV4gDKJ+vllWseyifpRm6NQzf2dtCGuqq8t7O0KmdkAnOmdVShC8\";\n  b +=\n    \"ZMq08VN0C107BcFpFVXD4FyZs5eRKSN3HyGUjewskTkFzMyeOQLHPyGCRv5eRRSN7GySOQXMrWN\";\n  b +=\n    \"p4iW3JabMmpsCWnwhZb04csOR225HQYl+4BQLnNve2HpMHJfSjnOXkJ7pHl5EVIZjj5PCRznLwA\";\n  b +=\n    \"yUZOnodkEyfPQbKZh4YH7LYcpFtyYG7JgbklB+aWHJhbcmBusXhJPvVQ5cMgdtv5BofQrOPkQUj\";\n  b +=\n    \"O5+QBSM6V6aCIlulAco5MB0TVdTIdSOZlOpC8lkeLZrzHx93dHh9rD7n8OOCCy48Dzrv8OOCcy4\";\n  b +=\n    \"8DBlHWnLHRbeb1ZT9+KvN6Sg2gnD8PpU3BXXrpXZQaxNIzML7Q+yZOnoiTRyF5p964U1xnBnA1P\";\n  b +=\n    \"Ofp/jGd4jrTj0UnK4pM9qrBouOJojupa1xceE/youlcYneVOhepHs5gzYNmcKd40HwE+1gou1fh\";\n  b +=\n    \"uBcvEyva0toUrfKbCn/tsMsR7hXkXsNo7yXIGSeaFzkrNcvJv1u59HEg5dnhznPc0z168D4kiuY\";\n  b +=\n    \"VvmlHEgJF/2zhnbZO3qkSY+WGbfhzTeGHcUNc2CdDrgtCYVN9ywB/ZhR+lLzlGWqpFrMkL9ksyV\";\n  b +=\n    \"fYi3Elm50ousnnZxwSD67jy0YxW0YfMWsxeqqUzU5+uBXe5pQZ2OiiRTsNOm7R1tRZyhS+6oEgb\";\n  b +=\n    \"w4okQlaghwmcsG4oAETDcH4wMYEju+Q21maEGSQjUJxx9t7D/LvUShtDXJ6KasxvVh6wsW7Nuil\";\n  b +=\n    \"rNn10T7r4uBsvdSmVD+WnvfQ/yCtl7IyMwjoXIKeOp//+Ed7vo9LBdhkCbryfOcDH+25XnSGAVI\";\n  b +=\n    \"uBnX9C3G1LKcCM8h2ltLlAiulZ1z0CNB4ZiBUO+LGn/ZoIDA8qGcYQZrUEw+TNqgTupHh0gBd0M\";\n  b +=\n    \"b0Lu3hR+UGY7p7a3x37d6tetPe8N5NCS3qpd+7TZs5sXU8gJzevi8cQIMO7XeHH4BRXtwJKsYYx\";\n  b +=\n    \"7FQH8dsbRzZ8uKNrMFo6wY2VVBuEHHsJYkEhxJSkKYUftcLzLKBD5WzKlPu/nS/UX5NeehTsGd8\";\n  b +=\n    \"xzEy5e/2AWB++flPCgCa+9IR+WWWSC/KluxVNjpl2uV92PS9VLNN+TAxtQslFjCbQeuymx6qep0\";\n  b +=\n    \"zjMx77lUPs6vnoLh6kkg02MMTJV9grsRuY4dOI3ToRJSJQ6cHSXTovAszOciIQ2cWkuLQuTEwSH\";\n  b +=\n    \"nD4e+HhQ9WRujQ2RlLTnG1ZO/OfJhB786m0PvSIIfO10vDbpO9Jnvk2itXcrtcvBFdDGOlpynYi\";\n  b +=\n    \"H3k+dLAF5ASTwdZ9uekTWmT5rS5KbkpbdKcNjclNyXZZsoHoagzKoI77Bc/zn3ikteNZEB/zlXI\";\n  b +=\n    \"VSSKu0N/zot25MQprp2NsWvnLPHDvFb8MK8T/8vZ4uc5R/w854qf5/Xi5zlf/Dzbxc+T9NVB8eM\";\n  b +=\n    \"8J36c520+9rpgo7o/uv+myX6asFeQGl7pxwm71Jj8N2E9kR8o7E01/TjRf3Om+Hnivt0N1zfI3j\";\n  b +=\n    \"NPfCZvEp/Jm8VnclHkk5ku3h3YwI8OMCJuJRnQ7W0wQxwwSTzYwzKwf9lgtjhgwnhgrmSKE6XtY\";\n  b +=\n    \"umrLH0vkXvdKuW3SflSKV8m5cul/HbJr5DyO6T+StgeJwUrI39OOj9y5PzIk/OjjJwf5eT8KCvn\";\n  b +=\n    \"Rw1yfpSX86MmOT9qlvOjFjk/GifnR+Pl/GiCnB+1yvnRxAp/zUVyfnSznB/dJOdHi+X8qCznR0v\";\n  b +=\n    \"k/OhWOT+6Tc6PQIE/JOdZB+V8q0fOuw7IOdg+OQcD5n8DLUw5XvJY/6Tjo1lyfNQux0fz5fjoej\";\n  b +=\n    \"k+apTjo7lyfDRHjo9my/FRQY6PrpPjo2v5+AgNi9Pi1nlK3DpPiltnv5I1OC/W0EEtL7nBJH0T6\";\n  b +=\n    \"MbHdSi2+8mdc17SUXEepU44vJDZuRmFVrivTU16YspjCHxSk056YqbDjqZWdzIl6Yk5Je4klfTE\";\n  b +=\n    \"TIWdTKnuZHLSVW5y3ImfdDn1w04mV3bC2TtjdJ1wOpNClixE2PlQ2y/loy7vZHXKYjOt5FRjGE0\";\n  b +=\n    \"sEYj9pIF389MZm13smiqedUFXDnskZioeokBH6epOrkx6Yl4ZdzI96Z47PewkVd0J+YS2VDyiok\";\n  b +=\n    \"5q+oR283OqRCeR8pF050Tdb1yl5kFMxSg5ER5BXZH01LwiJFVar1RKemqWwkopvVIx6XlZDCv5c\";\n  b +=\n    \"aWQvoP6M1Qc0J1cVHke4LJj8MSKxxHEY/mKZ4on+FlXBY/OTLpjzozb11goM6vbtyXdMdvi9jXW\";\n  b +=\n    \"SFt1e3IHvb7ikSy1r7E8rq69POYll4cXZu2gUmoQ61Ria/iFUHMNjI39a3L+2Ji+Jr+/aFYfjck\";\n  b +=\n    \"rTrGq+LviFKuKtal8BK5+fASunpfg6saYq2ttB/rRQOMoe0BN8T82yV9T6I9N3tcU9WOX8oURpL\";\n  b +=\n    \"xdtZyJKy5DqP8y8PKTo/Dyk6Pw8pOj8PKTI/ByIcHLs2JeHkU4zxpBOL8EufwSRPJLlMaNY5DGj\";\n  b +=\n    \"XVpXJuDnxiFg58YhYOfGIWDn6jJwY0674INPEmsYrBzxY1zn7hxHhA3zh5x4zwobpyHxI3zsBxf\";\n  b +=\n    \"9crx1RE5vjoqx1fH5JirT469tGOwJXIMdqscf90mx19L5fhrmRyPLZfjr9vl+GuFHH/dIcdjK+X\";\n  b +=\n    \"46x45/rpXjr/uk+OxN8rx15vk+OvNcvx1vxyPvYWfZHjaKddp8eLsFy/Ok+LFeUq8OM+KF+eAeH\";\n  b +=\n    \"E+J16cZ8SL84J4cQ6KF+c58eI8r9iL85JiL84hxV6czyv04qRTsw0RvUIjbhIfqCedOReLxcSc1\";\n  b +=\n    \"MPnUG7V6oA6ab28cgn0sLNnVF51EMzOnj3hORcvf42TJskJCjoTkrF9vxjbbxZj+01ibL9RjO37\";\n  b +=\n    \"xNi+V4zte8TYXinG9h1ibK8QY/t2MbaXi7G9TIztpWJs3ybG9q1ibC+peDlysRjbt4ixvUiM7Zv\";\n  b +=\n    \"F2L5JjO0bxdi+QYzt14mxvVCM7QVibLeLsT2fjG2R4ZFftAo2iLX9sFjb68Xafkis7Q6xtteJtb\";\n  b +=\n    \"1WrO0HxdpeI9b2A2JtrxZr+1fE2n6HWNtvF2v7bWJtv1Wztn/ZFatZY1SsZtUVq5Es4dGM4NHs3\";\n  b +=\n    \"xdp+s5KKFZeLcWqUEux8sKbFF6dilVhzIpVoa5Y/UzN3Ma6mauxsTdGaezVpfHPoZnr1aVxXRq/\";\n  b +=\n    \"GszcSWzlrhQrd4VYuXeIlXu7WLnLxcpdJlbuUrFybxMr91axcpeIlVsWK3exWLk3iZV7s1i5iyq\";\n  b +=\n    \"cPVvF2p0g1u54sXYnijXbItZus1i7TWLtjhNrtkGs3axYuzmxdvNizXpi7Tpi7dpi7WYq+ZbN0F\";\n  b +=\n    \"lidraLGTpfzNIFYsY2itk6V8zYOWLWXi9mcEHM3uvEDL5WzOLZYkbfIGbz68SMXihm9Y06e8RCJ\";\n  b +=\n    \"eHMecIRIzfaC9lIrZQUUGeqXl4pDnq8cFfj8so13+OFWxcbuTWO3MjTQRvp3ejLeTf6chrky7kR\";\n  b +=\n    \"r33o01nlqrkodtW8OXbVXBy7apZjV80lnDwcO3Aeihw4ywchuYyN7ZvEh/PW2IezR3w26U3ClfI\";\n  b +=\n    \"m4R3yJuEKfpOQXDXt2FXTiV01vdhVMxe7amZjV80GTp6NHTjPRA6c5ecg2cJDy4gPZz724RwQH8\";\n  b +=\n    \"7T4sN5Snw4T1pyWG6xdEk882BPzQWxp+as2FOzPfbUvD721GyMPTXFwfMCJGfLbNzI1/Nc5OBJR\";\n  b +=\n    \"rzHR93kwnktu2riw4Cz4tJ5Rlw6nxOXzgF6GEPOmqt0f8tVlOq3xdGzeVhHT/Tf7Iz9Nztj/83Q\";\n  b +=\n    \"TweSCT/QjeI1E/lrxq4xG8VrJvLX1ItMdqjBoiOJInYsJSfWTnGg2YiunBsXqW7OYM19ZnCXOM9\";\n  b +=\n    \"8xCuj35H4VvaH7pyyUKxoU4s8LMmd8xAt2wHNnTNynYzcOdFVqUVO/r3KxY+DYa/M7tCdM3Lo0b\";\n  b +=\n    \"wyyZ2TZcSg5s5JTpkDbnKsCafMH8YNT+junK2huKm+pbiU/Sh5yzPxk0NxShsQZ87D4sSJDj/jO\";\n  b +=\n    \"YhdcQI6cjqaIyc+2ApvcIIcOfO8y4hHJ6CtlA39NymR1f0385jIBxNiR8795KqZ1R0qeWvvdsXN\";\n  b +=\n    \"c2ItV83IzbMhyOul+aSbZ76WIye5eZ4hR84aDqQDlY6c/RWOnKQv9JNiMaDrXjly5MS3T3KdpQz\";\n  b +=\n    \"69XniTpqtdDykLuLGn/ZoIJEbYYZUk1rOlN0uDdBLOlP228OPygvGdPekI2d474mVTqR07+ZKJ9\";\n  b +=\n    \"KXeG/NkTMjjpzhABoqPUlpAPlK987hBuCgI+eYx7FQH8dsbRw5dOTMVawZceQssIske2JCCWkZL\";\n  b +=\n    \"ejIaQSmOFgOooNlPlP+4B+T++bhY6E/58WnycHzxNMC+PS9ajP7YPanJNwmujgW7+YomcU3SPzH\";\n  b +=\n    \"e3gR4rkBbpR4boCbIGpquMHh+QFKOXIZxDiKb8ZBmOy/B3shanAUBzHFLjqo6ZEfHeq4gz777w3\";\n  b +=\n    \"47L/X77P/HmwG5K/Xm2L/vRMSt7Enxf57sC1Q3MfuFPvvnbfZfw+2GPLfg42I/Pcu2uy/B7s6qm\";\n  b +=\n    \"jlE5C/HyUMvYZiFr5oBvfxhUON2slQo/YIoUZBG8b6cO1RRXKJPYBephw+1MEr6D9ZvB5TQE9+p\";\n  b +=\n    \"2Ur6N53o6fHW9CPdBtySWtwN6a3L4CdoBWL7gq2YXpiQKCJCHo9gyYwaAKCVjFIAcg6QT6cqpM1\";\n  b +=\n    \"q0hTCLYusEjngOugXAfkSq+8gEbzjMWOficsDjCaY4fUrbi1blukziN4G217F6gl7qsAPxPDzzI\";\n  b +=\n    \"cNtWti1iF2Upw1GpQvPOgyM+UFP0GUfTzoujPEkX/WlH0rxNFf7Yo+nNF0b9eFP15oujPF0W/XR\";\n  b +=\n    \"T9BWJoLBRD43ViaNwghsaNY3DbvJfCcOJrABnQ4B0wMmzNZdOBncouTob8FMhPhfy0V8Bts1Fz2\";\n  b +=\n    \"zxus7tmn80a5TGb3TiP2kzFIzZTtddmv8TDNrtrHrLZXfOgze6a+AYlaqAHbNZA9+N1MijFeJ0i\";\n  b +=\n    \"bx1NbVeXkJzT2tVFi0+Knrf4pIi4CrR24glQuolNQHU/Z/EJ06C8UHVWlHFil9vkLaWlovkuE81\";\n  b +=\n    \"3uWi+t4vme4dw5QriyvuZtZN+m8cdPnHqc1hZPebw+0dHHfbbPOKwv2avw36ahx32zzzksDJ70G\";\n  b +=\n    \"G/zx6HNfIDDru57ndYyd3nsJLb7bCSe8lmJfeiLTw9J1bHL/rot5l41+GEBQtPgsGULKgMVQrRz\";\n  b +=\n    \"s9PeQ55Ygep8hAKc1Rv+XnMXVFNNuyhp2FcNqGP1ur2r49qTYzb1/TWhPYTq9uvimpNiNvXdNSE\";\n  b +=\n    \"9hMq23P2zoRfa4VcKne7kaNmU4Wj5kXZXEtONUpPuJFEuUhaKyhdmqNmc8XzootRJNFMxVv30FG\";\n  b +=\n    \"6upMrkz6WV8adBEkfyyDsJFXdyYxk0MsZcSc1vT2hE7+yE5gjIbTPTDhqniD3S10X8YWLGCWI/9\";\n  b +=\n    \"hRc3LFM6VDfOAdVSJHzSkVD5YO8al3VIkcNadWPF06xEffUimkb5/+VAAHdCcXyfPRhgpHzWkVz\";\n  b +=\n    \"0OJx5oq1O5DHDGpgj1nJt2aZ8btayyPmdXt25IezW1x+xrLo626/dVJZ+ar4/Y1lsfVtZfHnOTy\";\n  b +=\n    \"0FyDKsUEsU4ltoZfCDXXwNjYvybnj43pa/L7i2b10ZicTqBG4G8qH4G1qXwErn58BK6ek+DqfMz\";\n  b +=\n    \"VteS/pVEz/2KE/kuQ9y9B1I9dyjeMIOXtquVMXHEZQv2XgZefHIWXnxyFl58chZefHIGXGxK8rD\";\n  b +=\n    \"lqjiKcZ40gnF+CXH4JIvklSuP8GKRxvi6Na3PwE6Nw8BOjcPATo3DwEzU5OK/zLpiSjXiERZblC\";\n  b +=\n    \"YstxmcsthhPSiCOUxKY47QE5Biw2GJ8zmKL8YzFFuNZiy3GQYsdOM9ZfHR13uKjqwsWH10NWXx0\";\n  b +=\n    \"9bzFR1yXLD7y6rb5CGyfzUdiFy0+Ijtg85FZj81HaAdtPlLbb/MR22Gbj956bT56O2Lzkdwhm10\";\n  b +=\n    \"uj9nsctlns8vlcZtdLo/a6HJJ1r/uqbnPYQ/Mi7bE0bTZA7PbYQ/Mgw57YO53JI6mwx6YPQ57YB\";\n  b +=\n    \"5x2APzkMMemIcd9MCk73TQk6fjTnEj3d4pbpLvdWym4TnFLRHBIruNXTW7rYSr5kUlVhIzE6zES\";\n  b +=\n    \"l/NSeFqTuvllasAylN6eSWrQ7kfl4cSoE//3Aof4qAvIVnY7xAL++1iYb9NLOy3ioW9UizsO8TC\";\n  b +=\n    \"XiEW9u1iYS8XC3uZWNhLxcK+TSzsW8XCXiIWdlks7MViYd8iFvYisbBvFgv7JrGwbxQL+waxsF8\";\n  b +=\n    \"nFvZCsbAXiIXdLhb2fLGw54mFfb1Y2HPJwhYxLmsJFlGwRSzszWJhbxILe6NY2J1iYW8QC/thsb\";\n  b +=\n    \"DXi4X9kFjYHWJhrxMLe61Y2A+Khb1GLOwHxMJerVnYv+y61awx6laz6rrVSMbwaHbwaCbwi7R+Z\";\n  b +=\n    \"yV0K6+WbtVQS7fywps0vDp1q4Yx61YNdd3qZ2rp5uuWrsbG3hilsVeXxj+Hlq5Xl8Z1afxqsHQn\";\n  b +=\n    \"saG7UgzdFWLo3iGG7u1i6C4XQ3eZGLpLxdC9TQzdW8XQXSKGblkM3cVi6N4khu7NYuguEkP3FjF\";\n  b +=\n    \"op4rBO0UM3sli8E4Tg3acGLwtYvA2i8E7Xgzaghi8OTF4s2LwNolBmxGD1xOD1xaD16nkWzZE28\";\n  b +=\n    \"XwDD8cOU8M0wViyIYfmJwthux1YtheL4bwLDF882IIN4hhfK0Y0jeI4Rx+eDL8EOWNOnsM46t5y\";\n  b +=\n    \"BMjN9oLa/tqQp1WvbxSHED5RL28cs1D+QTdyK1x6sYOAtpQ70VnzXvjwJtbxUlhmxz2OnLY68hh\";\n  b +=\n    \"ryOHvY4c9jpy2OvIYa8jh72OHPY6ctjryGGvI4e9jhz2OmxKo8sTHfo6cujryGG3K4fdrhx2u3L\";\n  b +=\n    \"Y7cphtyuH3a4cdrty2O3KYbcrh92uHHa7ctjtymG3K4fdrhx2O3LY7bCgSD7AIKv6gs9W9Xmfre\";\n  b +=\n    \"pzPlvVgz5b1Wd9tqrP+Hzu/JzP584DPp87n/b53PmUz+fOJ30+d+732ap/xmer/oTPVv1xn636P\";\n  b +=\n    \"p9jXZWagnt0D8h7KHXRZbe8UnPwlqjobkrtx1B0b9CbbFtgHU3x9ZBc9+P1DVQDWTUg54/ti1Qv\";\n  b +=\n    \"wreTM8eRVOj8AfCeGH4wFTp/ALw7hu+TrvvZH8Qm55ATsXPIMxbFY0LHkDgcJoho9iw8FLpKBW+\";\n  b +=\n    \"uDIXJ8ZP7vNB3sjV6J6axeuGRX8zsUO4f93SHlMqwl7w+UfAmwl7CPpEYk1UV9pIb4rJKhr0c8m\";\n  b +=\n    \"vdUg97Gd9SD3u5z2avr/32CnsxekSij6nuFbnPjrsbstArssDyXMJbYhgk8YpsDL0i3xSGt5wQF\";\n  b +=\n    \"DBRCN4Ye0VimMmWWl6RGGayfBFKx9UKbzmEpfvxUDso6KXyXgdta+j4UMsrsodEYmoYr8i+VIVX\";\n  b +=\n    \"JPrq6l6RtDP38hae0rQcJwpv6YhXJHLAUb/CK7I32tyjxjW9IvtS7BiYDMnt0QCtpFfkRXf4UVn\";\n  b +=\n    \"BmO6e9IoM7514g2QovHfCK3K/95LvXcMrMhxAIrxlty8DKCScNf3hB+ChV6Q31nHU8IrkcTjoFe\";\n  b +=\n    \"lUrI/LCW/5TB95Px7rC90hP/Zx8o/s+8Rw4S1tDm/pYHhLGwbQ/4lEeEtbwluir5+sTPK/5FWNw\";\n  b +=\n    \"ZcHdRuEC5yyub3wFTNQrzWGVBl41UjIgVOmxMFn0djnBEbhB3aOBtefwsCZH7pWXbnXJqfN9MaS\";\n  b +=\n    \"PcNQi8f2H+7tRqnt7qU2Jf3SzLtzJqYKpVl3w5JpC2Z1lV4TtN2XsyA987Gg7U05OzCvMSaB+mZ\";\n  b +=\n    \"eZ7YWYZZB2yJl03ouG0EbSPKn4Lcb/hXuK1mTUR4DIsoqCNNZqFc+ZBaOkY0xcxGGGrBppkYwk5\";\n  b +=\n    \"rPHK75Uax53Ex0MGsRvvNvl88o7GAWdTBruA4GsOZZpXeA7vKQPSzZJe/GlrB/WoH59JLZ71sy+\";\n  b +=\n    \"/3Ba5bs7Xr0sSWf/a1nz9t7lnT/3hd7j6suvFHJKhd2lQuPFBsRl5wupcrG64k7zMLbsH8M1CzJ\";\n  b +=\n    \"AcXJrJmB3EULR5zayO0AnIFeGst778TWUNIoJSWz0BT10xR10xT1EljlF16wtheaIM+ftLfLh1K\";\n  b +=\n    \"dZXsHJOwdpcnlXlNMOhdUoZQQ38XaA6rkQ8pfObnklNvugls7wA24u2TtDLEmaOxwWZ4zYcVkmx\";\n  b +=\n    \"G2ZzvGqkSMF2GrIX9c00IEdHWWUkEKhlDKwpi6cCUgBDYLek+GHGqN0oTAooImsIKyK4JckFqxA\";\n  b +=\n    \"6phjaZgwgqANq3YgeIBWApuYOLFDMbB4lcgwJfTAm+x9+L3FGC5lYAdDqfQpQ57hQu+E1B+TvHN\";\n  b +=\n    \"Tbx5im9uYdfmih0gfzJLcyg+rl6Zc+GidmET6KRsYk2YbWfRyeD6Rmwhli5aMCOwQAMH8GSWZ67\";\n  b +=\n    \"KNTIdAL1FIQ4mWwjhgB1guF2IFOQLxOdeoKc5uWgxzYA4gcnIQ/KRHzRir2iW9zL+UjKb5TBka8\";\n  b +=\n    \"XkkrU0Z8K0Qcgjb7k4gubAZUq52VQGQIAKBykAt34nzAB409pO/WZBZ1hiFNuCcUUz62dgJFb50\";\n  b +=\n    \"gsvvOBt31i0wgKkX2DOV8aS9J6gravUhm+/mGUbd/JcCAaej0r8YUuyw5RgEm4G6wTpaWHfFhAz\";\n  b +=\n    \"64FOgihvzOYy5R8996xRnlLu+cqzIpJ7IVWeWu6PAANfoRoXIsAlBLSXj381BJyEVHlB+VIIAIq\";\n  b +=\n    \"2lS+9+7MiqVOINVh3RWvYScP4ZLQWohJosCpIFS1ivbanSiayj4vsg/LPAdJ3BsQ6Ls7DzfBCM5\";\n  b +=\n    \"BzjpololY6ppY1Nmq1FHHF1aBWy8+UWiaO/qeMzmNmLXyC9PcRlanAX8oiEgU6otNHdLojo7NpO\";\n  b +=\n    \"HQ2jYROUB+HQecwJdlhSl4pdNqEUJCOPuJTIeZIGjI+fajvBH4GEYeCqNeRXQL3ItgpzHinyNI5\";\n  b +=\n    \"LleBPas4heUgCa1TLjXTaltgv7pSoqD2VK32kFejNhgKXGJB7Wk1lRPcy2BzgsuQV2oN/KA13qT\";\n  b +=\n    \"CDa44XW40Hq+9TnEiXk+5xUmyQeVkg5rAO30xQGHt4AsmNr7vVizh5D18wQQ1mGIKVygg3gX7yB\";\n  b +=\n    \"lRhsPYWYbjfgNbbiS/XRy2G8lvV5Pf0HkaeoPt2txeVqtyoKgFDvRskj1H2+1y3IFxh00HV0Dnq\";\n  b +=\n    \"XhndQOP+/bCvbW8dyeAO0sN2uaapxtTCe7r3oqgIXBxfyWB5Af5Fbjb19hf04n9FTf+xBZrJ3bY\";\n  b +=\n    \"aQgI70N7rBvtsW68x5qyiRplH+bjFH1AXbYJ1Rw/mIR/RNCZK2jOIyEb2OqykR2hGXr3QZ0Bhh8\";\n  b +=\n    \"O1w1Baay4zmu4LlThOp/AdWE4XDdcDq6njg3XLSGugzSuizSiOo+odoKJ+AeodhnV7oiohvWuod\";\n  b +=\n    \"qPUe3zcgxR7Q+Dagd2OEC1q6HaZVS7jOpiEtX4cpxTjWpnBFQ7jGoHUe1EqHbGgGp3ZFRPqUK1E\";\n  b +=\n    \"6HaqUC1y6gGEUOoboTOg/H4B4imbaqJtqXhES2anyDaiRFN2HAiRDsaojXhgQilBRX4Gqp9RrXP\";\n  b +=\n    \"qA5eIlc71VztMFc7o6LaHxnVoHBfssbA1s2Ia59xje8HZoJsuXFZDh/LZjvpcxc3GMgArGo1QKo\";\n  b +=\n    \"hVNHzUNVkaVGTDg7TgeyqMdPBYYafHmhGlU9mgi/mVB6lLIwhXW5bmbPgnmlW/JBN4MJ0SjOd0k\";\n  b +=\n    \"inGUEO7j4hplMB6FTAu14ZW1GFztJVGpGuFhsKKgZXrgiuAqoAheilfS+4egVAvRoUmpGgULqSQ\";\n  b +=\n    \"qOYUV5EH083o9KoaDi4FJJmVEgvGz9ZBfgZD1sM/MXUuVwbyYtJ4wkXC2k8XRY5QfPtaCjdvgPU\";\n  b +=\n    \"H16JuOEwEXjB4HyziGlL1EUP1UUntIUAa9lVpIZ5sa44vI7oBd4wOuIwJdlhSobREXnfgqV3GTq\";\n  b +=\n    \"hgzqhU6Fik0rooW4XWyyoERb9aJE1IL7wLdcGxlcD4qthJHy1vHrx1YD4SjG+IpOkARHWgAhrIJ\";\n  b +=\n    \"MkTyYJYCzPGMsjxvIjYazp1YuxPGIswxiLjI48YiyP0Dw9gcNTzViZx/bZLD/aACsZVy/p9/zID\";\n  b +=\n    \"Be4KU9gUCZZofjIjSI+krvrWB+vhIp5hraZVTk8+QIjwSnvhZ6yRVMtJhm9d1nOJCxQ/zhPPDWF\";\n  b +=\n    \"nfa1hlF+3TJ6Nhuk0BolRDkINmmjygYpkMArAEcw/M7y7MDCx45ZemQ9hypQJAw8cQqyWIQ6SyM\";\n  b +=\n    \"ryLOxnJ+UwOhA8XCzpNI0li987VmxHtOhLfmriRyWQb3G8umopp+wOhsS7RoSZflEWT5Rhnc/i3\";\n  b +=\n    \"3+anWfUHYXfQWq8UbThwvs7zY+xuZHsv1pCklAPVyKenAS9zITOVfPlQ+857NGeRIDvpO4ORafm\";\n  b +=\n    \"28W9l5hlLtd+ZIUbZvteLpXnteJGQnts5AyPmduoowE8sF3+9uUxME5aVBRi3x2knOtnDvNuSmc\";\n  b +=\n    \"G+BcIMF+ODdDogBxrk3CA3HuGvYzx0PJUhpI1v1P/cDz5R+/sLOcLdyLhwAWMpGC7VOHDuFTDmy\";\n  b +=\n    \"XgA6STuBUQAdw0w8waFmiroXKNB7DJPqliCqZCmi/icdyfgW020KlMl8Bxa8NFtDKT0B7oN8sGm\";\n  b +=\n    \"hJKH1/r1B5NxufamSTUOjRTtQCS6XUiAs4CVUUCCYxV8STl+grwlvh0Z/zXOEVH7f7Mt3xlcB45\";\n  b +=\n    \"hXHTuqnckfrMnp1XoE526+Se/gv+h7OK85ZLxc+Xgm8uq/APRpf9D3SP2NZb79KpFL+VSIFGl6m\";\n  b +=\n    \"e/g/Y75q+AWSEK8Ef77YXPZnvtu+8nrLK6//vhKr5afDVw0/lV6zv0C9/jzLktzPlSz56WhC9i+\";\n  b +=\n    \"Q3vpy4cN5VUqony+d+pVYO9bP3EJ+5Xv9xV2vr7w0/WXkj5drbWdeJdRq+CXkgXqvP2+y95WXkr\";\n  b +=\n    \"oVZiRKDfpv+Fzy9KfbxRc/PjPMKdcQvsH1vK2fc1209YOuS7Z+0tXtdGpHXfsc/ahrv6MfdR1w9\";\n  b +=\n    \"KOuHkc/6jro6Eddhxz9qOuwkzzqwkOmhqCh+qyrW866GqpOn6rPumbXOurC45901VFXX82jrn46\";\n  b +=\n    \"6krXOJKqPurCI7SxHnXhwVqm6qgLj+ayVUddPXTUlXlRR11DdHhWP+r65TjqStePuupHXfWjrvp\";\n  b +=\n    \"R1yugSNePun5RcZV7lRx15epHXa/4QdNPZx9I14+6fo75KvcLdLyZ+aXb67L1o676UVf9qOvndu\";\n  b +=\n    \"3UH7f+Iq3XbP2o6xfoqCv9KqFWrn7QU+/1F8iazf50j7oSB1h/c5Wayp+bHXA3lrzRIpdxvLJSH\";\n  b +=\n    \"K/siihe2QyMV1YKZnQFJYxWVgqueCwoUbQyDlPmBaVFKht45QIG3SpRmLBSGCbMoTBhHoUJw7QP\";\n  b +=\n    \"6RYtSJhXPmFqQcK8MEhYnxkHCSsNGyTMqREkzOUgYR6Hl+OIYJ4EQXNrRgTzOMBaGBSMw39Rk8C\";\n  b +=\n    \"Jwn959LXTAsCPcmQX7tPeUfLD19U9DIt61MFIAjCK9AoKQlIot62EexSKJvd6xOksNmBWXq/MGf\";\n  b +=\n    \"S6ZYkjNsgrrdmyuV3tpXhhS4xiKcCXxMvHnE7swgwa8HVLI8iWfyLvt+LLryV6fZLeBMvOV0SH9\";\n  b +=\n    \"+0rAR0Ofv+s1V26YhG/4U5FwRUM3vNYjUpaKd65vBtfT3Xw5XaHYtcCsjJFGTeGBZI+sSfpB3rB\";\n  b +=\n    \"Vwrf1QlYSN0FzONhfGB8uZRCCGZzGeG6vfAfB80on/zSs0YnRQVAgoT1V+Wa8dXTpTlrUuA8TcO\";\n  b +=\n    \"pjO6EcScAoWbOBCRcgQEsGFMqU/4cvsc4OX6PERkgxhlTEt9kpZYh+tzAxflcQZi5Iih1l2ZoqL\";\n  b +=\n    \"sCF4KgLS4UKNx+OHQFDfbiBL6of+iAcEXzzWAogDbll1Jws9TKyaUGjscTvS5u49ujJoavaaCgc\";\n  b +=\n    \"RTxSlW/YLpnezFPq5Hm2OcQt1DoHRoA8AfieXzghAEQshS8o7PUqkVBmEgxGhAd2WD8iqA1yGIU\";\n  b +=\n    \"BDrVdoOJKwDqrthRxBBvPkd2oCgI+SCHM89JFAR7L6yJnIRAAKLgC7sc+YEYOhtGQHCjCBVOFKH\";\n  b +=\n    \"CzcCYolfFXXpTXmhbTrwt7tHb4k4Aiwr/OO7NqpwbLVAUUbjCIdXAwXAcWntO+GqzMxkQGS95jG\";\n  b +=\n    \"vBvAHJLKEJX1NmtGUlLs5ywsDkksuvN7tx6JAU3r0hSC0lyWKAyMumM/hu8q5SWl/jLr62jt1LH\";\n  b +=\n    \"K1S0FB0sinm0vDNdTcssDDaTBj8qtRVKi2icHp0zJ4PwfQ2upT4w5ZkhynBJNzMYc5xaTFgHC0/\";\n  b +=\n    \"CiLnR0HkDpypCCJ3+ExFELljZyqCyD1zpiKI3OkQUPFSdPJF5Sy9Pp/dSAxcGwUwWhm7S8IzcFc\";\n  b +=\n    \"F2aJLPAibE2wTwIgpDtrlBWlkPA7nk6KYXakM0Ai4rchbAu8iGJ9L9hPcTRoDW3YHcoBwN9K77b\";\n  b +=\n    \"kcxR3J4Sr0KEwm7AvJ7eCMkhKTQnfxLoLrEmNjJms79JkqLsFAX9O02rLnJGsfdXj7LLbCdVDhp\";\n  b +=\n    \"9+98n4bP+XO6z5gMZCVDjAeWJFkTNGP97M2GGNxEl4ptDzJouIUmNZ4lNGA9PHFvOgIPkc5oqgD\";\n  b +=\n    \"4zkGD6y7ootinKpiCBdZMLROiIuKsEbwJfJgCv7B+gxXyIhLUdYff8AWU+l4JaZxCaajlZjWViK\";\n  b +=\n    \"tHgk1oCbBKgQ5CZTF+CRI7uW0QEFCNgUB9J3lhYXLMs29NgeuFr8nHWQ6Sy0cnIck1zi6KZWBfA\";\n  b +=\n    \"uaVwQtQRolYxorZYJxKzDaF0hGFAl+ZywgKWRRZ8lnyZji+DAex0txkCNx4+GIW05Q1IMlOTgGn\";\n  b +=\n    \"8fgrgAUOigeM5mcmc1nwATKrwClLBdYK0Ejg9yyHEZIyGOUA8htDGMgeEEKla9U0S/7GZi9H0zG\";\n  b +=\n    \"v5AamVGoATz5Yqihy0W/mMItLEUhlaoJ0hxMr0mQlmqCjNMIMiFJkJYVwbgEQSYMR5DmyyHItLE\";\n  b +=\n    \"QZGkuF+G5iaKXZi2Kv4G74lkUdu9DgQak4hyKN8B2KpiEfxTWiJZXekRKgCxJUsKPKSFxxEJK+M\";\n  b +=\n    \"PtUMU0Sqy0Rgk9aFJzMDFJCQk8m6REakRKpJgScfjZDIefHZ0S6ZEpMXVslCCOTzMlQDCSRl8Rw\";\n  b +=\n    \"APUhTSpC2Hky7FqBoz2VIx2iXsSoj2loZ3U2wjxaT2qGCI+lYgq1hy0vsJLACOmlFKJqGIeqypV\";\n  b +=\n    \"iAfV67iZxHwqwnwqxnwaMe8z5mGbaEL/uzwGdUGhBDCJKhaG9qkKHkU6kis6Up5ijYY6EAxfQvv\";\n  b +=\n    \"kYwXpZ6cYaQFFx6ybpFA3SYlugppJFDzKSqomYfAowWUuGI9UwgBnGJXVAhly4UzteDMpPZcw8Q\";\n  b +=\n    \"ssXwqM8gJ2VECUNyRNT0C5q6mlHNo1G2E8MjY5lJETz1czPwkcY5ACKg1Tkh2mRNAmAZWIoo6Ed\";\n  b +=\n    \"S0kg9cQFdyNtG5qjwo6iIiIqnfgrArcohNSgazZAkfJBXOCOJ0DLBWQDIUM63J9YqCZ6E5JooNM\";\n  b +=\n    \"VEfiJXEEI9SAWFyYbID5lKoOrMmW0HKK+EfB70j1RVkBxp2NxDGBKTKgs+YwBJIZWKvwiUygOin\";\n  b +=\n    \"m0facYgLqtMfQSZcivoCdBg1I6KAT6A0tiw6PMcjhgsQQSohZKIYbwy2yKM0640BLWSgp2YEdx1\";\n  b +=\n    \"jK4SPXjZBBq97mWEoYoIm0DJVRe8tzYMTGJAm5hDpI2VzGAKqck8rl2RlWtbtR2wUtuzHUt+/EY\";\n  b +=\n    \"a/akTPpfjjEHJIcd80D/xDGMsKZ5QwCHo6AUTSknBYNycNQtBQNKRnxKHUZEY8en6Xu3+vgo7Tu\";\n  b +=\n    \"1MaSOQMNVYO8wfttTtrt6qQkYbmekiRYy6clCdwzIElQJ5+TJBjcZyQ5pV2dlWTQrgYlOaNdnZN\";\n  b +=\n    \"kW7s6L8lr2tUFmGB5IX7Io/gWSC3eiKm3QuqUQcC3QXKAk28PjJlqdvEdgIBDDvpqGxgsST4BYq\";\n  b +=\n    \"KnOWwbb+fMfgcX49s40+2gD/RbOXOR3MrfQpngHQusIRnLAxTL2MTHWtDxOSP8UIyJCjyIU6N8X\";\n  b +=\n    \"oMdo1oXNEgfuXkb5SENdpxqPa9BTpCTtlG+qMGeoVqXNEi/g5HvgUpmDDvp4Hd6jPI+DXbKwQ+w\";\n  b +=\n    \"GOX9Guw09XYgghjkrD4uRPAhszPEcK8ZYfioGWIYFzwmEcsXofvxADphxlgeAtgExBtmzkOmNUT\";\n  b +=\n    \"5IGQmhig/A5lJIcrRA35yiHJAdb9JH08yy/vcztIUuMFJbfz7ATYV6a/BDgBsGsBOa7AegE1H5t\";\n  b +=\n    \"BgBwEWAOw5DXYIYEVkFQ12GGAlgJ3VYL0AuwJggxrsCMBmIDdosKMAuxK5QYMdA9hVyA8a1tHx/\";\n  b +=\n    \"uoQ6xdjrHerCOv7VYT1HhVh/Qx01oaUUjHWYemXZoZYPwWZWSHW+yHzmhDrJyBzTYj1PnwYJVin\";\n  b +=\n    \"lwPwpQqg+oeexQ8u8GsVip7Fo39ot0txPUHM9HwYK+D3b8In8S69pxDniYi9IJUGkYjnoOVrYbx\";\n  b +=\n    \"HVIyQ8y4y4VENcgFqXQuwYxpsiGr1aZDnodZ1ADuuwS5SrRMa5BLUmg2wZzRYt4e1+jXIPq+zNA\";\n  b +=\n    \"eZS4Ptp1qnNMgBqDUXWUvFpMP3OK4PSXdGRaQbjEl3PibdUEy6E9DZPCS3Rro+gM0PSXcUMu0h6\";\n  b +=\n    \"XohsyAk3SHILAxJh9/kel1Iun4P9y4DX3uJhQHNY58GOQW1bkCe0mCnqdYBDTIAtW5EdtNgz1Gt\";\n  b +=\n    \"gxrkDNS6CTlQg52lWoc1yCDUuhnFiAY7B7BFyAsaDL8SdQtygwa7QL0ds2Kc49s3i0Ocn7AinPd\";\n  b +=\n    \"bEc5PWRHOB6wI5/ipqDLSydK2AoAtCXGOX5q6NcR5N2RuC3GOX6haGuJ8CDLLouVCwfsNfEsnFg\";\n  b +=\n    \"YAW47CQIPhF6JuR3bQYMcAtgKFgQbrA9gdyCsa7DjAVuL2oMFOAOxOZCAN9gzA7sINQoP1A+z1y\";\n  b +=\n    \"BO2xhMAW4VcocFOAexu5AoNdhpgb0C+sLUtAjbFe6Itwo63CDveIux4i7DjLQI6uxcpZmtbBMDu\";\n  b +=\n    \"i7YIyLwx2iIg86Zoi4DMm6Mtwkd7kLCP7zWlglAy4Zc5ddmTpnexNFlUHgRpcH9wPz7b+eCzFNo\";\n  b +=\n    \"wbIs9eYme4hydDvTbclAwE7SeBcrm5GlIZjn5HCRbOHkWklM4eQ6SM7iHC9DDNUHDTAtRh1+8Ar\";\n  b +=\n    \"ThB6sAZRm8vB1PHodsFuxGZ+DLx6xMigEpaMFQkYKUxRtDjCzsDJkR9I4gH7UD/SL6iJaJekT0w\";\n  b +=\n    \"WAT9YWgKSQ0UmA2DdjqdRZYD6BIhPLmWBhCriVqC1pCMDnKgZoQfSAPP8rQGUyMchgMuzXKoYEw\";\n  b +=\n    \"IcqBqhB9D5UQ1O2CcokqOuzxwZSYMSE3NWZJyE2LhRTkpsfiCXJBLJogV4yFEuRKsUCC3BWxKIL\";\n  b +=\n    \"cjFgIQe7KWPxA7irJuUy7a5h2r2HazWLazcQLCRnVGbTFqIJcKFxUREXY2CPBAv2HYsXUdmF8vc\";\n  b +=\n    \"8PfI29TXpv0adXCUfYcHFz5U93soiB3LVRDjZL/jQwiwvIzY5ysPkFc6IcbHLB3Ig/gDqDQJ1eF\";\n  b +=\n    \"byOcbCQcbCAcdDOOJgf4gA/AzovZsMYB+djHAzGOMDHe+HiVhEvczRQO+oGtqvghhixkLsx5kHI\";\n  b +=\n    \"3RTzIORujoUx5BbFYhhyt8QcCbllMUdCbmmUg+0kuC3KwY4S3BqvSMgtiXKwnwTlKIeva9pk6Qp\";\n  b +=\n    \"3QenymLsgd3vMXZBbESs5kLsjVnAgtzJWbSB3Z6zWQO6uWKGxO4PXx8oM5FbFKxdyd8cqDOTeIL\";\n  b +=\n    \"k0U/LNTMk3MSXfyJS8L6QkCOvg3hhddkRJkPGRcmJHlIT9IFJM6HM3REvk0VRC1OocWym2TXrpl\";\n  b +=\n    \"hTMqA32MJywxucDRuEg/JRn47NJowi6a9Emm1/hox6rnN1Roq95IlVhhJTeiQ8ONKDFQPyyDEay\";\n  b +=\n    \"3lGytUJK7+Qif0eput2OHfSZS5gzvvErj61UYJNryc+B4WziO9L4IEiU+cIRs4Yt26bWRXYs5h7\";\n  b +=\n    \"WLNg2tSmyXjG3TbNb29SuyGbF3G7NWm1TXZGlirluMzJSMbvPjOxTzO43NdO0TR2QLJiFwbgy0D\";\n  b +=\n    \"Mat24YYv6kGdmEmD1lRuYgZk+bkSWI2QEzMgIx+5wZ2X+YPWNGph9mz5qR1YfZQTMy+DB7zoxsP\";\n  b +=\n    \"cyeNyMzD7MXJNtHJtPV0QzIyMKvHBr4qfgeMrOCpIVFTF4e/HUsc7TlYdFh7AgWFuaPKM24alNH\";\n  b +=\n    \"VWRZYfaY0oyqNtWnIosKs8eVZky1qRMqsqQw+4zSjCggg4osKKKC0ownoIKKLCeigmTBZgmuj3G\";\n  b +=\n    \"BVotFrGFpJguwhhXZK8QalmaqAGtYkZ2C2R5LM1Ha1EErsk8we8jSTJM2ddiK7BLCnhWZJIQ8K7\";\n  b +=\n    \"JGCHmWZogA8iSLH2xarBHUJ9MLv3Ue2QDEH1ak/hN/WJHmT/xhRUo/ZoesSN/H7PNWpOpj9qIVa\";\n  b +=\n    \"fmYvWRFCj4hz450e0KeHan1hDw70ugJeZJFXdoN7gmngbyVFNROharhVOnTpCuXe39N41Noq3Fp\";\n  b +=\n    \"sicS2EbhS7iMzcJ1ICUNlJQkrY1IWlfL3trSWkXSWmmFKimtaxTtANlsoLQ2RFrD4PbiF1L37tx\";\n  b +=\n    \"env7OosJHp934NdRAZf5lulJ7p4aPQikwBvVF3oNg+uHFLpxG+T/AYB8VF4YMMqQAtoZAhhjSit\";\n  b +=\n    \"8iYwgFzJhpBSADBNLDkDYwdASC31EysGfApPQDEDtwOdPvYsaT1h5mfBkAZVKcQT6zg7RkuMtC3\";\n  b +=\n    \"GW3q3U5oHfZq3c5pHfZr3fZz122xl326F0O6l326V12+1qXA3qXA9xlEHfZq3c5pHfZr3fZo3c5\";\n  b +=\n    \"qHc5yF22xV326V12e1qXA3qXvXqXQwlc2vQh4X67ZC/58Qs/euHvX3jhvx7fu6fkLPnjr6D33Wd\";\n  b +=\n    \"e+LO90gfuw0teeOHvn/j+Cy98ZZo0x+/2Ljly4XN/8sHnjh/6riHTwWPvJZ/5g4OH/37oS39+Tq\";\n  b +=\n    \"Bo8zhLvvYPH/+tc//5vQ98QaBgLwD0t774whc+9hcnuycJCmz6KLCNn2aHseKXju2S0xU49z3dh\";\n  b +=\n    \"cYvmHt2V4kKeh3gR7gO2LQTnaI2XaV0VynbVXJHmVN3rTkN1ZzToFVzTlatOfVbNeaEyj2srvue\";\n  b +=\n    \"xq9uhzPzYEJdGLwEZmjJjIacEi7rM1wnHaRw0g30eW2YdJ4QgIoOlmYDn3ogFPQ5XaVCF6JhptU\";\n  b +=\n    \"NVdMYf4Z7wQ9R2/gdK8bh6JjpsWpgprsmZoZqUntQ1cLMgKqBmT6FmEkTZvbrs+4qNRJCLJxLSn\";\n  b +=\n    \"CHD84Idzmq0UTsqwh35fPcOh80IM7y1NgWjPS7wBJghHrUy0XGnxdksBdhqm6XaIHaIBYWdOT2M\";\n  b +=\n    \"3Kbu0r0+fMei2iCZpngt9e6HPz2qhr47VG18NtdE79DtVeTWQO/YH4Dfhto3od4vA0871ILTZvm\";\n  b +=\n    \"khEKXLSEAo1UYxwxHlGgWShwSgkFmmIKDJhMgYtMgVSQRwo0U/dOiDMPaeIFWe7FFQ5OMQWISAN\";\n  b +=\n    \"CpBwzA1fJ8TIRIvUIkU7VINIA3Gp8V2lCV6kVqEVUUcRE+Gxd6NSnLodO5EpSSadesxadesxadO\";\n  b +=\n    \"quSaehWlIPH5e5iHbkKx5vY1CgYU6imdNcCkLJ/SElW6jGZGJ2hZRsFUqeDyk5jmq0EoaIkhOEk\";\n  b +=\n    \"mfMBCUnYI0HmJD7Gb2ZoBkJOZHu7whSB70u+mp1nlnKk0UnS4lo3Zug9ZlatB5M0PpQLVr3Cq3P\";\n  b +=\n    \"8GDG67QeZFpP6SpN7SpNE17rM4mn8dmbkLvfvBxyL95YTe3ZtYgd1KJ1oQapK8ks37+R0d0dD64\";\n  b +=\n    \"0HQGLccW5SFNkWp5FC9FAFmsvzNCFpchscihkk0kxm3QTm0wTNrmohE0mx2wySGwyVdjkTMgmrT\";\n  b +=\n    \"Gb9FuyfYSLbGLEBX0+4jqDLIM8xsRvYj4V/hhK8MfRWvzRl+CP87X4YyjBH0dr8Uef8Mf5Sv6YI\";\n  b +=\n    \"gx+3hAGn8Ct7FA+MNs4+JQHi6FdaRpMs5nx7lOrZpq1TLvfx3URTvtirWl3+/q0T9Sadn9i2hdr\";\n  b +=\n    \"Tbvb06d9omLaAc58vFDuVIJyoQxUvMKZ/OcT5BdVY8hE+k8RHtqf4CHZc3tMpPLUwGXkMyO6LGu\";\n  b +=\n    \"QAaHKbORIB4ULfwoKa4wLpnONcQss9O7wgmlQTJsuYB4QLDuIL2SZGMudgQSC9/tJBLPo9xHTIY\";\n  b +=\n    \"JP1ULwACE4EATv95IIbkIc50K+V4I9X8PeoInYawwXjynYy3GVLBHIRDS6wiuHTOGVRq5CilqAW\";\n  b +=\n    \"Bwnq3ihLGKXKzQvsAoB7pDjCTOk3bUAokQi+zrDyu4rmCnwDX1Zkp5Gi14fUdQkmDlTiZku+oyU\";\n  b +=\n    \"7ApmjWlvw1k3hNuuKTyX1WZdwEmHYqdNOKZB5rzAaqUptcRTSkXK7vlwSrwNsVYmU2Jl7Kgvypg\";\n  b +=\n    \"bjdeNxnvRSI6XOMHAcYfjbU0ON73ACvAzazgO6RPuxGO5GI4lT3W5V4Az2BecLrDaym3RV+52L6\";\n  b +=\n    \"evtxFSSvhEsvdjz9KYSu59ORW+RQRW2P3ku2uAxP/KH+Gbcf3dfw3jtPnAD0R80Sn79HVT7AwfF\";\n  b +=\n    \"Fd3GDh3A+6cx6DNEvT2wuVHbbsekxd3SmZ5NvuAKjb062Z+3cyvm/l1M79u5tfN/LqZXzfz62Z+\";\n  b +=\n    \"3cyvm/l1M79u5tfN/LqZ/xLM/IE/eJnN/LjDuplfN/PrZn7dzK+b+XUzv27m1838uplfN/PrZn7\";\n  b +=\n    \"dzK+b+XUzv27mv7Jm/qGnXmYzP+6wbubXzfy6mV838+tmft3Mr5v5dTO/bubXzfy6mV838+tmft\";\n  b +=\n    \"3Mr5v5r7CZf+zlNvOPvRQz/z0lNUnClDaRmW/xt1UoKCFU6QzjBmC8AwoU4MUFXlzgD1eQ3VGzK\";\n  b +=\n    \"w6IHAcP6M1QyPAwvoqF0RRAqclwlA9oyIDuLAW4jgF9WQrpFAMGsxiaNBMDenIUYyEG0FOMwgra\";\n  b +=\n    \"TGFYDMH4NyqOM6PiODMqjjOj4jgzKo4zo+I4MyqOM6PiODMqjjOj4jgzKo4zo6oDtE6JArROjQO\";\n  b +=\n    \"0TosDtE7nAK0Bb7OJ8Kz8IGU6J0ETC6ZxEh+4TOUkKNrBFEoGAYVlVXEoG1UVllVxOBstKKuqCs\";\n  b +=\n    \"oqD1a0kKyqKiSr4vA2WkBWVRWQVZ6maOFYFUe60YKxKg52o4ViVbVDsYaIlECsU+NArNPiQKzT4\";\n  b +=\n    \"0CsAdt2iTCs/Mgp4OT5GLGDMWLPxIgdoJCtgto4yo7iKDta8FXFgXa00KuKY+1ogVf5OZIedlVx\";\n  b +=\n    \"xB0t6KrioDtayFXFcXe0gKv88EgPt6o4+o4WbFVxAB4t1KriGDyVgVZDnF6McSphVqfFYVanx2F\";\n  b +=\n    \"WA9bgE0FW+TGb4BRMuRCn+DxPcAqqS4hTjP2TE5xS3J9CUIiCqzaAiOGoKPQgD3bOxiArcVVNLq\";\n  b +=\n    \"NYKxSEWssrLeqP4qg/WlRVVRVVVXHsHy2mqqqKqao4ApAWUVVVRVRVHAdIi6eqquKpKo4GpEVTV\";\n  b +=\n    \"VXRVBXHBKqMpRpSRyKpTo0jqU6LI6lOjyOpBqxrJuKo8kNKoQ7o3yF18GmoUAestpA6GD+1NaQO\";\n  b +=\n    \"RiJyE/FTVVX8VMXxiLToqaoqeio/gdRjp6qq2KmKYxNpkVNVVeRUfhCsx01VHKRIi5qqOE6RFjN\";\n  b +=\n    \"V1Y6ZGuJWIqZOjSOmTosjpk6PI6YGrG8l4qXyA1rBLaipIW7xSbDg9mKMW4yTOjHifB/jbepxUh\";\n  b +=\n    \"XHSNKipCoOk6TFSFUcKUmLkMrPw/X4qIrjJWnRURWHTNJioyqOmqRFRuWH4HpcVMWxk7SoqIrDJ\";\n  b +=\n    \"2kxURVHUKqMiBpJajuW1HYsqe1YUtuxpKaO4mio/HA6lNQxbgdj3IKCHElq+qTDlDC8XixHPPxS\";\n  b +=\n    \"oiYp8vBfQnJQ1KYGaJGVKKhm1BZ7Mmv1BDkjMDRVo9yfg9EXrpOjkUgTyXViaKcwC79UpT+sAoU\";\n  b +=\n    \"Yld9aTJ9vRDUNeom1KsUqWhaBWR3o1wKiapZoTt9iMDWlTNGn50KlzBSlTNHHF8oYf4qVMgtDqD\";\n  b +=\n    \"fFAAww3Bw0xwAM6dgStMQADG44jiLShX2kIiQgfkgV5DLW/yjJmh8lWeejJGt7lGQ9r7pLDe0aJ\";\n  b +=\n    \"qMsll6Hn8SkFBbAKK57OQZBneLdXqY59aVI99cQma4ADKVFkY5wL00MiZOXpjCok+XboLhv9nMf\";\n  b +=\n    \"wXiJlmdR8NSM9n3QFH6FR8tr49cGncR+lkPw6TcaZGU90RWGP8skPkWKpgBCx4dB0WjAqagfDlo\";\n  b +=\n    \"c5jjGa5gr4Ad6JPZrCEOVwCrP7izpX2tFfUDP48qNm+DK1UtRBuh5XP0O3caO2mAPdq0eWDcZlh\";\n  b +=\n    \"lrMGKcE5FwMFGFo3XW7jNQsQmjZip7AZswkMwuYLsFki0L2FiB5JQFbKFAcsYCNktUaIvg00uNk\";\n  b +=\n    \"yMDATdRtjbUEc5ekOwxzj4v2eOcvSTZZzi7j3VrdZKzoc5+2gkm8IPwxD1DDRp3F2m4j7OnJXuA\";\n  b +=\n    \"s89J9iBnz0r2MGfPSfYIZ0Ol9pgb5Pg8JLwpcVCSdyrYpuLjwbEaiRsya1HqHGePSfYCZ49L9nn\";\n  b +=\n    \"OPiPZSzI9ye7zeHqi2R3w8EOa8cLC496mSIor1KwYndzsgGRPc/agZJ/j7GHJnuXsEcme42yo8F\";\n  b +=\n    \"zwgoma+A5aCNrrMyalzRHOXpDsMc4+L9njnL0k2Wc4u8+WsXI2VAJO+7C+os0AF1I6sZCsiqVoV\";\n  b +=\n    \"S7FxCJ0Em3jXLW9X+5uwmcgX52m0ntb8RlIj7mx5OCnWuYru9gILed1zgdtowkjXxqUbObg4phs\";\n  b +=\n    \"wWiZnBzHQcYxOR6DRHJyAscbx2QrBpbk5EQKPY6pSZC6iWCTKQg5pgp472tAF4JLG+hBcJkBOhB\";\n  b +=\n    \"cAtB/4DKlWMRLK37laL5qwc/HzleF4gy8ZItX4sUvXoXTxi/Gws/srlJ+yQvwL//ewALYY6XgKf\";\n  b +=\n    \"z+2QMBfmCwMcjj15O6So1aHTsIALjEfG8XVU61q3VQuRBcFTRy5Satsq9VLjyF3w97GCpPDq4Mm\";\n  b +=\n    \"rjyZK1yNijolTPtahNUnhTMCCZz5Ula5UKycrZdbYPKE4MrgklceaJWuSVZOdeudkHl1qAUTOTK\";\n  b +=\n    \"rVrl1mTlhna1O8BPm00JWoKpwbhgWjA+mA7iqBi0cuMJfBnPl3F8aeFLM328ulnr/pqgRcu1BeO\";\n  b +=\n    \"03IxgvJYLgglaboo+rCg1JUpNjVLTotR0vHvZ3L4RDK/8U9vx+33lvTtL3vYdTGI3aASoF6QQsI\";\n  b +=\n    \"4ATQRII+BhAkwmQAYBmwgwiQBZBGwjwEQC5BCwiwCtBGhAwG4CNANg+lMB3fcAPX0MWgA0TUD7G\";\n  b +=\n    \"TQOQFMFtI9B4wE0RUDdDJoAoIKAugLFi1FFi1HFi1HFi1HFi1HFi1HFi1HFi1HFi1FFi1FFi1FF\";\n  b +=\n    \"i1HxYlS8GBUvRsWLUfFiVLwYFS9GxYtR8WJU4WJUuBjV8Itx9uUsxnmXsxgXXs5ivOlyFuPiy1m\";\n  b +=\n    \"Mtw23vvQF+ooutWHlwWUsPE4VR1iCsyuX4LzKJbiwcgneVLkEF1cuwduiFVeUVfL2aMGFa/D+aL\";\n  b +=\n    \"2FS/C+aLmFK/DuaLWFC/DOaHGH6+92UHTxEJt/0OHKAuWfNHfKoX4QQWAbm93Jp94hzMAvHD5An\";\n  b +=\n    \"zl8rJTHb+sRZB3+2MTvjEQosrnoYfzxk0U+F23Cn2yyKMtF2/CnkCwqcNEu/GlJFrVw0W78aU0W\";\n  b +=\n    \"tXJRF/5MSRZN4SIUU8hQibKAy/ZR2Yxk2Qwu209lbcmyNi47QGXXJMuuwacGgDn8emXEZGZggda\";\n  b +=\n    \"0HX2UGJ2QBVNj+9NY1Q5FiOATyvywzNfKfC7LhmVZrSzLZYWwrKCVFbisJSxr0cpauKw1LGvVyl\";\n  b +=\n    \"q5bEpYNkUrm8JlQVgWaGUBl80Iy2ZoZTO4rC0sa9PKEKt4qMJ468R610C9znbCKWB6NvElYRm/b\";\n  b +=\n    \"zUPv9kFkHnMnAkqGHQqg36T83G1IodWld9EH4icj4sX2bSqfPHGkodFi5lXq8pPkskKZbcxx1ZV\";\n  b +=\n    \"OEUh7qHsdubbqgqn0bbHsjuZe6sqDJBRD2V3Cw9X1YANtJTFwvuEk6tqwG5bymHh/cLPVTXO0kN\";\n  b +=\n    \"5KHy7cHVlDaTU7OEZejbKk5ChaduMiYpHoRFD25VlbszQbmWZFzO0V1nmxwztV5alYoZOVZalY4\";\n  b +=\n    \"ZOV5ZlYobOVJZlY4bOVpblYobOVZaBpdMmoARDhziNZSzikFBXLWPpm09S5FcWuYy4ahmLCPSkq\";\n  b +=\n    \"FBZ5DPaqmUsoi8lRa2VRWlGWrWMReRlpCioLOKPvtaQsPSZUSlqqywCzEnRNWNgR6MmOxojsKMx\";\n  b +=\n    \"AjsaI7CjMQI7GiOwozECOxojsKMxAjsaI7CjMUZ2NJgdHXyIA3b1TyYpS+xqTz6Byo+v2KOfXiE\";\n  b +=\n    \"gV3STXiEgr3w3EMigLU71fggZssUn3gsh3aFLeyqE4AsD8hYCf2jFDzN4rOyFGXSvT4WZIarmSp\";\n  b +=\n    \"cuVpMMHr+mwkwflfjSG5VIZpAynrSB3pxoEvS2gtwHD2HdsDc8APXDDoaoa+kATwNT7G7PHwwy0\";\n  b +=\n    \"Xmy5CecD+0K50P+iJCd9D6kbwgBMOl+yJ87siv8D/njSXaFAyJ9jAmgCSdE/nqTKe59sOeY9ApA\";\n  b +=\n    \"aon5vq6SQ99As9EHxwx98H2E9dkluwsdadBraJS59Fs15oLe39VzQZ/lGnMxasyleh74AgIO3oI\";\n  b +=\n    \"9zUSnUHzoTW8D4EdkwrcBPJhYkFpyy/596JjkoGdRF8+6x2ZvO3S0MUO/fJe9RcnZ3uGPWyEY+7\";\n  b +=\n    \"WA6/0QCe5oBK2FhB6rJkGtmkhQNQmqahAU37kwyQu9wN7z/MFZdsbOiDO9Gb5V4LGHfAPhzEZnK\";\n  b +=\n    \"vruXRexQOAxpjwE4osEmSBPDnVm+DoB+WaRrxUhRSEOCWn8lTCs4oQ+cznG4YkIh32IQ3esOOxT\";\n  b +=\n    \"NXDYW5ORelQtHHbXxOGQWWtRmITDPlVqZncy/jCbNuNSnjBm4oTTiFb+vBh7SnviDm+Gryx46C6\";\n  b +=\n    \"HaGdPZg9JEq4nwv84/t5hFzMtvr+R4y9PMdnEm1Vj3hbyX00R55LXfoj1oyHWxV9yAmNdXPVxha\";\n  b +=\n    \"jLwXq/WQPrfWYtrPfWXL49Zi2sd9fCOpmg5KjdCnNmrIuTYpb99EoTscI2RDq7vprxWwpNMdL5L\";\n  b +=\n    \"YUWcio0Q4dhT95jaOSPWTOlxkXIx5cTiM/x/Y68uN2a4Rsgudi3FAmF9EFi+DoxaOngKxQFcbo1\";\n  b +=\n    \"45csIr9ek99EiOkl7yM47Nod0Usc8nFRmZdDrwGjBr0Wb6xBrtm1qBXUIlahilY0sLtLkwDHyNg\";\n  b +=\n    \"tNE6Xcbs/fKGGcDuZihz2FM+zXHDEKTVy4Db5jZs8fztbw3cpg1jOMZZzEc3PJ2guwsdA4vvCNu\";\n  b +=\n    \"IrmmW/YuQXk1+KGAecVeDVaumvjQj58M2KmHxHVQ3y9Zk6+eT9Aif0vB7P5BN3c6j+gE49m93Mc\";\n  b +=\n    \"+Q9a4ZvQzTKmxvo/NvMBY74Ek8Wt2iTX3dxIyTKGzFJJKIXfB4xlmGMZQBFKHwBdVlypzbLoTe1\";\n  b +=\n    \"LrYH6T0Bnxy4zfA9gXGx06/JrxI0R6iTlw2SqMP3EQpAIkbdCbMG6hYj5mzBnLz74ITe5k3sKE6\";\n  b +=\n    \"UD8fNYtEtjWf3Xf4sHW/ME2LM4AtdDn/GW8MJLBXARD7cwTKEZFyqGUAG4/986PCuY2OIvLp9oY\";\n  b +=\n    \"T4xDcnsIE+8fkIG+ITn8TGbERGkyBDfOIjZDSw5zeJH949cFShvLoYyqvxIq8iXnMFYzz3ZqIdz\";\n  b +=\n    \"h0n6vJEm9hjmoXXxdB/O62vNBOp4Qsfidd6PvKZpvd4cZ4NMr2Fydnl2MXbJTKxUzULxW6PNK3z\";\n  b +=\n    \"ribPmBsdHho9FUdgAccYqibiY54KGZmwV8CxhhtvW1LTSLFXd0GQIp79DrugE727ZHQ+u5Fz31C\";\n  b +=\n    \"1VfDqa77diny7VejbTdSmT7clA7Ir9O1W+EA19O22E77d9P6Ig6u8aJd9+oQbdhb6dic7DGz07b\";\n  b +=\n    \"bFt9smzqa2XY/RhzN9/HCm+HbTBwLr9lfd/qrbX3X7q25/1e2vuv1Vt7/q9lfd/qrbX3X769Vsf\";\n  b +=\n    \"yVDaL0M9pcWQqtuf9Xtr7r9Vbe/6vZX3f6q2191+6tuf9Xtr7r9Vbe/6vaXZn8de7ntr2Mvxf76\";\n  b +=\n    \"fyerhr0K7a9ec2MpO8NQi6v/g9re9pKyOYMBgEpWeeYKmJm11F5cNopW1sJ34dWu8uEvPctvDTU\";\n  b +=\n    \"GRtnuLDqBheAuvLV6Z9nEgEbW9qIPtbMrcmYZoxxdgp3G276RZueQh27QuCcAWhUWkackRkFi/1\";\n  b +=\n    \"AEo3tlWOIPW5IdpgSTRaAxbD5FxB70rQAhWTMDA20rX3r3Z43CrzpGJvBxYoE/0qigA+lO4cRgT\";\n  b +=\n    \"qsCoBHht/BUSS3NYXCnq1cCnQ1CQ2cZX0/mmE9mZ9FCeluQRXL425fm7Ai3q3JmjFs7o+MSEKhh\";\n  b +=\n    \"046xaS9eYhQLQAkYtx0jFYHRFJZ0f/Zr11Xglp2dw5IK9A5fmB2+cDgkKw3J70Ukj4ryGuO9LKy\";\n  b +=\n    \"7I6G8AChXgGE7yGKsHLNwzC9aIYMDglfZuIKZFuULwNhlRYQIVOGHZtFFnscsrUIgbjGFkSU6ix\";\n  b +=\n    \"506cIM7PJeXNseJLDUpkmlluUwMABUs2n8uPjhdsU008KH2aVhBhm1mN7+bcO/lZM3lhx7LzTbT\";\n  b +=\n    \"XG7kBXTT5cKS7q79/3E3QOinHGzd3nOpE5hQJkEnm1kmZCJkU6Awh9+4NfMPYxXWNZ7YW6I1qdK\";\n  b +=\n    \"DtweX/RTnYhElCMO4KtsZYiUJg08cPBVEHyRWK2YXHQB/07WpIhp0Eq7MaIoSXHCn4XIftqfhAQ\";\n  b +=\n    \"SWgTbmdk1UtgxKeyIFPjK1PNICjtBClNI4Qsp0kgDEsEWUQGyDuHfxzdE0styVoR9ZqkU3ijFmE\";\n  b +=\n    \"fch5jHiG0bG5RnmBlpkXUz6NOOt0E0WPSOYpBCerz7G59+2g/pAZTfWEqV9yyjoStpiRxSkhcFQ\";\n  b +=\n    \"kr843v+5PsqbJYqP7aMGI5GmtLr/XtKp5ct9EoJvWyhlwUrM0ghyZxMMcWDtmjmKCeCVIJyQjU7\";\n  b +=\n    \"QTUAWDhc4W/AeBW5+o1qeqVjenkavdLlfV8Genkj0is1Ar1sXDSV9LLxRl4Netm16KUCeyOIygp\";\n  b +=\n    \"apDUq4mBkaXlEyr88+n8yIU1soAm1tCIq+lVUPPf1b//AjVt0cQs7apGtavFvn/idr+TiFv8Pt3\";\n  b +=\n    \"CiFoWqFs//6IW/aYhb/DfmlJZQEkf13vs73zR0XvGEV2zhFS/ilVYgL/KKnwkFksYrdi1e8Sp5x\";\n  b +=\n    \"dV5JV3NK93miLzSkOCVXuSVhtF5ZXhOUSNySi1usX1lGlbE9l5G4xHhISfiIZ2uTgUPZSt46NJz\";\n  b +=\n    \"z6va9HVq0/fxT/1kmk5eauBGDVqqGvz4B89dNOIWj3ILL2rRWtXiE6e+/NvaoHZzCz9qMaWqxYX\";\n  b +=\n    \"vf+Z3NDZ9F7dIRS2Cqhb7T3y4Nxu3eCe3SEctZlS1+Po3//Q72nJ7hFtkohZtVS0++pMvfjIdt9\";\n  b +=\n    \"jFLbJRi2uqWrz39KVT2uLZyS1yUYvZVcvo72x9ETVULKKGaBHNk0WUH/Miauis3hVrLR3FSyetL\";\n  b +=\n    \"R1PaWq4WZ6My8dkLcUrn8HlM5n7M3H5pCIthYNhdRZz0F8KVkwax+njG9YEthBUhNnAkvFpj8+x\";\n  b +=\n    \"qkK1aC1hSBHIpf8ve28DZNdxnQe++/feffP+7gwGwAADEv0uR9JQBCXYIgYURZG8KPEvlIrcLVa\";\n  b +=\n    \"KpVKlVLWuWu2A69UMaIYVD4CRBMlYG7ZHWqwNx7A1iZAAsYFobMM2HDPxKIa90AaJRjEUw2t4Pe\";\n  b +=\n    \"uFLMiCs1NryIFlWNzznXP63r5vfjCkaFvxgkO8e/rn9u0+fbr7dPf5Yfs5XVk30iqNtAZGF3ZU+\";\n  b +=\n    \"EejivZre7sd0zjT7eca8SgN9rDljm4coP4HqQWxaWN3BEV9cCZTojvWf6DMRQr7mJ2/9IXKkzRF\";\n  b +=\n    \"EIsX0b5hGMwkc1ghhilFIBP1B23KZJ4QtmVbA6Zg2bCU8agD6oYqjHc7YAgnsbBEMvcnPHLXqAQ\";\n  b +=\n    \"1NMS8EDJnDDQhFGMCINw0Kw38AQMOSxsu7+Za0c117uYmTjhHKh0g1H3Xd989NuzHBwPs0+aCvW\";\n  b +=\n    \"mMfZrx7q98uFXJFgm/sHlXGccSqvvOGQ9rA/aKOrpph/gcegmK9zvp+6mfdEQL3ePwVgn4SV19h\";\n  b +=\n    \"uAkL09BRDVPQqaKmD7amXw+fhxbXFFqp1SJavkNtdjvF+UgUzdwLf9KJT29JJIXJNR4vuVZ0799\";\n  b +=\n    \"pvEC1Z0IqM9adtOcGLGc2/TxGUMuDTqVNnfzUR427LLH7/aV7fuuWZytVJML3i9l4dyAvThM7fH\";\n  b +=\n    \"+mzM95akfCLHOZPFGMYzmJU6ZtymlTy/ZT/fJx/v2eJ86xB/c8+jhno/0Wk22b+slWyEM23AsJz\";\n  b +=\n    \"P6vJ4GL/U02Hl3/W1u/J1piHoMKfeexNAHmPIX/ILChZox5EKhapp6K3mLRstkTZuycZS1HrLGR\";\n  b +=\n    \"zzeq71Rspb6RCuVSpOg4shErxNBK1eyT6r5+jpa3n79Hd2Lmjfc0bgKreSdjJDt5Ip8RiZIL+lQ\";\n  b +=\n    \"5Stc+YpMVUISFa18xZ2qKqh5padPK9YWebk/K7fpzwoqXCkPseVFuZVZGwFuecubxOj4bmlSUZn\";\n  b +=\n    \"/XzdJO7eW1J2CbYevPvBWw4oMvBLt9gw8FzFeqTnOV7VJlfUOvBKGmC8jXPDgyp6zlXucOehXaP\";\n  b +=\n    \"skFeNDrtDpsNjpMGZKmJMskB30MgHfUb/ZbYCUF7zuXqPZI6nLLVQ3EFdO3RAf0K54TpaGMCfOY\";\n  b +=\n    \"DXifPPbersS39iEIhfst6uocFjrrKlc3xCn6OBN7lGCnHwvrEW+t63TGyThatLRulXZSUe5itK1\";\n  b +=\n    \"eRVNdY2uZW69VL1qfqvzBvt27SLtHdTr6ljb0mved19TKw5zwEOX9tiWjudzXnL9nAE2hRXdDOm\";\n  b +=\n    \"2yHJ61Wzpn35BOQY+jkqGaCMF0bCRSuPfbPVrsjObCXlnhg1ZoNyhbtb5tMpuyYJxPj/sBnZLJu\";\n  b +=\n    \"3hPTJn3MnHncvz0WZdOJMg6fB5BfZWXEEEOA67s0oeyZbIkFTnzxdbPQkFHA9cgWVMozyR9zF5Y\";\n  b +=\n    \"l7CklfCikTU8iQpTr4pXLRsDW0pS56zNwx4rgkKdtu9M5VjTd5pcifWNbuE+p7nNZ4vTuumTxdy\";\n  b +=\n    \"nAr6jD7Jacd6n6mz3yeHwhq7+WK4j6kBV+d8TO7cjq5ZnFuxBhe+f7eVgVO3ikxd5TLptQVu8Kx\";\n  b +=\n    \"f7AGLjyzYj9TlM3W7sEMsq6eo3ttl+7ZgylGI7HNumBlRXk/TFnqa5ry7/pZp05j8poNSE/MYWR\";\n  b +=\n    \"UDFqa0hLBinzPl5X2O7Ovrc8n5pvV5b3FuxdaPmZWLfEM9XGDi9fVwb0PecA8vcs8Vm18bIz1bk\";\n  b +=\n    \"U+VD5aI7+lhzAOHF67nK1Kfs2qU+7ZixR10atd+rdymX3sZvJWLciuzNi7W2msIHr5rmrR4p0k8\";\n  b +=\n    \"20byohBklQ9EyluOYptRNxHgyGlk7DRSSblUwTDfDL0ZbQ158bXlha+zpVUZes5qPY2Q8xFd4te\";\n  b +=\n    \"Ye9baNtq3lRp65h6XILxS05yvhsu3nOtuX0PMF3dx4w4uNFrOhUY5pYarUeqb34m3K9FF2+voTV\";\n  b +=\n    \"/PFIUl9G5TYeFxb19bcTnY9Zbvp7y8Xy+s1a9ar3J9vO+8b2u8VHDd+JJv9a1yvThPXbF7167eG\";\n  b +=\n    \"+rf27TY7txfT+faljJFf5c1teIwDjwveSz9zLS88w0wvDXhBJO63VjNeD37p5kQ+6df2uoPHqxi\";\n  b +=\n    \"/7TwGW9vGtIGyvBGKMxmeJeSHYTQ4NQE1YF2jvdXWDLtpckUl6RFpgM4u5FMAWeqcqaIRb8wr33\";\n  b +=\n    \"swk/80T+iXezHL1RpTxuO+qdnvLQPl3qj/ikC6yxHEGTbX4Lk1RkTnDHRGVM9s5+Nbos5zM0n09\";\n  b +=\n    \"o+s5mvgZsTpraPZTeHOFbCuBX0Xkpr8EYxMZl5+/iC0HuZdoRVekzSpxsQW2tkhrEU4lPRmT2v/\";\n  b +=\n    \"erXf2bjlHxov5rZ5KJQBu37tv/AZOqbvjOUnepDbTjARsDN0B60CxfhsBBu6mdMbmM83OWfmPHw\";\n  b +=\n    \"mKXHUN4Oqv+3Oceh/VyGNG2LhfTjqb93DCgiimgIznIMEnXspd0iRU6cyQ2GT8GxDYWtyXBYRod\";\n  b +=\n    \"A4NBJvjedZX2NXf7xGa87TGXG7DXAbJk6Se9xwRPjbhdEQH6A5nIXOPVkZG9xugAuUjY7XeC/7i\";\n  b +=\n    \"6I8J11dkGdu2CzdAHjfHPeBdukRxT/2yyQm4gfNpuLXtiy7l449Wb1wi7/2B30v270n3jz0H/0D\";\n  b +=\n    \"vpfN/pnGf0RzSGMcr8HwUOPAKuYR5f1xZDg/hFQPWXIUe5blI9hOtIlJPm8T//jK2P+kRlxP4b4\";\n  b +=\n    \"Mf8wh7zkK0ilpHE+coQUyKz/Ita76RGcZ/rJL7MTXxghJ6ZcQ9dZcILhxRF1Q1Zy3zvzFt7tOM5\";\n  b +=\n    \"5r1d6Ymb+tALxHd/GROi/KEuk/+6v/CRhKIA0eLF6QwCG1kPrkXjcQnEONXMoyaHBHBrKoW05ZB\";\n  b +=\n    \"SC7FcKRyG8XSDKgpjL4v7xLlEcvq/ieRX1kQzBvSbfLbwIBjaATrNvGk+k8bD1bige+dgpW2T6W\";\n  b +=\n    \"GvaTYvXSGP/fOBRaBsAZ9PDZd/JUkmRFPezfg7wySzjsyI94QOp7AxXnMAZjgiz+U9TX6NxMwCa\";\n  b +=\n    \"2cPdPiWKbpwFNAd4tB3Z3q2xMNVBfKA2wU5Ygpe7A1SjvnFAbdx9s1g/DaeYWJVheNYGi0IMCuF\";\n  b +=\n    \"iAOCk6X/Z1CbSeha9TJMMS0zBQd044Tet7+22UK8nux1mi+ZErOZvqosJl48S3idMC9oaeycm08\";\n  b +=\n    \"Fs+0R3Iw+B6ZEXx7nzN5U6X91jS13HWcVOKaAOCmgRBWx8Im0Nu06zkzw7a4SNmw3GyRDfLgM70\";\n  b +=\n    \"bYZEkJ/fdwkRYY1CKJJf4OEeJ5xnMHZMJD6ZBDEJmVnleRu45kOC83lYzEUyiLO9rC31iN7tFvL\";\n  b +=\n    \"Qr5LwYx2mGcTop4fJBqmEiyp+OhsIIkpxieKAbl4L2WPoIZCImjDy2nf3pxp/9sgjIM06CaIUJk\";\n  b +=\n    \"wUlolJiZpBJQIY2AtwqibAUsYfSAM2kOY/ifSeokw2nn2Dg3x9rjpmHqJMNbOUCKMNo9LqMytkz\";\n  b +=\n    \"Bqr5MwWisRBq8qM7zWEHDUAscscNwCsxY4YYFTFjjNAO2RsGn6zDb/LlHbgtkMf0TdPhuPL2jou\";\n  b +=\n    \"1zZMHlF5Q/gMypMPmvdigYSkTuIC/hPsi+yPAwKk1dDx+0kBNgq2fy35yvjmjPMvTfKGyICt8QS\";\n  b +=\n    \"EFKeCFEhPq8CfJ8GReSK1Zh2qsHa+E41JE1+WZGc3sCb8smKyhmcBQo0CkipIgerJ3OmCg2u+Y9\";\n  b +=\n    \"9oeK2Yd6K6XGvqks8dq2J/eriX0m7p512V8SDeRpm//bEvx+CY2V2SSiuvAU4aoEZCxyxwGELHL\";\n  b +=\n    \"LAtAVueQrctMANCyxZ4LoFrlngqgUWLXDFApctcMkCCxa4aAHxtG7C3A375Mr/pdHwGLWaRnYoR\";\n  b +=\n    \"1MY1TS/AFNwKEi4mgZmIzvIQlbVyoaeYFlRSM7eLj/kJlRYGkTQkHaXKRt00bBkFQj4eonJNHp6\";\n  b +=\n    \"VIinQrWdXqG/pZQKG5CxVZCQDC4mfI4oeW+1g4GvDlehaklbLD6ZvMJvBqV3+Ya3XNmckH0n/na\";\n  b +=\n    \"lcR34FDMfqbBR4xejdIH1TP1VkSoDW9qCV5eP0MWeOukb/nKk8qeddLcsGNXhr5bdS+e/SNdutr\";\n  b +=\n    \"HJJ3yWvikQHWezr82Xxrq4lEYR1NPT7ES3PNeJF+Sq+vVyk2hV2QvVkVF/KQSKRv3F6r4JE+yzP\";\n  b +=\n    \"k5H/RuacLW6z4SSdFWTbmrStSLpmibd0qTrRdJ1TZqOJGmpSFrSpEOadKNIuqFJhzXpZpF0U5OO\";\n  b +=\n    \"aNKtIumWJs1o0nQtT5quSdJRTTpUJB3SpGOadLhIOqxJxzXpSJF0RJPmtcnTRTWmtRrnNelQkXR\";\n  b +=\n    \"Iky5o0uEi6bAmXdSkI0XSEU1a0KSZImlGky5p0tEi6agmXdakY0XSMU26oknHi6TjmrSoSbNF0q\";\n  b +=\n    \"wmXdWkE0XSCU26pkmniqRTmnRdk04XSafBUcXCUTGx8w0BGMhIyZ6d1XL+aJ/lByURmWmXicxVz\";\n  b +=\n    \"Rzlmav7LMu47pJpR8QzvL3GcAYojSGZtaOeUe3OHpFMOovLol/h8xIgu9qtcX9UcdRMXVYVVZSF\";\n  b +=\n    \"arfJHV8Fy0y0Ue22mXyq3Q5TWBUKHKP+q1Vszkb9c1X2j1mRcStInasKeaaDQsHpRiHydJOMg3S\";\n  b +=\n    \"zDJV0SEZTukUGXLpVxmQ6LMM23SYjO73L6PBPN7jrJm3+7hYviNlrr/3ll35w4gxtYijfWWJOhs\";\n  b +=\n    \"9METP68185QJF3n5li54lTcGe5AUdC20/i9EYnGLz9pR/G23cRA81vGs69/WQ6gNwbJDNPOdvgn\";\n  b +=\n    \"3n4DL307dc+/01vgjJvt5n7kXlAMvMkNEx7JskMuy4HS5kTZO6XzDwtbYUWDWee/We/+WvVUuYO\";\n  b +=\n    \"MieSmSeqLcR0S2YYhymX3EbmjmTmqWsIbpU486Gf/IPPlUtuIXNbMvNkthn+mTgzLMyEpcxNZG5\";\n  b +=\n    \"JZp7eNkFljzP/ypf+8+Vy5j5kbkpmnvBg1UUyw0xNUMpcR+Y+ycxTIMysSOY/+dyhhTKe+VSvLp\";\n  b +=\n    \"l5UhSXtBQZSOSRmp5LBPkKtlXPJDA8YYwuSn5eHD+DjXUXZB0pPYs0j6Lk723VwHQpC+ujLY/La\";\n  b +=\n    \"FuAXY2+EmhyzvcEyvVHPVy/bD00VjUycU1DM1NtnEVWwFPXMGXgisrOHH375BinhlmpPs7yKchY\";\n  b +=\n    \"54x102cz1vOM0LvtLbFWlFjbJ861AnCKQ8Vxj9URdWqEOq9So6hUI2RcpUZRqUZFictqVJodA3b\";\n  b +=\n    \"OzTOi+N3uWm/dSXcf9pph4eRbwQqbdbFeurl78pCvpjzOG79z0MOeMNmbNsSSB7X+m96z4WPE4U\";\n  b +=\n    \"xlcRYnP1fLBvkxniXy3Jv9w4lsPza9FY0iJMHhIE3HzwybygdaYvWAk7phdu6rv40zisfZeEe4F\";\n  b +=\n    \"xYTWD0STOm0/3SrsjXbTiDMTzwDRckwAzMcv/zfp5W92EkbHGTszR4Zb6Q4DMjOf+23eauRVkKc\";\n  b +=\n    \"qlaT2dpLbEPBC7gByYk4JSaSChYVXNp4P0swpRs/DVoVa36kkg1yMWBYfaaVu17Owglqp5T+5DA\";\n  b +=\n    \"ShrvoM4++YCosKAIFxG4Fd5Rey2/gszQIqi8lv1qzLZ1IqbEBVeTbtY+UK0zRDbmAlWrSBv1Z2B\";\n  b +=\n    \"Dci3POpydS+prHLDcBKOB4LeWPehCBzM5f4+JTQtyzYCnB1u99dhj6QYhLvhR3q/TSv/N93ApI1\";\n  b +=\n    \"zzL26cwmY4xDyT/BJes02yoAsEv+mJiI3iZCCt4KXuVGkCkT51zVpqC03PjvZRCIxvLeUw7LE5D\";\n  b +=\n    \"Z08yRTe4ytUxeJDEg+3uycMb4xdw7mrC8eR3q7jJ/XKcBkQL9OEsETpRIvpB2qc8M6xUo6rXB/G\";\n  b +=\n    \"bVwbnGVTVystUrWACO8PQIuUDLZokicK0C4Dq2go9QGMjZhqkUQLkhnydLpEgFJzSPJ0K9tFE9E\";\n  b +=\n    \"feDY0CzxHjOcfy063IYjliLOd95cFIi9eD4Fp2UZK71eWIpq42NWA6YJse2cF9PAZwQhe8lNI++\";\n  b +=\n    \"6vaFiiVCv1WpFwiWahtmMoYe5v1x9zuyg6Y4B9OsP4oZJ2Cl6g7aO7+ckyDoUZfynCivZ1IF5SM\";\n  b +=\n    \"Ql6aAPaA6dJXA/2qV/6qZ7/qOV+1jaNv+/rtQLAUMBqZNwxeYty7SKuwfih6ekWcOeSJsVeh+oE\";\n  b +=\n    \"8ay55UkWYPGuNLiwtMXlWLHnW5EE1jhtcrKj+4vNq+kXwUu2h9RpovdZD67WC1pcVBsMxKw6Alt\";\n  b +=\n    \"fotZnkDu+naQK+UARhmqahszGV0zsh01wd0jO5GZkG3ogx01L1640cZz7PFYQupVcqH0l8Rms/3\";\n  b +=\n    \"BVIz22pokQgviCiztYMQPjaMA/vcWP1YsXD1OJL5+pLcQPVibvN7BIyEhwSw3RJPjaechGX8cHL\";\n  b +=\n    \"eUu5354ZHmMF+seyBUmgyl4hSGRXko/FJobRhgqVzcMSM8mSLeJxQ/389GQLRE2Z/3mMmT85GZv\";\n  b +=\n    \"mk4BST0aOlpz6HwgPwsM21Y3YkmeirNKgKZqLK8qETV1MTbwumz7IRUl9VFLfY9V6lo+SOmFy6/\";\n  b +=\n    \"n6E9Tj9qvdev5+IGr5pv6BUNtWfwbS7nnjILLTIKYSabT8Sc+nnb3Z/0AYBClVhCoqeyHUgyM56\";\n  b +=\n    \"WFiQJ4eTlvoiTaxxh3pOyGhbqDldCPN3fW5bmw8mMr0pAiPCAajtIaeAjkS9xqzvAzt/KAvsTcN\";\n  b +=\n    \"xsTxaobRFtryI1u+b8vHsAmoLPZsThPX3vFx5L8OPE9PT4MWuJbTMaPmXh+q/23cQFyV4G52jpr\";\n  b +=\n    \"QI7uGmjRRp0WuE6ArXHtAyG/aBLGcFNMspipqQ4hRmmLFeabFOG09QWsEPUwd/mmB4y/FyeUqH6\";\n  b +=\n    \"pihUQMrZBxY9lk5K8yBfkrTUE+piAfuvuxqPA3cWshD0xBTKkgC6w5sboehnfcPuBIeiRSfPLMp\";\n  b +=\n    \"P3TrfDFaLQXHD83tMbnijy90sf3gh6o0eN7WedYie9JHfp8fvuEWBCDTbDMe7IVWfYpUgxgkRNz\";\n  b +=\n    \"Ks18qdHpXyZ9boa/2qRPbPXLOu+HRDJd9kXPlNiMZDSYnLbsfAepxYpQVUWoijg8XaWECGUmw3s\";\n  b +=\n    \"ooRjKsqTY+UjfLU9JVRnajGVmAR1E24LyivSNJzdCWEe7mFeU58fzyyuKyU9rGUCQjRoKQgoVjT\";\n  b +=\n    \"AR/kXfyRG+CfRUE3ri5acmHVFjerLfoWnxBur72vax246aC+g41IXRisB5DZx3Uy4jcFEDF91si\";\n  b +=\n    \"whc0sAlN9s1BK5o4IqbbQmBqxq46ma7icB1DVx3s03/MQVuaOCGm+0wUm5pAM882yE3ZQYBxCBw\";\n  b +=\n    \"xA0cQ+CIBo66gVkEjmrguBs4hcBxDZxwA3MInNDAaTdwDoHTGjjrBuYROKuBV93ABQRe1cACAuc\";\n  b +=\n    \"1cN5NuYzARQ1cdLMtInBJA5fcbNcQuKKBK262JQSuauCqm+0mAtc1cN3NNv01IF4DN9xsh5FySw\";\n  b +=\n    \"O3/tjJNoOUQ1/TznKzHUPgiKYccbPNInBUA0fdbKcQOK6B4262OQROaOCEm+0cAqc1cNrNNo/AW\";\n  b +=\n    \"Q2cdbO96qasvvCVFtZ8sU6x1vDq6SysvDaOQwh8r4qh4lLYXVh9W75l5LqcCQsrb1dWXFjBQwQu\";\n  b +=\n    \"O/mBVuU7nUmJtaNt8gh9vfHDW/yqqDPO+nvT6kjF2rlQIw47IapMO7dxVp7selY5sap6h4VdmZJ\";\n  b +=\n    \"SoS8aivZGqmxahhNmvFx1sdcqiyqLxqYG+61itEaEm+u7reVVtfTard3G+kRhYabmWpCIHesTVJ\";\n  b +=\n    \"7VZqitWhXn3TrXa79Upc4GYmtWKLq2zPoEZM06vTZwPJWvrpVqGDvGQrhSlbXrVJsqNer26LlNE\";\n  b +=\n    \"3OVs/W2r7dZaknou69pbsXW37yVi6xJoTWrVAPnBt/9ZCiiDlYTtfjA/HfUrPk32Kz5N6VZaxYp\";\n  b +=\n    \"FCQk/UYmjr/dpi23IaVGazrgxaGCKbO082lM0uvrR0iieKKRYhv9nGwIwrzBF9Zq8Opf/84aXZF\";\n  b +=\n    \"GysICPTna9C6bYkpDSWu89vRSrtt3NLWUi3Ir853Mmv/VNwlH7bluPxtVYQVMbebjqtaUVqSJhQ\";\n  b +=\n    \"KmNjJ2Gmmk350KugZ23oy2VhwFzFhcTr2OlqogG6tcFqNelpeUt5Ovfxp1V83XM9fkX628adPon\";\n  b +=\n    \"YZ8FzSExgBUBiuqQhi5E7Wwj5HWrbI6f/XmD6RVSlRdxDfKZUGueNbHjebXN/l3y17E0Baq2zbR\";\n  b +=\n    \"CHtDwB1QZzz76EQa7U3rvEmpGgI7qc0QOBkaRYYmwMzrDkIg8aXugMT26V1pyLZWIzYrmray4Fm\";\n  b +=\n    \"+kZqa6CYqvFyXK23e2/G5GbZUdRNDSLkfkf1uZLxSZHOy53W1UixSyCaxeA0m0irfZq34TQgXy0\";\n  b +=\n    \"Um5Cer/BLqyNV3ax5TDPQTOlKKx7tSWwpsGVHNWzgDbrmR8UqRVPPy61rzmlg0j52ae1zzjhUAw\";\n  b +=\n    \"OlWT82r7AnCePYlqOx4E2mLxg/Uk5BzIIOGUDDRreHIciCrSmtgJsfLE9Ma+ioRg+M1+A7o175q\";\n  b +=\n    \"sLnbNFLB9QaqO+kEYjfQdAOJGxh0A0NuYJsN6HJVFW8U/dKkmFEglcjzsbC/SJhbfOWNLTXPbZA\";\n  b +=\n    \"lvma5QU23QU23QU23QU23QU23QU23Qc3VG6Qk2XqcRk38eKuSV2WNZslwyqovpRvhjqENu8zDfA\";\n  b +=\n    \"HQ3UaPcLJ7l9mY3f396abMM/TvmeHu3URIt6TDtxPoT3Q3CwkbpqnukEFXZ8HT3S4PUEAp1aUNE\";\n  b +=\n    \"+Z1eiQQ+w+TGd+0R/0hojF6bMO1w6ifUP3oMUjYvbu7lcY/BgqmrJjgVgBEJ6ztC5GGiOWz+ifO\";\n  b +=\n    \"7E9HVFnNNxSc2p++hcLpPSfTDfRCa98ElO4ApC1K38vH9VUT7zMbaOzuY5DmQKRA7ihBvPGhoEe\";\n  b +=\n    \"zNQe8fV3oC9BE1GJNu25s7sHn7jEjqsP2ySmuw0mKessnT+I0xXuZHWtsf8mMsEAYtXMrhsBWTP\";\n  b +=\n    \"Bt08K5cRuHwDE9+JakzdakoahNYMfcRTjaDcGtutlGv8McRG89zqIUbE8dFGfSx935h4d+XzGT8\";\n  b +=\n    \"cxRg0vKUmS8UqSdOfpWnvOMENiQ0NaK39NZQ2lsSF7oo+HVHmXibePYfyD5b7cSzJGxRDY5klo3\";\n  b +=\n    \"2NO47uM6Plf4WGOlxjVWalzj9o3bLnXdLI1r3L5xm+WFLQhtMXczi7mRxsjdLxJRYjBBskgcVoR\";\n  b +=\n    \"EMB2EPDxCap7H1r15xiAYE39i4h7K7itTdl+JsjsYCkTZyT4GaF7vI/pNTIvIubXPdGiK3scgPC\";\n  b +=\n    \"1N7BUdJcQ7lN1RylYxmyoe1XVRdtxD2f2g7H5xz2Pb1GBJKPiiqqFzwQcx7WJFn/DF60raeJyd4\";\n  b +=\n    \"dyD/sbqEWYHJrpNG0PI2P4DomUn2gvEPbHSVJ8K1xEMuZ8zVLk+2ASfSu95hA9PcX4LGy2SvcPZ\";\n  b +=\n    \"+4rsHZgOvwcyf/oG4O49KFF62EcPN7mHw9KXfee7XD3+uO98XIpq2HFKjTD3nATPhKvBtDZJCG8\";\n  b +=\n    \"4C3+zzLL4YheBS5+QcemLziXrQ5Xj41XiidSXlVOm9maZfVEMax2aKLNZetcl/Kq+a/uSdY5Z3Z\";\n  b +=\n    \"f7uCHekIrurNnB7H6BOgciekSNRPJnFHV108RSCZE2m8adVCCWSJ9VtnxpCxsgqvHQQ0IjtF/gf\";\n  b +=\n    \"bGUYaAazEw1xHnUx0/FP5hXNKvkVQ0s5eWqsToNQNLP1MeZbNj1QEFqPAeVcoRrU5dWO9BqN7oe\";\n  b +=\n    \"MFmx/Z/ypbVgn++nx6X+7cyA1Z7f4g8Jqz1fVYWyPZXdwUcgqR2NJ+dwervER/cIfjFS4IIFfoH\";\n  b +=\n    \"lST3JSW/6R8ESLM3MV3iWmyHc40CJmy9v/G9442Yg4ujiDhObAx+uh/mweN6JO8x+qnz18chxqN\";\n  b +=\n    \"6SCOZ7KrvvPZGfrQbJlyNJw+0GZP5hdyV6id2IwH0qymDtykgLjMFB1PIAHKPYT7HvqDEqizUe0\";\n  b +=\n    \"6plcW7/x61mhTcwPdANno4YHBAsAOwTPLD9lIVovLtBqYRf4yOwa5Xx5Gogb0h0cj0QfCsyf9aX\";\n  b +=\n    \"ojX1VphnpsjkN0TGncabuEe5HIzzFVU6iPuhUASE+u4leOvuYCGQ/kg3Gk2hyLko1wzE535OFFi\";\n  b +=\n    \"CtCaeXfKtLmdKTrOc/vdRjwUfaEH+sQUrV0v3PtvCJfqpf/HbqPeo/2Gx1PJQRZxzpWE3oBmxJv\";\n  b +=\n    \"NAG5NDm93GuE35w7BEiP+Z5g1e53x2e+yrhUEUlnwjENtReucilfoQRDM/0GJx/xe6UV42vZ38C\";\n  b +=\n    \"Ws9sU6ikArYc4N5XnJtSH4zUvqEOvMifWUztrZbCxodEmOp6Zac/fGheJcmOSn58LzKlLv1pKq3\";\n  b +=\n    \"hOK6bSuaoaQ2zc1EW5Kv1LDaCwAVR96tD5utU+k2PqObku9vg09Ps9Vswz6dtRKmw7x8PUGGE9e\";\n  b +=\n    \"G6SQXGBXPd3mEPCd2iivj2QUardk1+uEM8nnDeZ7Cz/uTc4y2W4HoW9wMRC/jRtAVzaSgG4mpUx\";\n  b +=\n    \"M9AY+pT0yK+U9r3HmY5mGCm4wzHJxQK6x5KaCdqubUgXC9yRT4HTIFTtfG5rOtyuvHphx3Aqn7B\";\n  b +=\n    \"ZtbCZvDjE0+olgFowXxfNoZY8Q6GR5aQc/Q8oiVC8qDaqlnUN0M0tgZVI/tlTxKvu8T8oW9gxqY\";\n  b +=\n    \"ptmf8p9tgas8PHNeBtVjPYMqEl80am8Lrkm72rnJ/1rTuvMsDoBmcTTRs0o8kmkg+UakE8tpYsq\";\n  b +=\n    \"Qq5rNbINp4BYcdhMXSPurJ0sooSGafCFHiZyhneLp6tVIhKcFDf69/tkIuJn1dNoJTaWMoTmvjK\";\n  b +=\n    \"FznvIWgqEHxyWPYuhhWugEQ1S1J1psafZHFDcP9uBGZLQs44FpuGKZciatj2oN5vMa/EhNaVXOf\";\n  b +=\n    \"P+4mjeYItXCValT/yLUKYxvvD8XiS7XA2P+VV/AncDEoi9XHUFxt7NzzL/mcwNHeVr1bQN3SAOb\";\n  b +=\n    \"MKT6w9qw0Z6GBbnFMZ05vTKB8pLjr9EbS770Rm9fTPdQ6+Gg1BdGNTu1qiNS1TZs9/lPtGAh9to\";\n  b +=\n    \"PaZXNWn2hq6asj7GebNVyg/RD5Tl9G2jmAy146TkVcOFQxMYEHopvVpmfZ1njNCkijnFEnEfogj\";\n  b +=\n    \"8T6DoiY+JfcJ8hgiaSqLQY/Z6D0n5dV2OVqNO1M+5ZVdexpkYOQpPykjooS+qgDP8wm6fRT8t0d\";\n  b +=\n    \"ux3dElNVlxSI+sYxJMz5CW7VCZXC0YBxJcTsLISVK0vV5WAY5eAm2NEKALGaCq1JVTmxiHgc1Eg\";\n  b +=\n    \"bixRkLQglBbQNAgr4CG17dnWJhxvf0VbUFmpBdbWJY6biTMnOuNJDMXyJLZoZzO06atVsM+Osw/\";\n  b +=\n    \"N4yuAgfsNnVh0DvQcBpYnw2kbM19V10yspReN0SqXfe7TtEbdpyhbQOD8j9KC9fth5Xb5bhyx+d\";\n  b +=\n    \"CoQ3hL/XMu3Ztd+iEbxF7waJ64dpEnfrQoMsrO5m/x2pCddcqsZJdsKk2N+P/Sp9b3jRvONyrZ1\";\n  b +=\n    \"R91yzz0Y7bMaz7+v/FJm4pN0dEfW2crfsxFzNkfKxAzT0U6jQiz807iYpAdPazBP9noPXiQVSw6\";\n  b +=\n    \"kL72u/20/+JBxNouItV+H9shHO/yecKAmFDp724w4u2VL1TEqAKRmadmFfh6QgwrdHGBI6YV+Bh\";\n  b +=\n    \"BjCuwIXkxr9DFkZAYWOjilFRMLGCBVCML3bY4dweIU3UxswDHaGwMAc4Ku4MUeFXiN4rLc4CbCD\";\n  b +=\n    \"wr4GYC5wQcIvC0gFvEZzjArQSeEHAYVzoCbiPwuIB3iYtugHcTeFTA7dggf6hr8Hih28Xj+W6Kx\";\n  b +=\n    \"3O0z6TH+7sjeDzVfQse7+u+FY/Hum/D4+HuKB4Pdu/F44Hu2/HY2b0Pjx3dHXiMdu/HY6T7DjxM\";\n  b +=\n    \"9514bOvuxGOo+z14DHa/F4+k+y48mt0H8Ii7u1imvzvGO/jubjxmvO6DVHUYhXi39CqcwVsrLZ9\";\n  b +=\n    \"Vl2/E6b0i1lQpNRTrKA9xZEh/gD7rsYNrtdvhWbsdnrXb4Vm7HZ612+FZux2etdvhWbsdnrXb4V\";\n  b +=\n    \"m7HZ612/HusjkNIsnt5sFJc/ekuWvSbJs0w5Nm66TZMmmGJs3mSbNp0mycNIOTJpk0nUnTnjStS\";\n  b +=\n    \"dOcNI1J0zdpokkTT5rapKlOpjCQCSuZ+ybMmNk9aXZNmgcmzbsmzfdOmu+ZNDsnzTsnzTsmzf2T\";\n  b +=\n    \"ZsekuW/SvH3S3DtpRifN2ybNWyfNWybNyKS5Z9Kkk6Y7aYxb4iQ7/bvObBGbpb1WyUfH1YodHbS\";\n  b +=\n    \"V67JmmCcdwzHgI7Mj4EBFx5y9SYhyJOGN4vtYuYUdhHI8hs4t6qcmAhgxwo2x9/cbFI+jzhQDhX\";\n  b +=\n    \"hL2blulLqlmxDYLLVLhxDYwhqVVMN0K4LDZR1sOY9ALY96xOQj4qhG0B5/C0cc04jjntnMEcc1Y\";\n  b +=\n    \"paZeIqY1YgTHutMjwHgiFMeqzqPAeCI0x6rM48B4Ig52BBCxJxGnIVMKSLOasQ5VrGgiHMa8Sr0\";\n  b +=\n    \"QRHxKlujs5RezdV3Qc9Vgp43iv+Y5lq8zBiojfk3EGDsVMf8mwhsUkblFgKDzPlO4xC3wxoahwA\";\n  b +=\n    \"2GTwCsI/Bo3zKy3mP+6agFByzbIA/xg0YdDi6C8SWVSQ0sc8aCuDahRJ91NtnAkkIJSGWhGNFQi\";\n  b +=\n    \"wJTUk4XiQ0JSGRhNkiIZGEQUk4USQMSsKQJJwqEoYkYZsknC4StkmCkYS5IsFIwogknC0SRiRhV\";\n  b +=\n    \"BLOFQmjkrBDEl4tEnbgZpcnyzTmyJgiaU7MHsBhVc3E3H+cIsrEHu15cO0LFbkKrpoCa7HByx5m\";\n  b +=\n    \"7RGx6xBySqgpj8FkCTvDDXUMiTKzk+W8mOu2eTDoGr15LpTz3NQBW8pzsZwHg7rVm2ehnIfmgLT\";\n  b +=\n    \"dm+dSOQ8mjU5vnsvlPIdx2NKb50o5DyalwZ48wP+Sl9ZoODVyVH9Y5hCk3fBgEGj6xFwt76KKTD\";\n  b +=\n    \"hIvUlb0uzj03OzU6XOuC6ptzzaqf/I9MIfHsj7HPdxlDLtp33Zv/qFn/nZiFNE+7yBlEN+2sh+d\";\n  b +=\n    \"+6ffktSGvvklpZSDvtpM/utf/nFj0tNmvtE2YpSjvhpK/uduV/7N5LS4pQ2Dz8/bWd/evn3P/OP\";\n  b +=\n    \"OKW9Ty/1aQT6aSf7yV8+vijf6XBKwkPQT5Psf/niJ57nhETRVOXRnoYTOoXQ5mJCJ5DQ9E3oBBK\";\n  b +=\n    \"aBoGHBGwSeFjAFoFHBGwTOCNgh8CjAiYEHvN5oPtYZCgqntCpKzS1CZ3SiMAneP4ZZKsFv/mvf+\";\n  b +=\n    \"/zPJ64kgN8XF83AzxD2vmR/QX6uKmuE+O3QR0JzR/gI/3k4/RNWur4wikMxV/P7BRbK+Q8G0y9d\";\n  b +=\n    \"76lMXQAdwoBrNylA6ae/DR4jg0U8dy4KfIN8AYG5eo3ndekdLzoZ9ufMf1dn/P0ix5zmWMtbsMa\";\n  b +=\n    \"jc9v8BtiM3v+LXvTgE1mh+JkaGRcvtZUY9hNx2J2U6y6SJ4D2H5JnpDzNAuD2WFhMDtku7c1XHu\";\n  b +=\n    \"cHknr0FmjqXMkbbFJhTA3lx3yNWPtzP60k9tzbZ/E7NS21mqrYi67w7ESVnPZVddabYirwBDXhy\";\n  b +=\n    \"9Pdmvsp5hGibHCduswl10tWavtiLVaVMN0cmu1cOxrWmdMYs3TBrv8EyP4nR0xnbwVVPvcUG07b\";\n  b +=\n    \"1iyorHsEXhqFnTlyCuZCW73mAnu5FZs2eN02oGZYCK8kXHaPFBNjo90B9j6DSpjkpK1YAf/bC04\";\n  b +=\n    \"ZGvBwL9TTca0eK2uK759I71S1/5Q/NfXi//1WAu2+G8x/tuCf0Z4O8f/BukORf4GC/RbYMC0i05\";\n  b +=\n    \"I1t0Jp96kTtjlH7uD/NeL/BNvGvKP3kH+60F+CDvZQL7P9otDYvV60Nt5hHDK5ye9HdERxD9CBE\";\n  b +=\n    \"/pOb5Dx0g2EmjtOIwnLx+0igP2kkvsZoqP0F6EMML0APTCpr86r6aVQ2e5nBtQ93G0fsOmDe3KE\";\n  b +=\n    \"XNv8GGcvhIvxenXKvY8llZKjllyYm5yzE0nZnrDuLCPecxhjjnsFQe9bNI1URO91IT7K58fycKX\";\n  b +=\n    \"xbxy8mfsmGpgnCj3r2iTm3W6kbSy62c+O02JVZgmyOZGcCdWo+wvimlDWmnr0P5t8RLKTMw4mwd\";\n  b +=\n    \"RA8+TRF+w6/wy8UnE0UUvp2xNuaGmnRsT1F2NvWpYGVURs9b0naySPALCmgjth+FJGsZ5TDCeHR\";\n  b +=\n    \"lRsx18RuwN5x+ECVqxKC3f9PBNH9/09JveBMuM8MBc4ZtixviEv9Yje5RlGWigEG5C4k2a7OThB\";\n  b +=\n    \"4XJyfFEiCaqFLPFWo+DXI/bVsIWwQRFxcy8wWJYtB+kZu0tialvHAextdWvwvy3WFJiKsXbbpjN\";\n  b +=\n    \"KM+MyPOoPo/p87g+Z/V5Qp+n9Hkaz/m3QLzixzd5QwdhrbdPTDMdzFhTv0IMuzcBK0kVGA6eTBO\";\n  b +=\n    \"1lWECEfNp8fBqQoSjQxskMXHEwo7ybOqT7xwwfCHowlH4acmJR7dFJVTBEsoxekvKbkKSEyW3iB\";\n  b +=\n    \"wXoKkaFBK/LTG8nCe0i4R4tYTm5IpFNSEbpN9Gk/TTAZtKfiPNamqzmlRCFZLaedH09ZnaOJtJ7\";\n  b +=\n    \"0jxbbUD3A+z0KitaQ7nQs1t1IwIrN8M6Ifk2Ry26THVDtai+zW97aS3YNOrpTa9aNMAs9BoPKz9\";\n  b +=\n    \"N7Kl2rgGb0IyayHmLailQ54AG9l0nTAD3ldmxIa8l/yDx8UgSqWb4NZmIYSthSRLMBVUHzfR43y\";\n  b +=\n    \"xzqXrb2SqyX/HR0Achi1qmIJCRJC8TWzWUAFscKAoIXTfFhm7pn4vKAgvtB8JbY9iGRHBcUlouQ\";\n  b +=\n    \"nxaglEHsuLUuIQ69sNDObHW97WrMon0ditj/ovpLzvfT7lTe5zKe9o35/yJvWplHex76P+xUk0b\";\n  b +=\n    \"cNwEk3bNZxEp4N8Eo1jQhyubJLjl81yPDMkxzdb5Hhnqxz/DMvx0DY5PrpLjpfuluOn7XI8ZeT4\";\n  b +=\n    \"qiuHW+kqBpLRCLb6gqsz7qsL0fge2k1f+o3LP/mXG7EsNSDgtAeb8m/9x9/+xJWKxJ2jOGzuf/W\";\n  b +=\n    \"Hf+Jr/0Xj5igOhwTf/OF/fuIPNe4UxeHA4dWPTX9rL0ft+avXfmR6enr+0J9TltmIiCmkKQpPWr\";\n  b +=\n    \"qP4dmiKQzPNk1peNJkcwTPDi3tePbTlh3PAb7obJgNtLEnEjGDtNfHcyNtxPHcRLtwPDeP+dfxH\";\n  b +=\n    \"Brzr+G5Zcy/iufWMX8RTxolV/DcNuZfxvOuMf8SnneP+Qt4bh/zL+JpxvwLeHbH/PN4pmP+fMiD\";\n  b +=\n    \"YT4cT/6LZyldwOmqOsNwnDewaaL5UE5PGvdSMbv9UMCLBDYFvETgoIBXCNwm4FUCRwS8TuAOAW8\";\n  b +=\n    \"Q+ICUe4vKfZhjg+loN0vxEniYwKcEnCHwOQGPEfgCVXKRT5waMAkoiww8YLgntW7YzhvHQPts6H\";\n  b +=\n    \"qIV8/s7U8Md3kiaMLKnqlghZ9nSyKNDM78+nA6yJbo/9KzU458PNnTZE0Kf5VcNEHsaeQBzDmf8\";\n  b +=\n    \"dypRd0Q5MdRIURZQoH5wjcWuJmywZKGjJQYZ68NGTz1McY1j6c+nLA2ZIg1xxjxPOpaOEdtyEBs\";\n  b +=\n    \"j3Ev8NhMcFrakOHaGeMu4RHcj3PRhgxqItIHBH4wJUJ9UOCH00HpLJ4NiGC1Le9LiWjfJ/BTKRH\";\n  b +=\n    \"uUwK/PyXifb/Az6VEwM8J/HxKRPy8wC+kRMjo1CPEP/FRkxydfYjmCUgObTFDZrPZZDaaQbOBuP\";\n  b +=\n    \"d+Sk4giw//1VD6YQsyhP/VjKl7vJw0wLLygRvO3zTqEEXx6RzO8TSOeF05y8Opn8bdqozLyR/OC\";\n  b +=\n    \"DWOuGQ5JwTjqHE3KI5PFXE3pnHEX8sZJE6hNe46xfGJJdXdxhFnLmecuH/QuKuVcTkVxW5A4jDc\";\n  b +=\n    \"P0RJf/UaLn0R+WF2mIBFZhbm1hvJ7xAddu1ywzZ7IMtAO4hsqTrOIsO+LD2BUqeIHIvkBLuEiGx\";\n  b +=\n    \"C5CbEqyWwl5jeoly+BINuQCyAL1bg1IcHgLwO8heLGSB+kD5DTbWVRIQPsmdoEETP0BBInqFtIH\";\n  b +=\n    \"iGDMidoREQO0OjIHWGdoDQGdoJMmfoARA5Qw+CxBl6GATO0GMgb4beB+Jm6CmQNkPvB2Ez9BzIm\";\n  b +=\n    \"qHnQdQMvQCSZuhD6C610E8ofCI8CGRQP3h2yjETMiXgFDF5D2ySMU9NHXnUE3NSyXiRyoxLZibF\";\n  b +=\n    \"VAltpRqwYAJh6IztjMz0gSH+wwHvvWCI52vs8g8X/d54ca0V4YI2dzgOQ9VGomCV3ctDMEQtoc+\";\n  b +=\n    \"yHydcIkhEPrm2+U+yY1buaCHycpGvw/pquD7j/AypH05iLvq1hJ046fXULK/UwterY5bf1ctj31\";\n  b +=\n    \"4e+/by2LeXx769PPbt5bFvL499e3ns28tj314ei0sNEW23bh986/bBt24ffOv2wbduH3zr9sG3b\";\n  b +=\n    \"h986/bBt24ffOv2wVdpBDaa7SmGWF4mxUwmGCD+2kiIUb4kcv+IKBkXdvsrVJP+eLXIFfJKvkkF\";\n  b +=\n    \"H2JWQRODtvYyHpIEilFIEyhOu/flV/KQKlC8QrJAMQvpAsUtJAwUu5AyUPxC0kAxDGkDxTEkDhj\";\n  b +=\n    \"LuKqC3IGVBNlVSIKMFZIguwtJkAcLSZB3F5IgDxWSIO8pJEEeLiRB3ltIgjxSSII8ijE573UfU4\";\n  b +=\n    \"TFNMsr9VZtiDEP9wx9EpHjtI//irEhRYS99qHDx/IU5OrjMZd/QyPz70Tw35RH5qW0+E+/FY2zd\";\n  b +=\n    \"6aVvpbgdjzv2w4vjnirzUskQY2Vl0VTx8b17eY+s8Pcb95h3ml2mu8x32veZR4wuyDpYB407zYP\";\n  b +=\n    \"mfeYh817zSPmUfPYKgXdO9ndoJWMaCQ3VUZEa8TOOZhObUwIoTHm2CDSHufxcAckeHBjIpYhgRO\";\n  b +=\n    \"gAEhIFGX9NlpGgMxbxRekd2ZFnyaPXQxY7F5TuU4y6ELgvqqh4l2bhz7Upxk+KwdWIkAo9q4lMw\";\n  b +=\n    \"6qZJ9d1312XffZdd1nS5k1u9eu85ZX99pwXlaFCWs1epDf+0OVij9H/+pQxbGfpJqxBL2KdogK8\";\n  b +=\n    \"D4T28tM1htu2IyDIjCNG/pGnnFQM8LE9jpKrGNDXte9JB/XUVXqtvU1uS4HL1bPX6zpi+F4gab8\";\n  b +=\n    \"C+EKX4jH11VigKoE1qnUJrNJ3ilTXmkMat+6A5D7daAIFleK/KdCTM6gC5zVLOwhVV7fTEH0YS/\";\n  b +=\n    \"R099GU65aE0M3r5aEPuux8l3ifEzm+8CZ71eqkjsSQltQldvxWc8dhQhixa0WKU3jjtZOkaedU3\";\n  b +=\n    \"zhCUMJBTk9djZXciYW2XR8HHYTepzMrZmursRWKT8GGcXWMaKMwIpQoZfPAaJCbzYUTgw99slhM\";\n  b +=\n    \"7BbnqgnA4wjrFpCmdYoE1uD/yeDXh8YrOkqXxDLOi4jlA+RUx7NMiHEOiHEOiGoDDPlrNrJIOYJ\";\n  b +=\n    \"QicDXJHQ6zWZDKztBP0EHwzLqs6u6cK/hk+akG0i1xjBWjR7h85xVhX1OddeAbuEXilymWUDMWl\";\n  b +=\n    \"As/+Tao+491Pesk/5K33KX+lT/hqf8jCzylLBXlbSqswYfdbwP8uLe3q8EJkingXzRcSBeKkiXl\";\n  b +=\n    \"g4NsPBfFa95x37i4/2sRstXsewYQuYuWvaaJlM5Be10OgF1mnFIjbDk6hEj/pXWFPyMv9e4t8F/\";\n  b +=\n    \"r3Ivxf49zz/zvPvq/x7jn/P8u8c/57m31P8e4J/Z/n3OP8e49+j/DvDv0f49zD/HuLf6dU23qyd\";\n  b +=\n    \"NOrfYpGGm/x7g3+X+Pc6/17j36v8u8i/V/j3Mv9e4t8F/r3Ivxf49zz/zvPvq/x7jn/P8u8c/54\";\n  b +=\n    \"WUQr+PcG/s/5aNdWZMyx2SE3digD/CAfc0ZKxKTFOiLtribPnkY4ftKKQeXaozkW5XKMt3LOfiM\";\n  b +=\n    \"pUqWlF7ELhkNAWLY5CfFsb3tqJDenlm4dAi5C3yu5NZH/GORnSnPZNdVaiG8OK1CAo7QuLBldW+\";\n  b +=\n    \"46uj4uB/RWcw2FdpC4EFRHsuwiHFvaDGKCeoizsQZT8ViQrCsvRUaQWDLOXo1eLRofjvTyC3Zv1\";\n  b +=\n    \"IL8iflS0BhqLG4EKLqbmPXHwJwY82O2fBS8W4EIBXirAywV4pQAXC/BqAV4rwOsFuFSANwrwZgH\";\n  b +=\n    \"eKkDau1nwUAEeLsAjBThTgEcL8FgBHi/A2QI8UYCnCvB0Ac4V4NkCPFeArxbgfAGeL8ALBXixAB\";\n  b +=\n    \"cK8FIBXi7AKwW4WIBXC/BaAV4vwKUCvFGANwvwloKy3Mionubzsdy3YmCj1LcizxteEVlc6/Nfu\";\n  b +=\n    \"GzeCFeZN1y3f0E+xNiJZ2ne0JVLS54txdgh7RVxK9SnPKzd+vCKp24MGzIL+fopGdM8avEZj4ff\";\n  b +=\n    \"jKdBSRVvippqESTuW+w84BWxQeHPkMdlPjMEFllhMdLti3aU+0UEFnbICVd7HJOCZYqcMrwedDo\";\n  b +=\n    \"tkhi0eBpaTY3Lg16Dz+BCPoPzH8sOGv8l2tQZbyKtwXoA1QAue/jO1kp6iOGCqvJxVeXjqsrHVf\";\n  b +=\n    \"M7W8/ycVVm5pSPg1EwXOAoHxer1RnmrQ5C2mY6eBHO6efZR4jw9bV1f7W2vq9WjHyH+NRYrDXIZ\";\n  b +=\n    \"+KyqQyxBu/nnGQpMl4pstkbqVuC8mdTseLJ99IwAMSjriK+3u2Rp2kZjaGBu4f9JfgY2Ra8VoCL\";\n  b +=\n    \"BXi5ABcKkKYf5+qRo2iecq8eOY5mNPfqkeNo7nOvHjmOZknn6hFR7tUjMTFi90JGWU04Usf/X37\";\n  b +=\n    \"8Eagf9hrTcdtEKxyOtMQfmZx2YbnPI2QikekoKg5gPJaR2cnu4iW2KKzGH9Q1GoXVeJjVNCfzrC\";\n  b +=\n    \"HzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzrCHzr\";\n  b +=\n    \"CHzrCHzrCHzrOFteNaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQedaQ\";\n  b +=\n    \"edaQedaQedaQedaQedaQedaQedaQedaQedbwNjyrnOqzbQp7wrjER+eBTnBecTKvmfXg2AnxxKs\";\n  b +=\n    \"jh1dNdhylqT0TP96NbXmlW4BY3ymoTBaq2InBMVsgC0JeMaZizxLTTvZTbn3d9Z65ahFh4SMvv+\";\n  b +=\n    \"8VNpVzytWC5MxPa9mXtj10rQuYF1Dnv4iXq1U+oXO+4JF5Pspd1TsRi5kGv89YsApyimAYDfN7c\";\n  b +=\n    \"CO/Orrwlw+pIrXgbZsa07R8rWd0YNmDXpa8WhJjmBrBHGnRt3dY0zusacGaWjpj//VW2ENGmbi0\";\n  b +=\n    \"9/UKikkqjyzJ8tHiJMeSxehwBTGceSdU2wb2NNSOFL80O8hCUtVSedDmMTJwbbBn8PrLBq9bDV7\";\n  b +=\n    \"MUDUoq8o0Y+suY5Zt69gxy4NagpLKNS9UXgUv3Abfsq31Itbe67mXGmK7Jx/JEE+RUcx8DcA4n0\";\n  b +=\n    \"FtPvyV3tTDfOIsPzbgDx3cCP2UGU+OH71d/g6oEu/yR6FKvMsfgSrxLt9AlXiXvw2qxLv8IagS7\";\n  b +=\n    \"/IHoUq8y09wAbjLb+Lyb5cf4+Jvlx/i0m8XX/jJ2WIAw1ih2SH6XZHxXzyTDh+AtPawuf/AlNjL\";\n  b +=\n    \"2vYIrA0hZ0zR9x0w2/L475P4JsW/3Y3/iMQnFH+vG/+ixA9S/Ggef9cj/kclfoji33bA3CXxdz8\";\n  b +=\n    \"CcV3EQ1bkrQfM3RK//RH/FYk3FP+WA+Ipdio1j/hTEj9C8SMHxK3vVNp9xJ/2JGGUEu45YLqS8I\";\n  b +=\n    \"5H/EOasIMS0gPmHZywOzis5w/dUK2tZk3rfXQXNNsIh/vT4ZPsDkwiv4/xa4ZzOfPhRyjISR/hH\";\n  b +=\n    \"ignwS/VNiu07jEG3eQmJd/lJCflZFwK3u0kD5aTYeJiu5M8VE4eYiuOkHXHkZ+XxmeYwvjoz0vr\";\n  b +=\n    \"HBrlI0Av7ePQCGGsKM4QYovQNrfwHNqWQ3fl0N05tN3K3kfQq6QvfXgCCx42MdHEpOJ0lHAKX90\";\n  b +=\n    \"wT8mxocR+RGNjiY0l9kWNbUpsU2I/qrGJxCYS+5LGDkrsoMS+orFDEjsksVPspdsMn0TcNj4S9a\";\n  b +=\n    \"DRxcp1lLCdE3ZwRB0Rd3PEKEf0IeIujmD9AVNDxDaOMLwPh144RveIjO63yOh+q4zut8noHpXRf\";\n  b +=\n    \"a+M7rfLsL5PhvUOGdb3y7Bm0wDJme62YmjfL0O7Yod2BUP7HXZo31Ua2jvyoXdXaWjf58Y7Q3ub\";\n  b +=\n    \"O1Sdof12d6g6Q/ted6g6Q3vUHarO0H5bPlLT0tCmqSDNTfm5Q5vmArXx987y0KbJ4J23H9pQ/Pb\";\n  b +=\n    \"PFKO7D7JEAVSJw9WGOM4HHsR9ljta4+V5WLX47tUHPPI8tpe2U/m41WSzrcgAFeO4NPgGl5dyga\";\n  b +=\n    \"01dFcf/hU+ibCDv1Ea/M3S4G/p4L+nNPjTN2vwt/emlQni1dsY9/7EpOA7lJFPKSGL01B8KO6ie\";\n  b +=\n    \"exTfGTjWd2yKqOf4qs2vqqeGDH+Kb5m42vitZJnAIqPbXwsltF4DqD4uo2vyw3hRex1MBNQms8z\";\n  b +=\n    \"AQQuKzoXwDDTlQrOpBtIxnyQNuTFyxzdRDRmBatCeomjW4jG3ABJTj5v42hYg+UZQgRIoSf0px5\";\n  b +=\n    \"cW7HjJsB8QwQDKJgZuwlPhd1+nvu6AzzZdTfw7NYd5OmsuxGPbd1NeJjuZjxGukN4jHa34LGju1\";\n  b +=\n    \"U2leA1VhPKLFmBcCQYXk6DCVFgZssaVbasEUMCBXY3/ML0hmie+PoWwVA/IUQPT2aEbCMmiyagU\";\n  b +=\n    \"NY4OeD7B9tggZZCNaiZzYWs70Rcyp6/eu3PXvvSa6/9xf988EAa7vn5r0DL6zde+7WDyUUwqLPg\";\n  b +=\n    \"EolGv/TD33jtta/cLZHMOu45cf03f/nHL5099rWKxE5z7G/8s6PHv7T0H3/9qsbCwlO453d/71/\";\n  b +=\n    \"+46t//vUf/Xcay/zqHriy/9y/Pj+9VSIXwDzeG8yGuIq5N4inUphNOsdOR2D9795gLkxDWkOeP0\";\n  b +=\n    \"OTUliqebSs5vPYlvbWfAGSdstqvoh96PKaY+/aW3OK6an1nNR6PkhbeM6EMCtyb5BM0exCjO/zZ\";\n  b +=\n    \"3BQJW1omCqqPpVWp9hN++WAo0M2Hhisv2mzKzVtJlipadPBik3zV2ga9k/LmzfvS6cE6Ix7g2m2\";\n  b +=\n    \"l3FvMDTFNopjbt4xaZ74UaD6N7lBvmCgzlkuSFPrplXCwDkHA3OrYqC2DANzOETrxQCfrC3DwAz\";\n  b +=\n    \"H9mJgmmN7MYAzz9oysvQYA3O+dPBSIB1splLsUPq4eYcFA30mkuZ1kHPRc5F02VckNR0kzQQukk\";\n  b +=\n    \"5ZJDUkSzSVJnJqmiNp3l8NSdXlIwAHU71ImuPIXiTNcmwvkmY4thdJ0xzbgyTefFH1PCGTxUDG8\";\n  b +=\n    \"Ci6uWPa3Lyb0ry2JZN+tmzoovGap2jsOGicDoDGyNJasAIaZ5XWEs5yTvCVWFpTNF72nNHmrZ/W\";\n  b +=\n    \"sJQso7XH9q5AajtXojSzEqEly+kM1XqOSKtfieGaJQaeMwidvrhCKdBZUXT2O+hc8ktkGZTx2cc\";\n  b +=\n    \"0R1laOT5PrUSWc56Lzwue4lPJsiH4FP1YweeHC3R2dgfzodhxpWTWdrZNipe3aNFHk/psk/wVmj\";\n  b +=\n    \"StTWpJ/0uWFlqYN2nWQ5Ma2qRz3gpNegwt6miLLle0RUqJ4e7gQuhU9Jq/vKZLnlvTwz01rTFmP\";\n  b +=\n    \"SxZtqanvBVquhMVDbmiUVFD+v4Cvl/T79/0ln9/mgqP4GpA0ODpilJzvm+mWFZQPv9g+ev0icvy\";\n  b +=\n    \"iUga4Omy6nwiwRfsmjVa/gC9v8i+OvX9Iff13cG1cAU/daF1uQObW8dOqreh0PFUVDWh2t01nT1\";\n  b +=\n    \"f+bmP4e5m+rcr/Ll5HBER4XajLLYe7ELXg125VBM9d4bqD6O5eyCrR9SIM2Wq3n62kNfrzY3KKt\";\n  b +=\n    \"zX8VnR5xI/OjgARmkhZ5SwTnjq0IhdCRWLClgUooi4WHyw7EMSulijsFJSn8TFWlrBW7RSFgtxb\";\n  b +=\n    \"OrFsh6bvoIZik2jYFsqKDx/cTpwXpxzX1x0X1yUF4eKF2fcF+fdF5fcF5dk0YNZIN6h/E+YGdE9\";\n  b +=\n    \"Hy1Yptqeb//qX7z2+emv/5+/4ywYtT2fnPuhfz/9sT8//i5nqrzwrW9e/MU/+fqf/1mltKjScib\";\n  b +=\n    \"roM+83mH1idiaEuPoi56wCTftusDjMK1NCVWuUrf5Fes2t1LdZjmyt3JY4frsVGCHYiyzmx3ndX\";\n  b +=\n    \"cuwsSIOVFWooadiFvF4q1DXZoF1qhf56V5D7NbvjrJ2lQzfWs3camyUhMXKys0UZav3ibuHM+nM\";\n  b +=\n    \"p3e21rDAbsAYM6tu5NNXZaRdIPOp/Vi+WhgYp1KB4VRsqtyAHzFOh/ddJE1pVjC2t4qmKN+xXJs\";\n  b +=\n    \"l4aNU+kmxexHeTmw8xZPiLfHk1kJTclyLC3DEH/BpJuhP+cuKm0zwJ8bsstOrWA4mmYwR8JCAAQ\";\n  b +=\n    \"2gLGCseuUF9kSenSpLqNnRtGj69HGHD2bLFtd0Z7ZIG9t4F6h9Rj92IfFqWAU+rmPppj0knyBkF\";\n  b +=\n    \"UpJTzyQpGyRnCFdqr0Kerppjb/suXdBjnXoDB5WNRsG8+t1MZ5RoNt47GeNnbQFHboViyXNTPkr\";\n  b +=\n    \"GjPARH9wHnBcAyg7chR1zWrRYhJnDUrMZslQ7I7gP/qGNgR93GgoZzZtMzRYEH3S4GwCW1309LO\";\n  b +=\n    \"m4T21nV9VB6ivAJXUN9EmzukrbXV3R0kuGPkXqkxuqkuscsax0JdU/lH4tI3dgdDstfARQr8AYR\";\n  b +=\n    \"qQP8ILF/ACHbIBpJpJ54t/MQ8bfh/wprQnwvl9phtx4vleDain73KCvBiN/9cKIb4z2pxc2G3Kk\";\n  b +=\n    \"u6qT7BxvT5Lh1rd6qLYmFTnx0Q5m5Y5ZAAl2FFRdhnAZZwPlbg98UqygWOO5Wr4vOmHwbudWeZW\";\n  b +=\n    \"9ifIbZgLjS1kynX77xa2Ge3C2xVhPW19XgDhvXlzIcAvntSx4e3dwIItbPQfiP3WXCHSbjDJNxh\";\n  b +=\n    \"Eu4wCXeYhDtMwt8NJuHcT9PafPmn//aZhKIid5iEO0zCHSbhDpNwh0m4wyTcYRK+G5iE6Z+ltXn\";\n  b +=\n    \"2Z//2mYSiIn8nmIRPDYglzqWWCKai/GfYRh/kbZ8RTa5s7qvzbAo1yOZbEI0SXZUaLL+y1o6jTT\";\n  b +=\n    \"bTEl3sqGQ2dLEJaamITQgVsXPNcb7hK8dON8U5TbUUu9AQh8Tl2NkGlLOrMNXlxC71Qa8l7omd7\";\n  b +=\n    \"4N9nZh9cDv1pdjNIins1rcO55W4aSvVtz7OOgul2nJco1zXmC3PlWvKcc1yedXxdEtG5PS1eaj+\";\n  b +=\n    \"iBJDuXQY9FSWqIwlGFVpK+fUg5NIfHQuMDNWwks4zlMlmLtye4mMeTlaYlahhB/YBFUupNwiWGf\";\n  b +=\n    \"ZoFxST7sCWDCRBXxTuT1s0YXX683l5rCe2VC5IdCK0qG3LJ5/txC1vlJWxl8lZ2vdOdvrztlZd8\";\n  b +=\n    \"5k3Tn7151zYN05N6w75+C6c25cd07pW+Ruma3Z4jeE1Od6SN2Sskvklohd8rbk6xK2JVyXpC3Ju\";\n  b +=\n    \"sRsidUlY0umLgErgW5agUDLRIuPBjlpcUjjluXi3/a6c3bWnTNZd87+deccWHfODevOObjunBvX\";\n  b +=\n    \"nbMgLTfWIausI+YTWRw12/liqiY62PzH/zPPitiYmL3xknMU44tRJ9HRnvmmNd9emjG9Qot7qca\";\n  b +=\n    \"GG5JXsrboBZdSSyWXk5iobOWkJaVPy+9OuCZxS1mzWd+8bbPYIbipqhJiXucZaW1e5/Ky7iSuVm\";\n  b +=\n    \"ss+rXe5hYvusO9lvfYjFea3PNJY1k8azMXOoS1nnCoJfbGzZfiiMGB2VzRAhfD6kstOSzxRhwDj\";\n  b +=\n    \"MyBVaH/HMGYkKhZB6pmHaiadaBq1tAUVDVryPGajqpZd6iEKsTRd1pTRI72ZxrkNh0x27D9pMJm\";\n  b +=\n    \"lJ+HRKM/t6oG/cWWRPSYngtym47tkqHBoGT7MWB1S86vNh19y8tpCTuFR8CHbJ3+BtwBiq3BWMD\";\n  b +=\n    \"rNu6aBa5aYNECVyxw2QKXLLBggYsWuGABtejoqUVHFuVhfWuwkEFu0VFCuV3BSCJyREYmKvWPa+\";\n  b +=\n    \"crKOuxgb9VHThrsytmE7huyBPl20JtG/bMPBk6vVrbvfbx3prb/Sxs40ViZaa2zECeV9gQq9mip\";\n  b +=\n    \"6vjvVVczTKvIyQuPohh0qtaNiunY6WmY6WmY6VWMqpXt+OlVjaqVxovZaN69nOBa1DPWr3D3tla\";\n  b +=\n    \"p6tOmLq1qDe5vpxUZu4kGt9qss0uRk1uyC8QU359JYN4fXlBYhAvMH1sxo9tpCJTPyTZ8kz9eaZ\";\n  b +=\n    \"4/DYlqfG+IbXdV7O23MRyISs0wBuXWI4vNSV0TPLRZgUZ+wqTfFXrVg2T17pKrKEmtcKeWmGkL3\";\n  b +=\n    \"InssJSn85VSREsGb9M1rTU115mqU/0KsVa5dr2+t7aY68vtlYB1VbogCV5sdLKEW+O1b5kRat9Y\";\n  b +=\n    \"vkSM6tjuy8u2e4Tg328mLWs7b5A7atxn+f292JxfBizOTzuoab1uxexVQ3HUJ94GPVNnGesasZ4\";\n  b +=\n    \"fF0lap/bdWs6N0Md6JKo78LiANvt6P2SL5WqOlYhq051ankmVMipc7SszmrOb0iNCPpseM5Xa9i\";\n  b +=\n    \"KbLExYjqFjcCg14ggmy4sZQD5r1qCj6/6vUYEfyHx44ObcKOyc28ajbBrEvmTU5jmc3yehCuRlg\";\n  b +=\n    \"WTtPGc2JBvslzuBwlumtZ+WsWbL4TycoMPe/HfdorC9P1Obyj13uPFBLfYjQ/N6B9GJRt7pum/5\";\n  b +=\n    \"Pk0GCam8KOgwsYe8yn2n5pK4vT0fEXTX5H0pCd9etrTDFOSIV6WwX7hgGQIl2WQb1CSr0ntPY/+\";\n  b +=\n    \"0EmarQmte7PkpSz5AXq98lQL2ioHTXgm7Rym9rc+gWPDlmn8/RZsxWobm7tZjJfQw8lNTs5mDxp\";\n  b +=\n    \"bVLZQeTGbOxmNZ/8h+R+JMf1y5dkWcBK+RIG531PxW+sziuWfO3se/UTa/BR7h0o3H0gH8LzLwL\";\n  b +=\n    \"FW2jGbD0xBENu+0C9uqdK7p8yAVYZrmP4D0DDMc01x42MoWna37PEyMetzDl9/p1cZ35s9OnEmH\";\n  b +=\n    \"fgUVePgVHcjPEwY+n4T5bZQfl5u0362KR+gyh5Imyt8ZRMV0TkAhzUINdmDFzvH/lf60a7nH2QS\";\n  b +=\n    \"6mCe3HPwk3sePfwpdo2Vbj2Qbof3iQPsYSsdRnutm6u0fSAdQuy2qcLjVsO0pTpDy2uSDk3t8XB\";\n  b +=\n    \"VMnD4JI3Gmf9QeVZs8B1679MtNoT1b3/3nU+3/CzOYGVt+ug3rgRPp+EwLdtIkQgTDjcDrOtX8X\";\n  b +=\n    \"ZGY4zgazXNd7VCcJ6l/gxFeRnMvPY9PQyjk2GG+X/2R6uan+qAEN7wGlk1A0s1feaPQk2mmnGQ0\";\n  b +=\n    \"hvd0GyZ6kLzbeMnujgu9PZm3ng3poiWSQj/U2bTVGr2o4mbkAcGnjzRuP3+bs0O8awfIuWwVkkr\";\n  b +=\n    \"qljVeahSMZtED/jFvWlwxlD3J6YxlTb/fquFc+YnWwGf5BKZ9qOEZ4a7wR5PnA1126YFr+cmeIJ\";\n  b +=\n    \"GSXtP3wE4SYcx0wbBRMSEbN784SsopOsRVVMKtAw2EpW/gMnJIzYp63+WSqDo/cQ69n+QOKkmtW\";\n  b +=\n    \"1w/wFceUwRxVDs8xTTRHrjhclWm78D/8RVLhLEPrW/uwGXE/uJdinX/u7gngr7DkJa2jQDzxMFD\";\n  b +=\n    \"U7h21MfxMl55nWDZtJguyoHtZodswE41DoMfLCVUFT/fmpmswvLv/0fhGHPTiPrp7+LX/2C9WRP\";\n  b +=\n    \"oet5iPCU3ULokxLilodECPj5/m74ONaCOcqQbclmke+PKV+2eJUi7s9mbITBNJEt/d9aavbqlyn\";\n  b +=\n    \"9ruzWl+0L5/8TRezO5q/aiFtfoYixbC6PWEDEtmw2j5j9Cpcxk0f82SXOMX21+CjVNhByeZrIZR\";\n  b +=\n    \"OQ3oJXPiKN9gepIegYmo28qW4/dVn7eZpxDuK+pkn9Av/bNCaHpsz2KfhvMm1g/q4pQxPTFozgz\";\n  b +=\n    \"Wbrfpq6hvebbfvNEOF1T8XAsUgyRd23cQ80+ZsSGASJEZhuRs+1qNMw4UnP8QvE5npdD8Otj9jN\";\n  b +=\n    \"g0rN+GQXU9fgFJED3uUFiyJhFKczRT1Jld5Pldtg2h/kyxEAXU/LFCt6/dkV238ydh6HpfEX+Ns\";\n  b +=\n    \"oDNdgzyNqP6hr/wcn4emlucf/YIZ7x017pqZeGG55Yp6x0gwbFgrYZR0MB9AaLTZSYmLt3uNVYD\";\n  b +=\n    \"un0W021F0YsWT55/r5Fgt+RPhziX6uvWfwAGXiL7b3vHDAtEof9fOPsrsob6WPNoiD2UmcQQdAB\";\n  b +=\n    \"RYGIlzHEmeXDY0nM9T6z/R7Vb5f8VgEA6i4vwKb14vexOOsoHIEuzwqNXsnbqtYj50mKLblUWUD\";\n  b +=\n    \"CuyVNry/gmkWLmkD0ZGOaG22SX5v0n6wb5oYuIk18Be07Kf0M4EpgE2+3F8J3UxhBhdb1O5GtpP\";\n  b +=\n    \"d3O8UO8YBHzrtFJe6XHwEN3/Om5p6IE/1Vkjdn6f65a9O4eoImTixVG+wk4SfUGY8VvanulmEwT\";\n  b +=\n    \"ReoAaXq8sQV1kdcd5yxK2K0ynhKHsqJrgykVQMrolD5uGlcuyqmG8cV62Qt3qFvNUr5K2rQkxdK\";\n  b +=\n    \"XvzrmRY1L0JYbxr2dU/0FPN5BWaBoD2qxXr7SLch98P46eyb1KuqjUp5vD1PNzk8FIeTjh8Iw8P\";\n  b +=\n    \"cvhmHh7i8K08vI3D07mjDcPhQ3l4hMOH8/AohT2Fd+zDhOkzxbjtQdoDRTt25u0YhdMYbcMo3MZ\";\n  b +=\n    \"o/UfhOEbrPgrXMVrvUTiP0TqPwn2M1ncUDmS0rqNwIaP1HIUTGakjPT5UriNOmaJyNR0HI1LVea\";\n  b +=\n    \"/A+QWvjPOLXhnnC14Z55e8Ms4ve2WcX/HKOF/swfnVHpxfK+G8cLPitmmGneSU23S0p00zTpuO9\";\n  b +=\n    \"bTpeE+bZnvadKKnTad62nS6p01zPW0629Omcz1terW3TZigmJym/4gPwHu8tvKhs2s8VWyUlg4G\";\n  b +=\n    \"3TCKSv7IB6/k04TKptPDZabw+aveuGsBnz03cXzkxserxIuhzXI5vAXWQy1ZlKfZeSq8qGc8u/O\";\n  b +=\n    \"4D+BCjY2bCpsV0C6GD9tsPdEef5L9uQL0cpCfOLvDvJwFOB78De8JsXPIUxC21OxtfZL4RCwm+F\";\n  b +=\n    \"6U0SSEk70q24s4+PfY4mmoa608NBTLoymPRB6D8hiSxzZ5GHmMyGNUHjvksVMeD8jjQXk8LI/H5\";\n  b +=\n    \"PE+eTwlj/fL4zl5PC+PF+TxIXl8WB7fJ4+PyONFeXxUHi/J4xV5TMljWrmLQ/o8rM8j+pzR51F9\";\n  b +=\n    \"HtPncX3O6vOEPk/p87Q+5/R5Vp/n9Pmq15A7UriWavxfiV8/mOAYY7GiUh+ZkgwjPxDkB4L8QJA\";\n  b +=\n    \"fCPIDQX4gyGeDKHs+/e2vfeunfv1XTrD4C1s92fPjf7bwma995re+HknUBYr63Lkvvnru1379V+\";\n  b +=\n    \"7jqD1/eu5//+yP/+K3Lj69O5A9FUwwZWac7Vg9tpdt1HZpmxjAHm2UmS4MmX6Y2BrljLzSehrx+\";\n  b +=\n    \"qfWY7zSetqT5K6nPUlT4lYC66mTYokZ62mVqHbxK2y69WDyQ3L2B4uZB7NYZoNdRFn0Qyw8/T6I\";\n  b +=\n    \"nyEGH8DPIIM78ZMwuAM/TQZH8RMzOIIfNk9k8FOZ4iOEqam0xa6p2+Kgmn8T/hVf4QP8i73+yWJ\";\n  b +=\n    \"PP7DMnXZ+DJG73LaHAqZlAXsUgX3JoPXtzWKIU+lGCbMUYufQ/nSThj9+4c9/JqLwZpv/L7908x\";\n  b +=\n    \"fp/SFNPzz3tZ8KKH2LhiGf6FN4q81/5he+uPjKFNscgi2hvcS2bDg5gX7eR1xhbq2LaGWAokOz9\";\n  b +=\n    \"aS16eWZfo7ZctLa/vJMwjFDJ62NMNo5c8zmk9aWmGfaHLPppLU55pkWx2w8aW2TeabJMYMnxYZZ\";\n  b +=\n    \"bOJs+j/NV/Iu90GSfmaeYaGqQOaiQOaiQOaiQOaiQOaiQOaiQOYifjwM7gMzsJ8FE906LAzuZT/\";\n  b +=\n    \"bNV/ueLPgabbKjDmbIqYmuryOyHCB8/dIsoGusbuA19mXchtLvh0NHkZDT9L+PMnvTZpCwzQxcB\";\n  b +=\n    \"PhoIVGI9909JmGKLPXqQFqEfugvghp1d7q6CJTy9jQcF3ezUeV544q786o+mseVWr5qk/G1daTs\";\n  b +=\n    \"LI1pOPLN9WJSczFNKrQdYM6yohMJuB+JqCxBetbiY412lJQPKzobT4J61tNHXG+iSdgcDygcYb5\";\n  b +=\n    \"NNZx58MkHzzL02iDVa5QR59v6hSPe6jBk2J0S8agbxoUj5v74ElmYqoPVYYgkPlQZRBWOR+qQBg\";\n  b +=\n    \"1fqgCF5rRQxUIytYfqmDL7uFYA0bRh15+qDLMUELQVnFLQ9AWFuxE6maGkLqJIaRuZGPsSN3AEF\";\n  b +=\n    \"IHGEJqP77KqR2GkNpmCKktVIZTGwwhtY8hpNZRR06tMYTUKkNIjZizQ2rAEFJ94QIJYkzAm2ZlW\";\n  b +=\n    \"+M7WL7f0Hwl4p8jFXaxFrI7XbC9db0mzipPNk4k3ttx7DEXqLsl3Q69kG+Ynsu3VE/lm67H8m3Z\";\n  b +=\n    \"g/kejndvO5hlZz6emXvm+HkbwHsD3jDwLoK3Frz34E2HmvrPZS7qLCq0k73ZgdRyRh1mX+viOkX\";\n  b +=\n    \"EMXDrWGfRhyNWduCwBQ5ZYNoCup/17EbXsztgz26NPbtn9uxm2tMNN+yCYLNtRV7EK2fHqRwLsa\";\n  b +=\n    \"RWcsdNgZBpuyfM5vLr4qaiEL7xS+UtsYV5/aIRrBR5Pfu6+ELq/WjkigTgJAjHQfsmun3sJYht2\";\n  b +=\n    \"V3j36v8uyj+j/j3Mv9e4t8F/r3Ivxf49zz/zvPvq/x7jn/P8u8c/57m31P8e4J/Z/n3OP8e498Z\";\n  b +=\n    \"L2WTgEe91QQZilrjur+2Sja+BqhaEYdIRJPkKhG3lWFxcVojJsFexU6uL2c1Y39WQyrqcCjA2Vc\";\n  b +=\n    \"ouQPeO+dZA2hTlFLjUuqRntRmKXWmJzUppR7tSR10U8VdlCQQz5snTePA6VjPm0Olco/3pG4rpc\";\n  b +=\n    \"72pJpS6ome1JFS6qme1NFS6ume1B2l9kRGMIdb7hmwMCxY4hXu8iKhd7eMZT0Xg3kJsxHd6q77L\";\n  b +=\n    \"drixNgGs5BbPtocVxA6E9nkqDQ7iWuxsGRH30rLlZ1BtUtOm5DO/qZXFs5VG/YsKsdFFcayox4P\";\n  b +=\n    \"7VGPa8E+JfOi1b4jxiKtZiYxWiFjtCxjvL6MMW7mYztulEJhcbvBmXwlT/F3RgnsjjtPOqRJh5H\";\n  b +=\n    \"E3rvzpMOadARJ7Ow7TzqiSTNIYt/gedKMJh1FErsSz5OOatIxJLHn8TzpmCYdRxI7Ks+TjmvSLJ\";\n  b +=\n    \"LYr3meNKtJJ5DEbtDzpBOadApJcJqep5zSlNNIYXftedLpQP0RVpSMLVVYeYlWIS/B4hw52ajTv\";\n  b +=\n    \"nKGeK0MIbqNBo1Od3MB5Cn+IPH6D+oxRB9fjvhZ5wO4Fem2aKTwbYOeWeHU6m3i0E9cpeN8wHs5\";\n  b +=\n    \"bXUh/e3zQYGJeWMUq/yMp0P69gKcXo8Apy4I8Ifjenntx31pPx9H6NEYe3Op09v0nXA93hzDkjf\";\n  b +=\n    \"HQvAtwnci/Y7Hgn1tlmdXF1RwOcGqGB3IN7JTQ0/4mLAwdB+ytw+4jg6ZcxFH0h6LIVaVs0g0DR\";\n  b +=\n    \"wAZAwhbRip37wNnCbyTKGVV9rAoH/QEcdj30T42TcxSa+KyhUkISxw1gJzFjhtgVMWOGGBWQsct\";\n  b +=\n    \"8AxCxwVoKPypTb6sAUOWWDaArcCy4hZ4IYFlixw3QLXLHBVgDb9rMIKtGi7wNcos74Ij6bB34RU\";\n  b +=\n    \"7MBfrzxskEvEpuFqrFJteIwbDe8baSDjg3j+YdxY+jwK6nKQHQrbKmTXMSFRiB38QvdpKIKtoek\";\n  b +=\n    \"4aSp7KfN5H59g5y6piRr7ELTSc571fNsjhVuVF/t6xPlEwpkzMeRJ1435izjZ8e4lhnO3f1Xhiw\";\n  b +=\n    \"RfV/gSwTcUvkLwLYWvEnwoFPg6wUcUvkHw0VDKv0XlH9f4aX+3P6vwYYJPKTxD8JzCxwg+FzpDi\";\n  b +=\n    \"iVQI0cO0BNJwNARk8vFOSMrJufxOSUE7ohZQKYmIaDI1Mwz0Sy9dkkq+2clTxOVuM1lRMPcdWot\";\n  b +=\n    \"f1OW5kTct65dfKIOrJ1FvuZk4pJY/LZH8K9EaVRue1y+UBUBxKaVW40m9pVIzslKTExPZVzio/L\";\n  b +=\n    \"bKmdbtDWbP/oFFovtaWpbrlfWbmrbShm6fGFPU0voNg1a6zCDN3ItCrgR8SCj2PVMP5+WyRjJpv\";\n  b +=\n    \"ez/LDjQlvdL9Gsu58FNJ3RIMNDxwiPKgSSj/vMGrrjBu/1hDNIjdNey6N1qsUOHXixpV3pK7IrR\";\n  b +=\n    \"VXqtio163ovW9wvrv3mfxDVaSQfh4gIunCWSV3F33nxQ6HcuNJbUjTe87Ptz5hW1+c8Lf58D0sg\";\n  b +=\n    \"NWsphvh4onGh39sK9mKmb2/aIPbiYBaaCvqhlfkTLT4AamWeGHFXsZEWcwAfSlt4vIA98qj/fMq\";\n  b +=\n    \"G2Z9L2TD7+1M2zP5UyobZ35eyYfbHUjbM/nDKhtkfTNkw+wMpG2bfmbJh9h0pG2YfTbfyliYd5n\";\n  b +=\n    \"1Pyv4ntqV38Q4qvZu3YOl23qelhjdzaZd3fGnK28L0HtmMjazmZoxa0MguRK6LO6hcZ/NRycUdx\";\n  b +=\n    \"52LSi7uOG4uKrm447hTkeviDlGui7tgFpKbLZr28GwTd4tnhxhgPBPikfHsJzYazwHitPHcQMw4\";\n  b +=\n    \"noPEr+O5ccy/hV3HpjH/Jp6bx/wbeA6N+Ut4bhnzr+O5dcy/hictQFfx3EbTOZ53jflX8Lx7zL+\";\n  b +=\n    \"M5/Yx/xKeZsxfwLM75l/EMx3zL+B5z5h/Hs8R1rEOWSaqgYEG/aAGVLqIZBmcjXkAZzkzdoIdDU\";\n  b +=\n    \"GnGgOYQFpJwt1+KOBFApsCXiJwUMArBG4T8CqBIwJeJ3CHgDcIfEDKvRXikA2xwXS0mwXwCDxM4\";\n  b +=\n    \"FMCzhD4nIDHCHyBKimu/BqQk8+mv0rVbDnX0Ng/uuGGNDA55j3e8nlIdJuQdlrgm65mloDnrj5u\";\n  b +=\n    \"osdFWIxlpOU3MtVk1pcdIluvrSSPQFSKd5DJfSIrRSXwdUlRRFh6vek19M4XXwxE0BIzb9N+ppn\";\n  b +=\n    \"fYlNhNI+3bELLTYhXS2hOrlAUL5C6BaHvG2q8txWtj/mgp6mbIbAfVJX2erYN7dK2oXDO3gQ731\";\n  b +=\n    \"SFEloa+Eu+XOLgUxDNY+eaUseSC3R2sBkUCUGREK+WAD/qKxTVRIttNZzbfCCadoPSOl9b52vr/\";\n  b +=\n    \"Lx1Tds6v7xZCdG6MC8WfQsNAW6VFO+rO892vhEMLL/XRAOJQYQ2bEc/JM9g2KbLTtKXhds2SNN1\";\n  b +=\n    \"I6nrpQ7ZXw7skOXgTQzbhZj92Ga5rzQMW6jrg4vN4BZMxjGPhH/wOCQCK9nSEFTFW9nbnxju8sh\";\n  b +=\n    \"osixn5f5KBXISPBh8tguAU2+fSP4vUSqURFAUralvxRBoZN4qmWi8vLVRGlsSjV8ZHA03LvkdT0\";\n  b +=\n    \"YK6hLSDnHee3E8W8r1MUJVhHCpAazJJHGCED92I+OVIolyyq/rKFEXrdnSAHsrp/nlRazLNDstV\";\n  b +=\n    \"oWVJPBqVS5uCLxWlbsdAq9X5fqHwKWq3BAReKMql0gE3tR7Jkx1VdxDMDhdw10Eg4dquI9g8HAN\";\n  b +=\n    \"dxIMHqnhXoLBmRruJhg8WsP9BIPHarijYPB4DVMog7M1yHkweKIGWQ8GT9Ug78Hg6RpkPhicq0H\";\n  b +=\n    \"ug8GzNch+MHiuBvkPBl+tsQwIIYRFuuMnwoNAEvWHZ8nEMJWw6704eQ+lJuJxspEc9Xh6hIRons\";\n  b +=\n    \"qzb2YwXRJt0BanQSjNIHOaBaCEmT5wMpfafiCmvKbDvak3orvH7NjPfYGtgERiDCSEqR/ee2azm\";\n  b +=\n    \"kKTj0TCj+IpjazZSDhMnNPI2EbmZr1CE0kMzHqFRJxSEGvp1ySwwIFYA9asV/6iaPTri3Pui4vu\";\n  b +=\n    \"i7lZr/zFGffFeffFJfdFVvhls141ay8pKuwleepTpWwwSfQqo7LFJA9mvaIeo0m8c0b5837ah+e\";\n  b +=\n    \"Mz+cp1qxXfQqbITHrVZXdu5j88disVzQljjhWqdv8inWbW6lusxzZWzmY9arB9L0cDODTVXV/0O\";\n  b +=\n    \"TaarWO+Y7JL+ILPOuqwhOzXjhmyr17iNUkbhbMerWnpOXz7FTAs2a9PDbrFZna2k0U5zW9TWR3r\";\n  b +=\n    \"L1NXKis1ET4smDTQZ4169XQGnZQhzmuVZ/i4JjFgTX85bFZL6Ag9y/REstmnpj14qbBrFdTvZ94\";\n  b +=\n    \"1qyX2kdTLMGsF7B02fpbCAssLYrxsw2KWfYk4lmzXh6b9botnsxKaEqWY2kZhvgLhjYfLcXSOYs\";\n  b +=\n    \"lMW22kRuofadmvfrEthkjYUFtdjX5ZTXr1Sx8RXhi1qtAz+FgBfTMKHquWatnFj0btGfUrFdVzU\";\n  b +=\n    \"EBX+yYhc161dg6lVd4ElGHKW3GqJr18mDUy8FjJGa9+FO0IWPfIugga7QrKYgEZr1qeRvPrdTG+\";\n  b +=\n    \"VIbj/W0MUFTqorgUxbBGx0EPIf2syk1ud4Vs17WzZI6YoJ9hBbnGFVDWoOSoSVmvUI2pBUz8oiG\";\n  b +=\n    \"+tiOmGfNetW0R7lJMOsVQp1BsNvbpCnWtpTGXK6s0GHswcWSzFCPVygx6yW9IlakqC6hdJF1lCS\";\n  b +=\n    \"eXPKPxKVv7A6GsqGuz5a2fHHDQbyG+sfws3M/p9p6VVjY8uGCA/uJqhjaqrBPqdde67D3jYp4+m\";\n  b +=\n    \"DnG6r5mTveKJfV63gDhBfmjjeEpczMk3rIMM22r76UiO2rxWpuHpN5IT5ZbxdnkD44fTmDZCFKT\";\n  b +=\n    \"K98uOPur5p8sOKrS1h2Qevk8K3b3kCO8HHsnugbs9BMtSrELHwQSrh0/xZKbls2v+WWjysDHJZ2\";\n  b +=\n    \"tFRcFlAnGvcrvi1F6xfab55l92H+iUhc2r8qwdMaPC/Bsxq8KMFXNXhJguc1eAXBUf9iJBwmgbM\";\n  b +=\n    \"EzgV5xeWXLZtwVYCKLWZLjkBUtE+tUYh9tT5rrKAmYEkcu6YHWtrCQik890ZuP6Z61nqazClFbI\";\n  b +=\n    \"4KsReCe51+vWoZcCrWnyuRC7hKFwkR9HaRFD3PNy1yAzPotHKDGbR1WGBld45Y4bQ7b6m3vL1sH\";\n  b +=\n    \"IltDG7QvHJZNGDcT0kJUYlibQxX4IYnfRpKn96S4EUNHmJvbHy6geARCV7R4FEJXtXgcZ/p4XqY\";\n  b +=\n    \"0wOOTZa8ogEsnYKqsO9lp5oNtcnhw1Cahtj1cqN0uBnzX8DOoW375kpa+9go+vbl2PY1x0on2RS\";\n  b +=\n    \"LAL0s26gXY5ucSm2EvqdcRzC4egct7xy92dusd3lDTus2m6F8hglh4oUjVjDxoi1c1kYx41KnSm\";\n  b +=\n    \"22MwCbNdlk3M/I262CUDXEH35AhnlVOu5hGeUaOl8RitDgRQle1OAlCV7SIJxnUkdfqeZ9PlfFh\";\n  b +=\n    \"s3nbwrG2QREjjDUra72F3w2SVK3RhOqAq5gqKGeN2q6hAp2MF50LLJrx0pKbqABKdr6YvaXIKZh\";\n  b +=\n    \"j2altk1mowHsj9xTWyuV/CUbv0XiuScsgW+0BYpBnaYln6KcgnA84zlTI2KbWuI8q3H5PKq5tCU\";\n  b +=\n    \"uLbRzxqql5XGhQ5r1HIEOlnWmrogKj7scHPdKy8EJr7QcnPZKy8FZr7QcvOo5y0GFZyd0Q7+2S2\";\n  b +=\n    \"Raqmqoo2hFMZ0ipp7HVfU9rKOYwzsanuNLlpqudquV05fH1WxPcTkNHTMVHpbYJwyt0NdF/zfyO\";\n  b +=\n    \"DtBLVbBUPzjjvcIGIrZWL286w1xt/+v3XJS39+o5SQ2MqlrGe5b9GD8FbEKyVdKoYgQYjJrSkQP\";\n  b +=\n    \"uyTZZYaUlZLPBFwDk1URCZK1IHTMpojNPhvjWzTfK0asAb5dViKA94mBc4A7ZLkCeL/Y5x5lH9u\";\n  b +=\n    \"+Irz7TrGRDnCnLHwAv0dsdgP8XlkdAb5LucEWAg/kGnLdXbnyXHcs16vr7s5V7roP5tp43Xfnin\";\n  b +=\n    \"rdh3Idvu57cvW+7sO55l/3vblSYPeRXHew+6joDXYfU3lNUTRs47w/N9AoIZEI5Wv6duk6oMN/R\";\n  b +=\n    \"fdZwU+xG9UrNoYc7Rz3rjCZV+oVuXfnMvTTbCWvqpJsjohJlMudVLUWOhMXFMFfUk5BTfC4sbmp\";\n  b +=\n    \"vSD/2pKnRs3k3Eki2cyW80ZoJV9hUB5cIMKaL9bUJTbqZWOYUciDPTyIohAf0RdLqoL6YRdJZVm\";\n  b +=\n    \"8IhZ2X+O8I8pvoNwoR9V8HuIWisUhjuhhk5UcovG8TfO1nv6N8rEoxQn+duboKzLEbgaYsa2vma\";\n  b +=\n    \"duMRdrWi61VCtSoryNms938iWlElZI4btHJaS+nPrXwFW1B0sF/UWrYEgomqnPcg/NgoqVWm1Kx\";\n  b +=\n    \"01hWlvLtpq517zd3Gd2mPvNO8w7zU7zPeZ7zbvMA2aXGTO7zYPm3eYh8x7zsHmvecQ8ah5bTWI5\";\n  b +=\n    \"XCaxHI3LOGCBvtDewkRiG03TRXysVkqPb5PenFyr/CoLo1j7Sf1SsYh38JFqveoaovdD4bCr/gp\";\n  b +=\n    \"BFs0A/g4/pQzx+BolRLghiuy32RImrc1f7Hy3KT2uqe0oSo5sV0UMOQD/yzQdYWkBVpw4PexND0\";\n  b +=\n    \"sqizVXuap2R7nqr0O5KmTlKigW0OAoVBZDVqmKHJXFkJWpIkdlMWQ1qshRWQxZgSpyVBZDVp2KH\";\n  b +=\n    \"JXFkJWmIkdlMWR1qWi5yqLtchw3wx7+m6u56E3wPSUB4nb3AOuDsIKiirGJkmLaUGptjK+oqWh1\";\n  b +=\n    \"DmlE96TXIKtVM31qkS1+qRs2WF6nR+UwtC/zndod5cLvFuXC0FUutEqEW1jpsFAutEqHQ6wsWCg\";\n  b +=\n    \"XWmXBNZQLa65yoVVGfIPKhaEoF1ZFuTAqKRfWVlIuDHPlwjBXLgxz5cJqrlxYzZULq7lyYZQrF0\";\n  b +=\n    \"a5cmG0TuXCWq5cWMuVC2t/V5QLQ+bRYmYuXOXC30u8GNvshWBvGo+gwdNQACC08DfibMe41DmGJ\";\n  b +=\n    \"Q+FHsihB3Po4Rx6bK+FzlfyyAsFeLEAFwrwUgFeLsArBbhYgFdzcE9ld2Do8fO/9OO3Pv25X1r6\";\n  b +=\n    \"/QococR7Xjvxa4d/69P/x8d/+iCuYOI9/+8f/3/svX2QXddVJ3r2+bj33K/u01LLaqtl69zjtt1\";\n  b +=\n    \"KZNKAbbkGk+h0ETseJy+e91JTmar84Xr1qt5UK4/nloQmb5ClDpGCRAw04AwaxoAgBplgTwQYRo\";\n  b +=\n    \"CHtBlPRhQCBCigMHqDZlCCEsSMaiLyNEFEb/3WWnuffe69LXWcQAJMFPc5e+199t0fa3+tvdZv/\";\n  b +=\n    \"eqffOT4Xx3/qQO4IErn//T08TN/cObPfuFXD2AzkQryRFqeuLgSlBPZLmqoRt7EUxxoZT9GMz2b\";\n  b +=\n    \"MFCw3+jQC7tZKj8HA8NyxyLuOHYAZFZ0tKV/W9K/LenflvRvS/q3Jf3bkv5tSf+2pH9b0vYt6d+\";\n  b +=\n    \"W9G9L+rcl/duS/k3LHzAL/RYtHU1M3002cEf3YZ/T77GabxtgxG1M4hheFGY1TRC7PjEcRYwGib\";\n  b +=\n    \"BBosWow8i8eU/ugJpltFj03srgI50Rv9mGoTo+Mv5HeQtH2CYSNChmfslsp9cxoGRShnsgZihkY\";\n  b +=\n    \"IMKkBO8/W3hyxVlzM99/i//8EO/+rl/NSV8+QM/88N/evLU0c/uELb8lx/7rR/46U/9t9+BwijY\";\n  b +=\n    \"8td+7o9+70e/98/Pb/S5kgWPu1jWnjBL4owdloE0x/djzy6v3wcEIZ12WJzGOuQ1LobQGIo1ZoG\";\n  b +=\n    \"TfKXjBqY3JyLgtNDr1vDlaHu4R15fodd98voavR40kvh0xAAtqQ6g8bKxt4iy78ckySC4YTm1Bz\";\n  b +=\n    \"eMe8qlpeu08OB9b7n0pWgRTpP27tr1IC8RKRS41pA2lrTpWtKmkra7lrRdSZutJW0maSfXknZS0\";\n  b +=\n    \"k6tJe2UpN28lrSbiSu2LJTJXt7diX3XV9z3gdpenYh2CwdArQ6El0HYIwTu9ZMgvE8IXRBeAWGf\";\n  b +=\n    \"EDIQVkBYMkKZBOU1UA4qZQqUU6AcVspm4abdlp3uC5YNc/VyxV0+Yxk0kvEaybhGMtpIuWWsNaS\";\n  b +=\n    \"dsYy1hrSzlrHWkHabZaw1pJ2zjLWGtPdbxlpD2ocsY60h7cPsbKwf6LmBZ/YUmmwzQecnxsLkQA\";\n  b +=\n    \"wpwTHDUgLYBbAeQ/5Iz4igAcoEfThHe0LkC1ML84Gc+DP7Ns9zYzRvhP7QgtWzkDAbcGRVeHbBK\";\n  b +=\n    \"lFwmFU0MBWzpKE8Iwp6Ts5QnvIJWAxWfMJJG4CE4VrgFPwklnjMqgEK4VLglAWFcNQGAElw1LjK\";\n  b +=\n    \"LVevh41f0SWVrPaTUIQa+JN9LOXDGUcYEXI0uEg7dtp4RhBeonU2gQZ5BE2mFOcIioAXtLyhXk7\";\n  b +=\n    \"eBxVU8UdXNOfN4YPs5mz+LR9UyKg8pOUZv701erJoejlADYV/k0Eg5IYoHpWL/Eb5PoeVljft4S\";\n  b +=\n    \"lFQ7AeDOWXDuYXi+ZkUx0nqjoKO8cLxEWfOATcxz9SKaG87tJ1bMtoe9E57Ak5wW+NdhQtv/nMm\";\n  b +=\n    \"pqPuqNqPvigHNV+UDV8ne3XYgZpDTSgyzCuvNfVGrBdubJr37IBv5zidWzbaIvZBhxUWZKWWbBu\";\n  b +=\n    \"AcFlHGgDDzeCG7mnaYjOY+amQj7t1S2v84aXEdUTWkpN1VLyPfU9PVA/vziPCMK2WfDKIzyjjgq\";\n  b +=\n    \"NVaNif4XaOMFXi1dvnp1fsFt4IfTyBJCvK3NbVL8iaJDRxzvmjeiS+Y3Kbej/ar7w1WjUqhmbtZ\";\n  b +=\n    \"rcqlHr/PsVN+pgdn7B1t6oHX/25XAgK1CQJzyjp7zyMTixTvcBvTJmsQtD7dStRayvzlM9C9KBH\";\n  b +=\n    \"9h5Ztysx+l7iU7frZlArNK6YpWGW94mHef2Frcv5N3pYopRHvEHSCt7iw15A6DjxTokWQ/9p/U4\";\n  b +=\n    \"tC7wGXBvAWh33F2u5y9wlAoXyi3fUYzvLDIiRRyY2EmHgX4jz/DI8jE8xvJJkX0fYGixPRBATeb\";\n  b +=\n    \"QC10PmSEDlVEmvZw/XsQeoYkP2jhX0F4hyOPpXfl43uPYbM+uXfm6srlYrNubb9izCPXRvUVbLH\";\n  b +=\n    \"TNAmAHmov0TZMOZ3l75yLOOYadXGQ76Njn5ZdxZlTFCfwmZYr88slFeB/RHBuaYwM5NmyO/bbAr\";\n  b +=\n    \"DVkkzLGCAf5BE3NVOVxPG5jMyQ2Q6WW7kfA8gYv8Ykkn8qpA0J0wHoGCYBG0W3QPMpwwO1vyjfi\";\n  b +=\n    \"sTHvohV63HbUWKnYsnapmuwTbxo18uuzUeozkW8aqE8b9YEJJh+cUZ/2IleF/vSkPnQiL4NHy3A\";\n  b +=\n    \"PX3pQvTRg8fHzMeFhryBGC2Kmsx3cuSnjzO8pwB5FxMYwXGtYn7LZkW/91BJTqqbz/WOJ6SgiTK\";\n  b +=\n    \"hqn4u8QA1h5BIPv6byAvm9vIWrvWHzrWYV0ayZb42OYPOt4axGloB2uIEg6bG8xoi8xoi8xoi8x\";\n  b +=\n    \"oi8xoi8xoi8xoi8xoi8xohMwoi8xoi8xoi8xoi8xoi8xghQqhGgVCNAqUaAUo0ApRoBSjUClGoE\";\n  b +=\n    \"KNUIUKoRoFQjggEjQKlGgFKNAKUaAUo1ApRqFCjVKFCqUaBUo0CpRoFSjQKlGgVKNQqUahQo1Sh\";\n  b +=\n    \"QqlGgVKNAqUaBUo0CpRoFSjUClApT0HI/jUTeruLmM8kbhZG2D7MHpJ/s3wzKHtqL3B+h9Eco/R\";\n  b +=\n    \"FKf4TSH6H0Ryj9EUp/hNIfofRHKP0RSn+E0h+h9Eco/RFKf4TSH6H0Ryj9EUp/hNIfofRHKP0RS\";\n  b +=\n    \"n+E0h+h9Eco/RFKf4TSH6H0Ryj9EWp/hNofofZHqP0Ran+E2h+h9keo/RFqf4TaH6H2R6j9EWp/\";\n  b +=\n    \"hNofofZHqP1hxEuFkQXNNf+ZcGHQS2HAyGfiClQVUiq/f63Z8EwoyL0XAyQ468ZZgEMQUc55lMt\";\n  b +=\n    \"MOe9RrjDlgke5ypSLHuUaUy55lOtMuexRlrh4VzzKQaZc9SiHmXLNozzDlOvV5AbVEFqNr4+Jf4\";\n  b +=\n    \"EzoR5XPVRrB3ftcLAdQLZDznaQ2g5r24FwO3RuB9vtsL1xGJSXZ+yLhWh32O0O1N2hvTsYeIcP7\";\n  b +=\n    \"4DjHaK8g5r34OifXM3WXYEAGgoKYfK4AsVm+If6jM5XMqOIQ3O/qi847Gxj29TYNjW2TY1tU2Pb\";\n  b +=\n    \"1Ng2NbZNjW1TY9vU2DY1tk2NbdO/fsRBxhtcY5uGQ21qRrWpGdWm5qZtqjpjVlHZQ4/w/LwacY0\";\n  b +=\n    \"pys1x3hzwoxqqgnZai1l2WOj8WTj0mf2LAjQHkRLlh4X81cEzrDfvV4pu+KxiHA7mqs72kpoyZr\";\n  b +=\n    \"BQUzHztb3mFmoJ4sGW9/XOVIPNDIHfxwysE+j7oKpg5ZM3Vn1ZT3dLVay5IMnQz8vfwNPmc76Aq\";\n  b +=\n    \"6TGlTV2OtZOPS/21gUBARVVNkt2Dl50SSirtaCsFoGymv3Latovq/m+rCb6sprhy2pqL6s5vawm\";\n  b +=\n    \"c/u6XL0+W70erV6fq16PVa/PV68vVK8vVq8nqteXq9eT1esr+ipDcUAxchCUsMYtK2YAcdAqhgY\";\n  b +=\n    \"+Paj7/h0cgYw8aHliTnEHJcT5c7fnuJx2r4M5OQa6ol6SvTjD3JpUmveGr0eTOk8UARtB+Z+ZER\";\n  b +=\n    \"UJBnLviAorrb4f7JkttPrStLW0EvTp2IqRyJKEjP88Nl2sp59/786iQakBOoADzMSePhwF8UG5f\";\n  b +=\n    \"3suSoLhU0VrZzGOI9S4PS4383E+LvdwOE7gSIuPyRkfjtt6OE4FW2gyTxbYxjB7DJB3WZ7uLFI9\";\n  b +=\n    \"zuYdnPAyd9hNpumA29bzNG7YE3ss3pX36Ny7N2/SEZr2GHqUzhYxB+8tGKQq0QNeggNespPPwYu\";\n  b +=\n    \"76JxyIA859abFghF9mjiycUVwwgeAAN/uNgT6ognT3t5CeezDr0JuAM1MpzwoOFLwsSSwHsAk4m\";\n  b +=\n    \"cybeMZQopzYMC+WnwXCoBdRY4yfdq/izfcJgx+9kJViZ2VWCcKf4+dTrBvA6hXTKF/ijuoh/JxO\";\n  b +=\n    \"v8cgCIX932/zapbQKAHX6JdI8hxWnmXebH1WP+2fAP8h+2GKoGw1J0QUGyBw1wO5gj2qVuai/0i\";\n  b +=\n    \"T9idbpKvf0RwvPP12TSUHgEl0s3vFHehnXwSEozONPH1Bqzvt0Eu1Icx3pYFK8IBe7P8R7j6tul\";\n  b +=\n    \"deZ6vq0Q4xd6cODcF5/JlfKqcm4JzU3DuGDj3rpw4liULYxAwCMeOLfRngNbxaP9u9Se1jAPgmD\";\n  b +=\n    \"BvB1ZTMwKKsS7vKBdvpLc8tVw8Juf36YV8XT7N3LlRn+m0jU/hKxigSEzv5Bu9eJ+L8zEBe+zmd\";\n  b +=\n    \"w1wMEYjcXgv575r5nezTKXJYxe4ZY/qsYlqIM2chxY+K3s+FByLhG8AgIkDLGrKJoZgsd/K2xA2\";\n  b +=\n    \"5XSyGFfJDLPBRLnx8T7NReX44/2UHs3H+xPUq+YmvdoU4SD3aRt9OkG7OddxE9MsvtsFXAelZ6C\";\n  b +=\n    \"n07sYLBCEKRDGp3eVZg86NUantgTFmXo0Ro/G6NEWevQ29CjrzrYsyvPevLXQX0eTHvXoRr9HW9\";\n  b +=\n    \"KjbfToOunRDs0m0qNj0AqJKxhDhrPdgB7bIIiR+oynbTw7ds7b4vSZnmNefK1HW2LoG+e3rdajU\";\n  b +=\n    \"zpnUq9u1F5VSVm9V2ll+fVu2DsQ7r9LgUkmKHlJS8dTi0VjJ9WwsbPfZhAfWjp4xch2E/9THwp0\";\n  b +=\n    \"KU298QF8uYghssh+J3gG772VIYsa2CMkUOlcp+rlLTkfjGHrJTVMd7+UN1/aV6x/MzfEWF3yxtH\";\n  b +=\n    \"rRdsRCdgj6frjuMkCLHID4jS0+zpuGkQACU9/pQKtYfTmBVbrTOArYywff6k/CV+dVOIeu8mYp2\";\n  b +=\n    \"W4KvK+xX7XUlQNVTPtQCLae4DynNwPl5Va7g4gj/yYqsyITG8W2d3FiHzDkXjF5kAEury2NfOu9\";\n  b +=\n    \"OEYj0YpFK9RA0WCeJg+0izqktL1x5MygC3s+OJO1vcWpQHuYcM9LN4QE+xK2tLVGFZ5h9NLE9lO\";\n  b +=\n    \"N7bTu4Od3vNary2tN44d3LjrWWM7vk1rhD0iRjfreGM7XrV6e7bjTSd2vwIbgKrjjdfx43mn6vj\";\n  b +=\n    \"u6I4f8zo+qore5Hl0oJXb7Cy+FlOVGZHpzSLR8V7Prdbx4pDLdt44d3xbO571kG/d8ePyrfYltZ\";\n  b +=\n    \"frzHyCEawUl8gshge426X+IsKgrky9NjHVYIgYx5HmOpRhPbPwPsfYjCZVS8Esvl4UnOv15C41J\";\n  b +=\n    \"Rt5ptqlnb6BJkD1Uw3OSJC9IOZfkI4F4CZ9nbCDSqoAPx7hKkSOF5uKi2oqB2op7FlTFJJxy2iK\";\n  b +=\n    \"o21Qo7xz7y4RRXC8An1SozFYJ5JkNomWt8ltG/uO2ZALdE8Xyth9J1rlmEz7GazKcTFFIy7cTes\";\n  b +=\n    \"kD0IehrkN8/BTDXlhRVTrUa4k1Seu16WFi6q2fP9S3rDDCuI+sKdgjXLciDHV4FryfQpXKLZjqi\";\n  b +=\n    \"HjHMWQ38HBJ9BSNqT1w85HeuZOi4YRe8arf+2mq2N/o6arMZtpWZRiD+Uj5mPsuLX4jhWjY7yG9\";\n  b +=\n    \"JHxP0nOxoZqoignYAcGAcMk3DtymnGJycbYFC7UU/RNjMHgSc9ibSvaeJfR3hKZFW8JTBhiyvGA\";\n  b +=\n    \"CbtqHdat44xLsUMppgckm41pVKwiOm2QM7xGq4cRpYmkRZwMqHG1C3GCK0Z2YUqsGemrXbeax3F\";\n  b +=\n    \"WtVaUzCXWWsXHfJzveV9LquovqBVeQgyDPYDw2FhbQ1fHGlVLIZLDpNZziWsHhudQ1PQKQqQ5YH\";\n  b +=\n    \"8fMzhB04WWXIhzgSVuKoQRUBaWsZBFPIBvYOMEQ62CtfC7xSVo+Amu8E34zdK0K2QEiXNgKWkV0\";\n  b +=\n    \"3TtoukCL12vlsOImCZsI2XEcHuNWda5WXslAy1VNXNzlVZim1eFZ1BDzMzDe6lAYRDT4lcgbzPq\";\n  b +=\n    \"toxgHnkNPtY0ZKXR2bnAgsMAl+rvIlrMW+L/BSvRAuZxRnLFQbaVV4k6LlEK+YaFmW5ZAYeXE9Q\";\n  b +=\n    \"drH+YaIcAUyfSJx7otPOPEVnQaXbU0LAJU9EkTdmG0iZMNSF73Lh1jopQbeE+FYdJgSeVSWTDl3\";\n  b +=\n    \"crI03e7TRtAj0K1BMwNvZqOYT41dBaccaKsPCTPVU+afxP5ZMh5ZP874ryCYYmK5/kX2PlE0Zsm\";\n  b +=\n    \"qaGdconjT2Qgu4uMLOsQfmkjq2qyifDxNWUTy4Eqvthf07PMpHVPqHpbVj7JK0i0pr2yegI1T4Z\";\n  b +=\n    \"zEr9Bw8WIdQdK67eeAooPdRZL5D6ga4fyPzApB+Y8gObbUDMvW1BGqye0RxUz0DZijDbIhWxf7M\";\n  b +=\n    \"tqq4TSh/9DZRWhHq2tEPKC1I4Rul2ygu0jsoVVYunwhZDDLgYLBEA5lmB2PY1VgN4vnL+jF0uUV\";\n  b +=\n    \"7wKKeZ8qJHOcOUEx7lLFNe9ijnmHLSo5xnyise5YIovniUi0x5zaNcYsopj3KZKac9imhonPEoV\";\n  b +=\n    \"5ly1qNcY8o5j3KdKec9Cp0w0GYe5SBTLnqUw0y55FGeYcplj7LMlCse5VmmXPUoR5lyzaM8x5Tr\";\n  b +=\n    \"iaeSwWvUr3T5IIVLobx2J8TKsinfCR0LB+6EslXuhNLV7oQm7J1QxqtXm9esjq5ZLe9OqIdJje+\";\n  b +=\n    \"E2nmLVk17J9Srr0F8J9Rxd0It/05ooroTSu0KN7GGO6HeLe6EWKOuPXAn1Kah8S9exc5pxJ1Qa8\";\n  b +=\n    \"HupzDtrnIn1NY7oc7wnZAcfBq6u4eUlYWvhd6aNyGAbfAJA8J22nSy44t8Sora1JNYwMXFQcqCa\";\n  b +=\n    \"SzYt9S9dd1b5t4m3duUe9vs3nJ965YtlNVtfWgp7vI91i2uZjpyNZPiQoLeUrmaSZkzUu3ZO7B8\";\n  b +=\n    \"38ne6BDcgmBO/d7EDU3Czt1qQvxtVojfye8QxzI9EeP39GqmJVczOS5C7nRXM63hq5kt/tVMfy/\";\n  b +=\n    \"tSuhbezXTUgZqLbIM317NFBDkt+RqpuVdzdyV9yDIn1FBPo0m8HlHZdLN/C5R11tHaYWZNtJb3r\";\n  b +=\n    \"LM1IN8euTVTGvaxhMzjQHoaJ0K+jd68RgmTjGzx8yEc3GhzNSxzkafh1sSOa724PvEE+83HU8Rn\";\n  b +=\n    \"83wXqQrngXTunh/28ClzWEz8tKG9pmUQbs/gQsbnjX8K5tMrmwyXNm06NF8nHZyI65svN7uDl7Z\";\n  b +=\n    \"ZP6VTVZd2bT8K5vWKlc2E3plk464sknrVzZpdWWTDl3ZcE+3padT9PQ66ekepZWeHoPAz13ZtOU\";\n  b +=\n    \"8tgG3O6OubNr2KOZdNftXNrWebqsWkruzwS4QPZ2iY9vc0222W09X6+mN2tOjLnK20XLwJ2Omww\";\n  b +=\n    \"hy4c4ipo8hiBPXjLRedAobvBC8l88/wNyAiF+814yFYcBe89TJQ4pDjEiKGiopaqikqOGcPKRWU\";\n  b +=\n    \"tSoe77znTx8rdz33tp9q++KrjzwdpYWN3mkNEWGK8d02qwu+PhCvAcPqz04bzJHEYe02OT2hrra\";\n  b +=\n    \"WrFEkLu7u6Um36Oj5fjEzf6plEVENmaEN1hW07BXgBSpjjVhmM48HovzQr77agqPdyvPDTEL+OS\";\n  b +=\n    \"msesT01HELjt+aFREHhPWq2Fc8+XDElLa64h9X4ytkX09XL0uVa/XjHu9Ur3SLrDugCjG5nHAAV\";\n  b +=\n    \"GMTeeAA6IYm9UBB0QxNrl1B0TqQD6ypzaafrN/zG4qRNGjpU4/KnmRwqE2+LxVUcVHYmqvY/2oK\";\n  b +=\n    \"7oL8Kg1f5ls0K6HLnsScOt/6Nb/0K3/oVv/Q7f+h279D936H2P9j5XH6i46WV5b7UHlvNeGAl3b\";\n  b +=\n    \"J6ajiHLI9D4fcPWxxAjSibjI4810hJ3da8bbTDPllEd5himnPcoyU854lGeZctajHGXKOY/yHFP\";\n  b +=\n    \"Oe5RjTLngUZ5nykWP8gJTLnmUF5ly2aOcYF+a3J2O9jKnuupRTjLlmkd5hSnXPcoKU5Y8rezXmH\";\n  b +=\n    \"LQo5xiymGPcpopz3iUM0xZ9ihnmfKsRznHlKMe5TxTnvPO5xDLlGLlmQiWscwcMQ0FQd0LRaGhp\";\n  b +=\n    \"zqhNay73gB8YQ8j4GZeo9iOLHuK9580o7q1qyMIrWWY/XToBaN6sFUP5vVgxkGFhzXWZ48RHS3c\";\n  b +=\n    \"O7Ann5wJcF6nr2O0UdNXwXL1klkw10AJHd4+4ID2e11r5H1lwMh7blUjb4zrcjZ7Md1UmXWzhvF\";\n  b +=\n    \"c9hJoDKlx9PirgSNAs/PST3sE6FUi9KKN7jfYYJpVK+ecwTQinEW1M7nUFKzou4JP1WR6rm4yna\";\n  b +=\n    \"zJ5nfON5leHrD5nVWbxOXXYfP7s5/80o0bNz5+45cPsOE04xrUDX+XRxtOouVuaTg55wx/X08ZO\";\n  b +=\n    \"7aBtNl8y+knX4/lNCsVu2ZcWaUZV77CZmzxmjxoP70y2n66asab2E8PN+PK67WfftKzn54dtJ+u\";\n  b +=\n    \"29bOjTSgnhtlQD13U2PYNRj7ylXF7KCx70rNgnp5zca+XzHP3jw7v2BrMvadu5UF9ZOjLKiHDbf\";\n  b +=\n    \"nviqtulxr1ZU1t+rKV7dVV4Zadfl1tGrHn49lfcNFR0MncbGnrltFX2Gr6KVuuOlAF2vKirHeRO\";\n  b +=\n    \"bEmQgvZY2aF4A51vjJPSJ3Bv/JG4woruHsi/AcmItjEIpSFyEV4X18wEI16IgFSQEdsvp8hsrpq\";\n  b +=\n    \"I+Dluj+TfX5GDfZ50NW1u/xgas/xkeu/jiuRPi8RgUL1e7qPcUEH/qKdXzsK9bzwa/g89rbiw18\";\n  b +=\n    \"+KODO45/xUY+ABZ8oHu4uJ0PgXB1ygfBIqspN0wX04KWWd648Ze/852LL+WZnPmi6Zf20YbjZz+\";\n  b +=\n    \"5n2j0XmxmLZc7jkNvcU++meZXqOzAkcAmqFVMv5Qjj9/5HspjX34HJ958vBhH4kzS0iFUUPw57Z\";\n  b +=\n    \"dufOwvDNJutmnHkHZc0tKpNZ/CLTWnff7yv/vFA7W0PaQdk7R0zM03Ap6f0x77qX/3y41a2i7S9\";\n  b +=\n    \"iQtrh9uwyU3p/34Tz37XD3fDtJ2JS0dpPMNuIXntAd/+P/9SD3fNtJ2JC2dvPNJbJ847R9+6l//\";\n  b +=\n    \"SFxL20LatqR9OzsPSDXtL/3Ofz1XT5sibUvS0tk+XwfREaf9kd+68ZtRLW2CtKmkfRelnYB4m9N\";\n  b +=\n    \"+7iMHz9TbN0LaRNK+m9JuZqxIokVCe48qxDCvfyDcBCWfAFpm/c3ivQivd0DRR17vFF9heN0CZR\";\n  b +=\n    \"95zcXJFF77UPiR14LduuHtLnp7mGkz6t4AjqUegKdpXJ7OESuCIaOKmUx5P+u6RZZH99GrMGZMj\";\n  b +=\n    \"Hk31+8e/nvvcfqcanTP8aIplVKbyRywh47l7uXEM9p8cZUS7hXuopSO4WY45V2abVKlhB+4AtIg\";\n  b +=\n    \"y253ccpiOE/4aOhTSsdsBafsD+f5AqUE0pBjtT6nzIfzhKOHLZTSMVrOKbcM5wkndndSSsdmWzj\";\n  b +=\n    \"lncN5wlvEHZTSMdmddsQP5nmSUgJU0rHYHTUW8/KEy4lBNsMlXRPhu3UOWbaGhxFfB4MFG3VfKh\";\n  b +=\n    \"5jelFBLdJk/1AA92kF+HTX5BDdnYhEf06UX9wCkLBOy5yoIhnPvojdk7AZnXi8Y3FEwmuAGIJiq\";\n  b +=\n    \"v5rNa+1imBOepJ4qkZLrAVnVMjtx1lD1f6UM1XFzZWWsL/Jmav2p53BKo9qKSePaikpj2opK49q\";\n  b +=\n    \"KS2Paikvj2opMUY1lZmGNGuCsRcfz7oMvob5wJhoPP+VLujWkdzzbr0P8m72vo4Hyd6DwtzttNJ\";\n  b +=\n    \"ME+PdQQy9hQZKnwbgXV6iqV2wl+BfjBhXe9Byjg0W2TTTa9QVll4xa/mlF8WkupUb65WJJVtdKc\";\n  b +=\n    \"/Pz1WUlQQr+hVWcrTxXAqrQjdARfZs7RqztWvM1q4xW7vGbO0as7VrzNauMVu7xmztGrO1a8zWr\";\n  b +=\n    \"rFoWLJ9a8z2rTHbt8Zs3xqzfWvM9q0x27fGbN8as31rzPatMSxb5fryWbOa+DeRK0e+JPiOfkeR\";\n  b +=\n    \"5Vk5MpUKOUWttlV12J13FvP2bif9bNuEYzn0T+G00apgUcIxTZgurClHRZyfEXlqLrevHA9dLoD\";\n  b +=\n    \"81UtIDe/pfsVefqpFxvdA5cwjb2VU2zV/FQJKDQcBKKl6jJ/4bsq8zvcnoXgEDaoyPivHw6yM25\";\n  b +=\n    \"4ay7FN9cAcUrFtXJlzepyHYLNuU8o3Ij9u/L6NbE+gYHVlMfF4bOPFHUGjFp/eIh5+kFfPn5Xqt\";\n  b +=\n    \"INVBafSEtcBqW4IegOODBI3xkT2Wk8gjgxWySECW0WWrSDIpGXmwz0zBu0C8aSyDkY+rEmA1SP7\";\n  b +=\n    \"R/xNvw2RhGDb4oRmAXYjmEW0+H6o4SDWGcsWIjfozwNR2yeGo4jRIJGVxYw2Ut6y56hosYDq+4j\";\n  b +=\n    \"fw+1X31ghfqIf4L6ElowLwbcEqpRP+1EkBw50O9uFJuBbsxigsDjo0dDaLir32G4V41vDYHuYCp\";\n  b +=\n    \"tSOONwxuEXYBbF4SleZw1wNkVX/9ZgpMW6BwNMYNiuFCE+iqlfprC7qD6K3EeRQ32NsW0BYwF2s\";\n  b +=\n    \"8maf94XTfdF0/viFW6UGOCbCb5IvC8S90XifSF3GDEgONf4xWuMahwDiHONX5ziy5AYcJxr/OI0\";\n  b +=\n    \"33vHAOVc0xdBvk5vKpj9Y8EgF4tcNiBko1zWZ2W7XNavZdNcvqtm69y8x2+boRhWQQbHYp8bO/z\";\n  b +=\n    \"l2OEvxw5/OXb4y7HDX44d/nJc4S/HFf5yXOEvxxX+clzhL8cV/nJc4S/HFf5yrKDLzM1PWWaGK9\";\n  b +=\n    \"yKlWkT5THyYQ0RG1eoBbFYBLMvYQwUHTCjhko1SKrhsdrAGAGmOrWXHSpr96HnAN0jQ2IN2KtAi\";\n  b +=\n    \"ojXiEELYU28Rgxa3NvHa8Sgxa1DvEYMWrjVjdeIQQu9kXiNGLSBeBfI+V7v54xMjH0O/byGCg79\";\n  b +=\n    \"gobuwsDgtxmm/6LS7+bQL2noHg79Gw3diyHEb7NM/2Wlb+XQr2joDRz6VQ29EYON37Yx/d8q/T4\";\n  b +=\n    \"O/ZqGvoFDH9fQm+D6bsx80wG9UYlxo2JVv3IjywAG83tg+wWBUhOPd8E+GQKlNh5vh4EZBEqszf\";\n  b +=\n    \"1tNHVEECiN4fEwbWIjCJQyPO4vJvCYg2PW2XBbsR6PWfhSnQ1nig145HDZia7YiMcUPG2iw2/HI\";\n  b +=\n    \"4NYCmw1jUdabBYl8jtEe/nO1XBxelCWYK2PfsoOGg5gR6CIbLirCQUlqNjicIKK3CEFFX2HFVQU\";\n  b +=\n    \"Di2ouMvhBRUzDjGouNthBhX3ONSg4l6HG1TMOuSgYqvDDire4NCDijc6/KBim0MQKu5zGELFNzg\";\n  b +=\n    \"UoeJNDkeomHNIQsU3Oiyh4pscmlDxzQ5PqLjfIQoVD9waU4ja7k6Z3bXNiP0Z2CBvMsxB3mLQg7\";\n  b +=\n    \"zNEAh5hwER8i7DI+Q9BkvIxxg6IR9nIIU8Y1iFfIJBFrB0AFp6PQMw5JMMx5BvYHCG/DaGasg3M\";\n  b +=\n    \"nBDPiULxe2ycmySpWRa1pbNstjcIUBu0ByB8xyHFXGyptRgYVZ8pQYLyOIrNVjoFl+pwYK8eEoN\";\n  b +=\n    \"IPmaGDRhQ86sdipVwyU+XFIwcAaMBOgCV6mjDodpHojySWVSRfVScyTvVMCYS8FX8Uw4wAxf4Qn\";\n  b +=\n    \"xWT0nDubKApemnsHZEZxvFhZ4EvjGEE2MpyjCIwkATe2sE7Cgxuj7oKXanP4J1E+o/ogYGeEWZO\";\n  b +=\n    \"D3YpHkaw9Ygp9zIiTtDfjPlT7E7a9qnzwgj/vl8c3y+CZ5fKM85uTxJnl8gzzuk8c2ebxRHm+Qx\";\n  b +=\n    \"1Z5zMrjXnncI4+75TEjj7vkUcijL49cHlscwNCQKR930WBjVGn8RjdDfVVn16AuV5GucR0wp+0v\";\n  b +=\n    \"Ic5b3HfHruHd0TeoyYfkW78nbDc0RvBPyHaU/hcdkb+IZLBpMfpCWhsPQCOBVk6MYjbL3ZQ3ypV\";\n  b +=\n    \"gEdOk6Aw2yrcsOiPtGFrcsMaATi3Od/IM9WnkiT8yIvqoaQLNnj8OBAKHsr1hFtUYaoFe/mHPbP\";\n  b +=\n    \"p7D34TKHBloMCVgQJXBgpcGShwZaDAlYECVwYKXBkocGWgwJWBAlcGAlwpZvcsxMVaF5RvYv9o2\";\n  b +=\n    \"CoAwB1Ku5AjNNnJHzs9oz40vv++Jvv3s1HhYNTTkBFpZORHpjwZ7hPPgHTqFgWS+4LYTwSGYsP6\";\n  b +=\n    \"TjnHZlBzC84aPZQ7UC1WzKzFXxqRsHPsfhdrRsQ+7WJDPzZCsSJOxJGRH8ma7jTrssYp72MMm7a\";\n  b +=\n    \"VcG1mFtWZOEuio/IiJhCZ6MsDogVbk2rHu0W2jdPk7l2e5Jv2fBy+7MJdDl9x4YzDV114ksPXXH\";\n  b +=\n    \"iKw9ddeDOHrTyedp8cPujCMxw+7MKzFDb6vm33rp5Ui46kXp2cAq3UY87VQ5VrU3l/2JVf1W8ze\";\n  b +=\n    \"f82V25V0J2S97e78qoKby7v73LlVCXfWXl/j1dGeyVdLv0XlikOoK8ypJsHuRrqpQKvq4bvM64Y\";\n  b +=\n    \"j/Dj6uuc4R2FNmDda5wb+8jlJqCQ/m8q0qN6x4UmwF9C142/dvO4Ece+2bcCE2N/P+6aAcVKBxk\";\n  b +=\n    \"5Qk+YSzdCVXiILtrC9XwGlCzZNbxb/bI+RcWPsQZxHu9knA5Iy+D1xizypdZuTV5EqtRmWKmNrf\";\n  b +=\n    \"KfNyUPFQGju9o1XSwzK231b0q1vg2WAzg60pvsZpb+itjrzo74GBa9CVbcYDt9q3ZnPXNDh9AoQ\";\n  b +=\n    \"GYbPcWEEd0UlRdarBRoc41r3cTU0KVdiW2Isz7BXrXCGveIN15JvsTxq2V9jIWRjYoF4LW3aJfU\";\n  b +=\n    \"EAdfhb6+Qwq18eJXXFZw/zvkH2uOXm7xgpNWD1D5b1tLCdt6djYP38F0fDWef3PJY9TX0iTyHRx\";\n  b +=\n    \"kd9b4nZS2+hY+mLvK82m58t1Sc8G9HKyhX2e2vXYds8x14FMErPKN5xJcEg58aN2Fe0XpDn1VFQ\";\n  b +=\n    \"DWFktHRnXK2ruDDfqHumPJuS233QG1X5THdkSVIhr5XdURnTV+MbrefryYi9Rq/wxqnw7VPh1Z+\";\n  b +=\n    \"3So9uIn3NYRt44NduZunK93m8aM8DAudcTA6qzxi6qO4u2ap2Q+yoxKXdWo6Tig1k+OeQeotfzO\";\n  b +=\n    \"JHbisQ7L/WnIiE6mPw2F/E86Qj5Xz9C1o1ukwC8O/sP6mXeGthGMq2Bj9YuRPnQ/ZMTcmjujZiI\";\n  b +=\n    \"SOjfaiIiGwP5HRbC59XBWfFlkKq/VmPQGVaFlqvR0nO2cSJlpoSVQ0hSvIUrAIeGkKLtm7Kv+9S\";\n  b +=\n    \"L1b/VJlfs1M5TfSlsRGXpW7SGZUdPGFTjcbVVuRmADCR+kLpy3qjfrbSTlHdyWd8Q7Xu/RRI6aV\";\n  b +=\n    \"MppmLcBhx0av+VJerbE3qA/Llr1/YlyUowd5eCRyMEjkYNHIgePRA4eiRw8Ejl4JHLwSOTgkcjB\";\n  b +=\n    \"I5GDRyIHj0QPHokePBI9eCTQGXwbPXwvdlSEmhe7hyjse7Gbo7DvxW5WsntGs13GcxZDO812Mfz\";\n  b +=\n    \"z7AJk/gl8LX4s0sjsH8kLbbmQimnlx6KF0mS7+P5WP4KfmJOGfwSvK4Z/H6+nDBcNr2cMlxqZjM\";\n  b +=\n    \"t1QQKrkVma1Kf2sGdmK/eOndw7Frl3eDSUxNvWkvg5TTy3lsTHNPH9a0n8vCZ+aC2JX9DED68l8\";\n  b +=\n    \"YuaeMdaEp/QxN+2lsQvhzTpTdBckkl/vUUY4FIoz8v6vKLPq/q8ps/r+lyKlC/1eVifz+hzWZ/P\";\n  b +=\n    \"6vOoPp/T5zF9Pk+7hH4KgJy8xRvpJgNkVCfGBh/sGnJaTWvHxYEo/6w4ELWPbTP5oOjF6EERCro\";\n  b +=\n    \"s72P/3jG79P4/RQAIh+dC+N/KvJ+ikVHhWao+rcj0vB7SyknPa6HYPF0NAZ48S81H2yh6Xg5hOD\";\n  b +=\n    \"9LzVuMVVcA7Gh5lIvotriI7oiL6K64iO6Ji+ixr9xFdNu5iG47F9Ft5yK641xEd5yL6I5zEd11L\";\n  b +=\n    \"qK7zkV017mI7jkX0T3nIrrnXESPORfRY85F9JhzEc2NCh/RepTig1TA3Ols2mchEXNQGxpOB8Ld\";\n  b +=\n    \"gXA2EJ4cCE8NhB34RgyFiljBN6BZJToTv90NJ8TgZynVs1F5FGeQckZsc1ju9mD4SsyQahKbXTF\";\n  b +=\n    \"iVosLJNpuPA7xXM+IQjjukejwTPsY0Qtnz7aCKG++xSioOnZu2ffEzve1XDu12R223D2F4iEbF8\";\n  b +=\n    \"on/tVK5YNxx87yBT/80EJ5zA8ftYG5vC02QbAdzH434aswyFCg/g0ZMUSBbKl4tPqerQ9P+OFsw\";\n  b +=\n    \"f89tmL0fw8H0QVx7zz7Xlh+4BatzZo5IQstD4jJEuO4Q+n1RCwntlNB5eTyhVgOmjt2OtIxhkBD\";\n  b +=\n    \"9dwvwTZne3Q0ljs9fsw8ojXM46qGHe77PgdzrSSb8hyNkRFQWPJUc+2gT5suMEUb7aGaheW7+Qp\";\n  b +=\n    \"P7Ci+kh5hpmkJxiPaizN2di15eyHj7qf6ZC825e4x5p+nTpr99sK8oxcKap9Bpfgz+iJUpZozwU\";\n  b +=\n    \"L2pUTbrsG+Q622EHuEtG13NJa2eQ6wAIJn9NYebOdQpKIFWOFEfqGPPfcXogW2afq1xgJmS2qJt\";\n  b +=\n    \"ux8894jvZBtU/v4+cMs9+B9XTEpNV9iEm/tig1CuqYGdCDdJu3MNlQbt0dXsPd9IYJaon5/jBVM\";\n  b +=\n    \"9cujFJjI9RtKvoyWOhUNdMZKtFDvjZPRat1xIsLyRLWhLlA7+Thm9KLsepNahE24eTLgI2P2zcJ\";\n  b +=\n    \"D8+Z/7bHLgK0m2G5wDTiFjXcDVbcUACKwYb2jpICcgGm9Upr4aj3V3QYzVh9yQUxW+TobJH6Vt6\";\n  b +=\n    \"i8RG26HiGuDB+iXQiWobENEVvj7Qx7R+Dz1pmIGaw8iXMbjY3sLLjkMFVw3LXOEoUyF7pG3034A\";\n  b +=\n    \"3A5on7CnDgrw1pa5ySfBa5Q9v8iFkbUeXJ33qFajT3ai7uNjgx+yyNu5FsOcePe8kfFHcK5/GMm\";\n  b +=\n    \"+2Uj/aE/McMmN+X7w29B8+Be+DncziW0PdFvsp9rdBPIwmYxjGMMurgbdPCPb34OEkNkH0hwtFr\";\n  b +=\n    \"lc53YWY+nNq13eFHITrAIKh1YTxK7nsjIqK8nL0Z2PaHY7L+tYT1ZNv9zPRmxnhyLhtcTTBUD6w\";\n  b +=\n    \"mNgNHryeHoda8nh6O/8+vJJxradiPXE2m7w5G0zTPRmtaTz4SynvxYfPP15JoZWk/kkqC2nlwyq\";\n  b +=\n    \"64nF3iCCr31ZDn01pPDYX09WcLyczIc6IwT4cB68kK4WnfQMXMN68lhK/qS9eRw9DVeT86F/npy\";\n  b +=\n    \"JvTXk1Ph8HqywpJ8luuthLKe8LyM9eSTDV3hq/XkSuivJ5fCgfVkKaR+Cqv15LCd17G2UfY/Uq0\";\n  b +=\n    \"nmCcnB9aTY9HAenI0GlhPlqOR6wk4l39M1xMRVOInhteTZyJZEOw3X+Z6MuJzfz2pTeu19STBen\";\n  b +=\n    \"K0ZyJG/XGriUhTQ9+XlxOzllDrZOHfGb1gK1j7gK+4tJ7Zp8KvD6ySaACrJOHrhgGskmGixSqJb\";\n  b +=\n    \"oJVkoh3tQqrJBrCKomGsEqiIaySaAirJBrCKomGsEqiIaySaAirJBrCKomGsEqiQawSmQFrSCXR\";\n  b +=\n    \"EFJJNIRUEg0hlURDSCXREFJJNIRUEg0hlURDSCXREFJJNIRUEtWQSkTO7jiYuNNKk2moPMXC9h8\";\n  b +=\n    \"yLp27IrhFuguNVdLZBEuttWV0rLPGgvXWWLDxWxVs3RoLNrnGgt22xoJNrS3d0vQay3fHGsu3ZY\";\n  b +=\n    \"3l66+xfDNrLN89t+iIlVm5tR5OUuY6l3kZshLCKulZjaeI9fJGavPfg1Vzz1537mtEycFVgEPCO\";\n  b +=\n    \"TEIjXMLrBy5QKOV6fc7YfeAwUnnQqBmrbmBXTT9mdtXZG8O59hq4H6ajpUc55m4BqHI+znyIdpZ\";\n  b +=\n    \"amTqRT7EkQ/TLl4ju17kwxy5Y2eRamTmRe7gyNeodVsaO+nFfhvH0o67aGvslBf7No49DWtWjd3\";\n  b +=\n    \"sxb6dY2nJLroam3uxT3DsWYrtaeyMFysGvOcodkxjZ73Yd3PseYodV3XpbRx7HO5P3uM369NIrg\";\n  b +=\n    \"0d59ysSDhvPrCPo2KJos3kUFQqUV1xRlOL6kpUlqdDUZlETeatoahJiZrK20NRUxK1WdzB1KI2S\";\n  b +=\n    \"1QuDnNqUblEzYgTpVrUjETN5mNDUbMStS0fH4raJm6fjXiloNGT/T85ezeZgx+cPaKNeD+jveLU\";\n  b +=\n    \"kgCN0pRb1DsMeFOUzDg1jRkX8/Cq3xBXrvLNa8GqH4EfV/nq9OpfnVn9q7Orf3Vu9a/Ou6/q31j\";\n  b +=\n    \"VY25AXHuX0s6ANNrJjhDE6NGoCxL1dxS9pFCGArW7+NI+5d5AEAr5UMl8GjttKSSr92H1U857Td\";\n  b +=\n    \"mVnV4eCEpDhDaHDhz9hP0FxgwxlFlQn3ViiUttnD/ppBLXtXH+nNOVuMzG+VNOJnGTNs6fcCYlb\";\n  b +=\n    \"srG+dPNlMRttnH+ZLNZ4nIb5081ucTN2Dh/opmRuFkb508zs8L8dm4R9E2zuADlXFaxoUn9Zzrm\";\n  b +=\n    \"DexEIbKeftSQv1kZ8qeVIX+7MuTvVIb83cqQv1cZ8o9VhvzjlSF/VhnyT1SG/OvEkH+9tURgdZm\";\n  b +=\n    \"WhW707YfFul6StQbshMO641foLPYnvwZYpc7+Ph5wkOvrqhtryC+q7qMssWu68OyJVoEjvD+JdV\";\n  b +=\n    \"ekfm3mBkyyNeO54XwFYWLbQBtu85zsauZXrJPeOpqA/WvrUZEaq5JEXf6K9eo7aFYu0XMLfuI5Z\";\n  b +=\n    \"xjesg0kCpwDBumWKTyjcmkyLslZZpsme7XpMJjhGPDS84l8Xb5+VUABOVfCFdLS0vMnmrsX82i3\";\n  b +=\n    \"2nJyfhoJy519u2kuc9Hn/egPLZ354/216At+NGyBklr0RT/6D0/85Bfr0Zf8aFgXNWvRl/3o3z/\";\n  b +=\n    \"xy79Wj77iR8Ne6Z/Xoq/60T/8i89dqP02m/aE7Bqq4+hnwOjX/O9+6Dc+8K5artf92H/3bz/1MV\";\n  b +=\n    \"NFjzYU871bKM/wSsPuTSoXNpRJc7dzKd+0CT1fN02XMNWE6cKaclSTe3HRObnLW/giFWkIJ6u3j\";\n  b +=\n    \"gqfXiQrRcPxvjitrCcAztiqOQxY+y/xzfUfdc0ET9UtCyrGmnPZd7CuHWaADt6h8qra1KkoSVsL\";\n  b +=\n    \"MXhIStn3tXplorlqpSkyHDhdCLeGrzW3C46MBE9r8CBLCcOzGnxGguc1+KwEL2oQvhAo58uas+h\";\n  b +=\n    \"q4696jQoVkyWxBQlZhIPRHloCDiktBi21fqxCPqc4r2kwDRXycixI22HlgStkcUCoeo4Rq44v1S\";\n  b +=\n    \"icCLq5cUWsaQjG+pk0pmRX9ykVsl6h7wDL/SzgHdQzmOQiFPx1P36W3TGg2RrSbOcTKNoS4bISL\";\n  b +=\n    \"iaQZBPhqhIusy9vIlxXwtUEEm0iHLTdliwIQNszTbWQmA0vNGiEJhVfNG1RImvx5MokXrbatuqx\";\n  b +=\n    \"DUk7NwUVsr1KS1VtFKrUpmopoV4QJV4vtaXwDzzbZDY6qJV7ToLPaPB5CT6rwRcl+JwGX5bg8xp\";\n  b +=\n    \"8pcks+GLDtcISvS43q64I2dPZQMdV3TfcNqhSQ/3MUeemNiTsyijfTBjZNlWryKeDXBQqVEpVoC\";\n  b +=\n    \"WvNUcXSL670Kh/J7+x1KhXr+I/7Ru1hwhZU73hVari0pF8yxx7Nt3O4PmYAviVufQivzJ/XuZX5\";\n  b +=\n    \"syr/Mo8eT11vXEmtTwZezwZLqyhyMOF1QbymzRdEFgnjybp9at0wVbQUrPvCl1xNNNaPzW4tQZp\";\n  b +=\n    \"jVJML1g+r+MrrmrRdTzlU9PhYcIqx1DIfNqJdDocYtFOHlVSnRoB02aNcGKQcGGQUMl2pNyQi9L\";\n  b +=\n    \"a8htdUzhfAzMKJKKmSHb54M0gm1ckzkxYFs4BiKqm7hs9O8+BPSkbodls5jB/Cyws9O7U1Pg9dH\";\n  b +=\n    \"6gx7vp7ECPd9G5gR5P0JmBHm+n8wI93obzAu3haY9Pjx39DXg83L8Nj4f6G/G4vz+Fx1z/djy29\";\n  b +=\n    \"TfhMdufxmOmvxmPvH8HQzX072R0h/4WBoTo54wh0e8z7ES/YKQKAI3RHr8/w5AY/bvzGFq8R0N5\";\n  b +=\n    \"LuvzsD6X9HnNyPMKnh4QPsyoayj4sKWuQeDDoLqGfw+rah/8HpbVQ5D9Xvu+D4C/gBVDf8CCCy3\";\n  b +=\n    \"K7cmtyW3JLcntyK3IbcgtyO3Hrcdtxy3H7catxm3GLcbtxa3FbcUtxe3ErbQKDgD7DoPbroZ1Zr\";\n  b +=\n    \"ii+7by2He9ip0bBqGHubSLPYdyoi6DvAArWKzoptXdzq2TdHdVPyXoWVCW9pLwLlI9LbqW7Fj+Z\";\n  b +=\n    \"9+VTXsu+vpqz0S9RqR2w2wrWS594FWAhPkbUJbHdG2iHkPl0OLV9Z0ooT1vlaS7q/opbfKGNrkk\";\n  b +=\n    \"Ue8SI9uzoewZCZTt11l7Rj5/Nm0lgTd/Ae3ZhkeqaLryBLKr6HhMPMv+ZMTpVDQtSdJbJ+nuqn5\";\n  b +=\n    \"KnIY6F1bRMH8G1o69siFUb718b2zdBufVkZb9i+EPvXrn33wy35Dflm+Et8ZRGIf5TH73agB8AX\";\n  b +=\n    \"IM2OkKHdq27O1c7pppu5TIMYXtNB32pbcmLzMK/vJnVgJrzunH8gokgpQBuYiNq1JgQAZCEawOI\";\n  b +=\n    \"bBCArIvmvnAD+vfwKOLRSaDjH9ailSX3gRsh6x4SHH5r587J9APgFZpCBJfwOAqbfH2GjC8ijrK\";\n  b +=\n    \"ChhghfEFx+HSjgIZAhPweEeBdQish0M8CkwisAH+8ihwGwIb4U6PAlMI3A5vexTYhMA0ZHxPFpt\";\n  b +=\n    \"rTnHUD1qrPP17r3zf087BUaf84q9+5BeMhrt5r/ylP//Yz8UaJo4o/8VPfe7zoYaJO8qf+PP/+r\";\n  b +=\n    \"02njil/JE/+5d/ZMPENeUXvvgT/yHSMHFQef1Dn/7u79QwcVP56at/8qP294izymM/+qN/2dRwk\";\n  b +=\n    \"G8ur/3kv3/tn3P4SW1vhjytg2GnQ10h4ag8MbKjBJA1qHVuHcd1RXnGpwZD+TeHJIojMwkUacXh\";\n  b +=\n    \"dg9zqkOPre+UBgtOtOwDYT8eGRnyJmmFR0tSN3gbHDuMEu4zLiyKCxZOLpsiYofvTpjFAuRnlRz\";\n  b +=\n    \"vzmOJUMn5UY1IXYSKzZ/TiK6LUJn5MY3IXIQKzJ/XiEkXodLyFzRiykWoqPxFjdjsIlROfkIjch\";\n  b +=\n    \"ehQvKXNWLGRaiE/KRGzLqIWYl4RSO2uYhtCjwn9DlH19sjxjGPBb4q4EjxjcwXSByZjop8WCO7o\";\n  b +=\n    \"yJ37JTIbFQkbpI4dnJU7CkbOzUq9rSN3Twq9oyNzUfFnrWxM6Niz9nY2VGx5zmWOW6bqFqC4WJx\";\n  b +=\n    \"Is2Ym8ye2YIF+8wWdsPMPeFjCrD9hobKwMAS/y3HOqZ54O89fElYjsM3onmEtyzq8AxIMWhnxjK\";\n  b +=\n    \"qRI+J3sXFgmsa1+PSm8Rh9zwqT/WDZhFRm4JBNlSUBFvQiNak8JEiGigPG3/Eudg5D5Rn1TgpTy\";\n  b +=\n    \"wZx7Xd2GB5iFlgnFZGj7BmsRaLaxrJ10nNXXn9V2tx6U3iurtG5zmiRHRUX72F4r/5FlqJpYWSr\";\n  b +=\n    \"5sWOpNIiRpfNyW60JASNb9uSnSlKX7HtSgMZiF3DbClfqTw8m0MjvtaXHqTOPYZyOOe2XNkeWQT\";\n  b +=\n    \"pHcfACyxWHmdU+0wPhBZbygGd8y5OMIqQvkqzroyvat/LB95SFD5oeDdyJN9XLtYXMI0xWS88a6\";\n  b +=\n    \"XsITAJUxi3YNb7zSGvdMYcUKk2SErJDz6oviWKRrv6uH+5H0MW5w32HvOfMDn6ZGl8D5tcpGelo\";\n  b +=\n    \"I0qSANLgj7kqkXpqN7wLiqoZaN3YypB4EF/qZvrKsxOSHh5+SzWrH4Dtkrl83jyyuY25vil/hH6\";\n  b +=\n    \"pWXPAf6IJCfeT19UJXxy+uEwXJ8Rb3ADka6fuGsrzcpmF/MBlwX+SUL1tBAVelu3Ua3qKfzp7Tm\";\n  b +=\n    \"HsWVlrooYiAvL38MnqHxFK6xL89VTDsrds9VR1762Zt05K3K8fr6clSzqcenL7tqX202deV4nWy\";\n  b +=\n    \"qnkW0G61XkT/pMNw7LUNOSB/bq96OXvWO+R5GYCzYoWO9CtpxI9kVQs2xY9cqkTA+PfKUT2teKi\";\n  b +=\n    \"zyUaJ0FjVdcNA2E9Z5haPbv/UvliL7G6EtFi4t4DfjSmzPyEIXgEh80KtdKFiK1AnQ8BXRlbjF/\";\n  b +=\n    \"5xyjMvuQjDkfaPmlMBpvNDaXOVQYaTG7tSf5tY5i18wT+MHlzrqRkXaQi6u21L0QJ3QxriScVKs\";\n  b +=\n    \"HzfeDYrgXtlrl3rOMe4cKZ3G69WtXs0YsQNp1m5mBBknYTRM+Vq+8py4OHzNxCKMyiXPuGbLYKd\";\n  b +=\n    \"e3Bzuo0dFZXXdJvxtu6KLcleDUTe1uOItO7M80eBrdZu+gthUCXw7H/cVhEbFGB4UwDaSbuFqc7\";\n  b +=\n    \"eGjJEkjXaCr0lDrwkbtgihvI5ovcYqrSeFYW63zdD1i+k8XCCm5TN502oyydih6kzYnmOKz32us\";\n  b +=\n    \"mA+rWwwxJuBSM1SFYMasY1ZAde9xrsM3zjmFFN845jTTPGNY84wxTeOOcsU3zjmHFN845jzTPGN\";\n  b +=\n    \"Yy6Icp9HucgU3zjmElN845jLTPGNY1hrxoWucrxvGHONKb5hzHWm+IYxS4w75RvGHGSKbxhzmCm\";\n  b +=\n    \"+YcwzTPENY5aZ4hvGPMsU3zDmKFN8w5jnmFIZxsQ4XdAk/wttCDRwoGf3HAFfQGCb7bbc9i11b1\";\n  b +=\n    \"33lrm3Sfc25d42uzdrstWAyVZDkab4TPG1liJ4RdFj+9dYjFArkD0lf23lCLUi8aH0ayxIqBVoq\";\n  b +=\n    \"fX1IEmo81Hn60GUUOek3teDLKHOSeNfe2GCYt4pOCq7NmVxgkU+DQeRT0Ho/FBH4E6Xxd9quEMw\";\n  b +=\n    \"tWGGCSfM0Ct8MHxP+SZGWo7tqT7xMKoM+++hcjvc4sSDqQpHxD6NiVPjIz++Ebv89wGjX9PEfhp\";\n  b +=\n    \"BrWL/XA5tGSBaiT1FFKZWvMD/2NTKZgajnh5dbKPlGS6wQmglLA5grXmHsvyeEXDEpenHX2+QxM\";\n  b +=\n    \"ahQZs6cvLfHhRo6+LRq1IdZTkevEDXTXftrjR7LgSscUjMFXZydeNr3DXf/UXsbvYeAvi3XuY9D\";\n  b +=\n    \"E7Q+7sdAFbTK7tvK5rulu5tReou5t5etNxd3BOAHdHrt3cVHXfj9u6i6y7Z3lP03L3ak+Kfg97+\";\n  b +=\n    \"D3HYQW//VDx40Nt7xaUHvT0lPj7obY84/aC394kXEHrbJ25BoNppxFEIvR404jqEXg8bcSYCZVi\";\n  b +=\n    \"DwR+UEW38cf5twyE2n44Y7TaPvavzaR6VMLU0iyLjyP53gYgG10eA5mf3L8DmR1ix+SOLzW8Um9\";\n  b +=\n    \"8oNr9RbH6j2PyGx7KqmFDfQUnYYfNzjoPo/PDcFv9tueFSmSWEE53v6Zn4QG7eajE88bvW61bgv\";\n  b +=\n    \"G4FzutW4LxuBc7rVuC8bgWV162g8roVVF63gsrrVlB53Qoqr1tB5XUrqLxuBep1i97U61Yg6hnq\";\n  b +=\n    \"GysQNQ71jxWIuof6yAoqr1tylzfe8TwBvGxc3Mnq9ZXqdaV6fa16PVW9nq5ez1SvZ6vXc9Xr+er\";\n  b +=\n    \"1QvV6sXq9VL1erl5PGEGQAbwCr9fqlg9Lh8G+gmV1HjEcRYwGieJRwPpKzK39Hi7uy1+6fO7ncJ\";\n  b +=\n    \"1+wgjp5Yr0spJOVqSTSnqlIr2ipJWKtKKk1yrSa0o6VZFOKel0RTqtpDMV6YySzlaks0o6V5HOK\";\n  b +=\n    \"el8RTqvpAsV6YKSLlaki0q6VJEuKelyRbps3KCZF/70kWLBez5SLDjTR4oF3/pIsdzVX4djb3D8\";\n  b +=\n    \"iA5XkO2S4UgVfUoGI0KpVGPJcCiT0GEJTenAZQb73Nmf+f1GncEsyWMwS/IYzJI8BrMkj8EsyWM\";\n  b +=\n    \"wS/IYzJI8BrMkj8EsyWMwS/IYzJI8BrMkj8EsyWMwS/IYzJKYweCeymcr657KZy3rnspnr2CAvZ\";\n  b +=\n    \"Z1Tw4UAYAA38IdijxX9PmaPk/p87Q+z+jzrD7P6fO8Pi/o86I+L+mTaxZ9i/mvrCJv/kFwxnQ+1\";\n  b +=\n    \"ArbjNLG7mPLcbhKLVo7C9oK7AQeNPZMwThWry3fAVWu3UBMgC9OQ+t7uENcvPU4VT/EBoF24Iv9\";\n  b +=\n    \"cYRo8oTxER2YxjAFjvEerrn7pbzx0r5i4s2sdzfGPmnFDMxGT7DPck6A12Ld8T4u8UJgDHVg99z\";\n  b +=\n    \"Jx3neREQndr+ixmKDv4IiRYv9Tt7cWYy91M+gvkoF75XRY/GO+aC/rir5vsV+11L05kLzbrJmKt\";\n  b +=\n    \"vV78/X7SvWSfGh3lqL4aK7yPRmkd1dzkC8HonX/jo2lWN/eYA8z7ty/0HVdYXiY+BAkUJsv0KbR\";\n  b +=\n    \"aMUWa98Cy1j6sRYuzBGFxq0xGDvpVp/CE9atv4Wnz2PqW2NtS9viYavkSXSRrOldbEeCdajB7Pj\";\n  b +=\n    \"fWN7sFGyRW7KPYgI9GDL9WDoZYNfWc89OHG835VubLK+3ohunKh1Y8dStBv1ByK/PyaUyVosRaj\";\n  b +=\n    \"FVBzYYjHCTSLRjXRoHI7Ea39ioBu1K5rcja2hbrRF0m7ULLQbmxav1yxqr1El0Q7G9VxiKdp7Ck\";\n  b +=\n    \"XA7dpaeEDMkPI23vZVCAHoQS+JJvDs5eWdLdRD3PBpH4pP4ni//RnmAvszpv4zyCDJs85xGrV5l\";\n  b +=\n    \"/gwH1vcSf2arz+OQLy4c2Ghs9wKe9VkVHTK9ey5uQ+BfQdGgAntm0PKtT9pm4Eej8Q7XAO0oehv\";\n  b +=\n    \"pTQ8q6A0k/vz9cqPqUhoBiLr/NpfjxwWWObLt2htqegtspZPO6zATt+uP56UQUfMKzAlcokZcn/\";\n  b +=\n    \"/AnMzTZwdxEzQrEYx7KgzeKl/G/DyUI0HWHM4zpvvfamY3L9PCpayYzRqnsd6AbQliDfot7rMT1\";\n  b +=\n    \"q6Fhy77FsQNJJIO4TLqQVtiwSUalZrADYKQZeNagnt8gnlwXwde2Rz7VE08YuCduG3TD2vpMP83\";\n  b +=\n    \"kBaxrtYn2+oJdmAHqUxDa/IAKBM3trDmVya4mlOSPVtcGJGwmgpC9DJk9og5/a0DrrkhkA4O1XO\";\n  b +=\n    \"jvjZAgLH+jdXFskj0qx32BuuePKL3BT9hkJw5LFOzCU7qbM/ykNBMjRDP1rl1ZEabjhOqy2dkA/\";\n  b +=\n    \"s7ofCJnHe6WEQN7tRB1WUwb6enaVR+1Ar8igADanov5auDVWXtIUDzIj+cKNgVCIZ9quPhnGpcY\";\n  b +=\n    \"bqegwgvW9W7X03MMa42/1eZ3GfTGBam0ZN8kvzrBoj0brFxknh4i5PAHyzJHX+VTfqsXSVzT/wP\";\n  b +=\n    \"w6qjzud51ph50CIGSmqtke0AqW0DPWb6kEeJ0LMRREPaVlNVVhCVeoq4F8qgH8t9mAjtkA0Eswe\";\n  b +=\n    \"LmWKAbkLkTaqBeiZhoWeiVGLmBJt2dvHDSjbiXeraYmz1pOmGGHga/0U33RqJbWFpP8SV9CepYC\";\n  b +=\n    \"b1Oke5dqG6LxdWxkSsPL4m8UIRwELEzd+En6Ou/HDCcctzydVXZiberYSTVeJ2GUVD/xclYvWh9\";\n  b +=\n    \"piJ7UiDZxksG5D9arVqRjjWrFh1mI+Jog7wjBSpZsluVUNoHihDNVQbpQvh3uBRvB4rbRtS9FRo\";\n  b +=\n    \"H3LLdyUluUbQllbx2U0J64TmjrnVJ1gU+EdNqNSdh0P7WEWir2fif2fkQz8Kux3jT0fuAq0tPBN\";\n  b +=\n    \"Nw3HumY2XL/KHNEcBEJq4srfpmkuDMFYeRBITVsRnYZbvJ9svtTpZ7Hvr87OwhmfDVCboZy0RuP\";\n  b +=\n    \"HcULQSXg1Xkq8ntEfiRgDuZo/OiPnp1WT1PtD5ieZneJbzk6f7Zj0gKgxWPd6s6HKsektFSk2vX\";\n  b +=\n    \"VFhk1vmUiw6W1S5Nf0pt6e6W2zyK4BYSuSa3qbEbk1vc2K1BqobA86SDERxZvFCkuD7RQMi7OfF\";\n  b +=\n    \"EmGgzNSgRtTLnmUy0y57FGuMOWKR7nKlKse5RpTrnmU60y57lGWWLthydNuOMiUgz4IKlMO+yCo\";\n  b +=\n    \"THnGB0FlyjID9lRV/LunPMKu2K541eS7I4FEOACA3AvBe2ltCsqV5VcDtvt0dvrqpzKBr5kffFW\";\n  b +=\n    \"0Sd/LUB816Ac/zI14LGTHREH5PGt+PO/pgrzAlBc8yotMedGjnGDKCY/yMlNe9ignmXLSo7zClF\";\n  b +=\n    \"c8ygpTVnw4WKa85sPBMuWUDwfLlNM+HCxTzoReEy4xkKTBs2JDRr88GNWxeA3+1rB4Df7WsHgN/\";\n  b +=\n    \"taweA3+1rB4Df7WsHgN/taweA3+1rB4Df7WsHgN/taweA3+1rB42WTD4xe54cazYkdOdtGjXGLK\";\n  b +=\n    \"JY9ymSmXPcoVplzxKFeZctWjXGPKNY9ynSnXPcoSO8Ncir3GZ8pBj3KYKYc9yjNMecajLLMygWG\";\n  b +=\n    \"9xIaDt8irITDI3qxo5rM7Q1jIzvPY92GItHh6t9ge8Elfy8yFOn/YNuOMcdSw6NeiKso4FIkPgc\";\n  b +=\n    \"0oqfAVqb4AGQWICa4cbf4Xey4o1Vsm62lWXkNFixYTQE99zI7lFc42kML0R06wYIUJtcqneez5e\";\n  b +=\n    \"6y8Gvo/IjBIK6xNKaq6mX4FpT2YYuuPAJGlK4QBLd3Y8wYqYCmi9efVxNj62SIxEoSj/LgiheMc\";\n  b +=\n    \"YYkDKrM+wLhkJzqc9R8JbTOKu1MW3CQDP7rC06tAkVch1od0wQEfr1WDaCYjaqex/OOqXNm2VfN\";\n  b +=\n    \"TcAfYFK1RKbj1nJ6tX3TRXO5m71Ivk0A9smHxKYl0TdtYNcqPGwtl4miuDh3+Z5uk8k4Ze0tFpJ\";\n  b +=\n    \"5aY2tZDEXehIPGtWTs1HyheK3tanLjR0+wGmlcqcM2iXXHJSPusoQY2TKhONpMvBo17eBK5HXA0\";\n  b +=\n    \"y8SNlepRJNjlmwXJcoaqtwsLOxiurbNKlB76vbsoAE72lej67NUz9haLbNf8AZV1GXn8St7U018\";\n  b +=\n    \"VsA/xwooeWDB8rkGEmIVXX4d0P7lHlm13wKfK2XCjEU7l32BWGrH/rxzDluGUkdgn+irQ3uuvtM\";\n  b +=\n    \"GDCyHBnaqif2NSdW8vvPYmaBzvh2OC3gzHAsILkMqQJuwMVD3FeG2IKWzQfC/4HAx//6lpaW57R\";\n  b +=\n    \"HOPBxrWPtBPFyUWxbh2I6VaEqYJ73IhgpHjR+6gNudmKfvdIG2kLGkF+Sj7HpYTBwvROEhfrQXy\";\n  b +=\n    \"+ejIyusqKOmMosQ31JIfoItka+FkJExIFcojsKfg28AXCSy65mTfPgIsfwXTUelvRAj5b2IFd25\";\n  b +=\n    \"ZpVZMmRfKG1LBUoZhbv87Qtien8Y5gvsY+IUggdxChL4U8G1GxfUU1v+S8HNy/8ou0S5QDEdxuz\";\n  b +=\n    \"V390KL4UT26Nz2EFOUcfJWp0t5BNyRdddKCeEli6Uv/pjr6pyA/owRx9GHe62t6DbPPOzC4E0WK\";\n  b +=\n    \"rmZ2ahDxUV8W/IX0M9Qj7HvsHrXSp9CXbU4DniZJgBOdsjhtZCohXn8aLScDDq0yhUxxWyQxyq7\";\n  b +=\n    \"qk1Vfejw9U1nDUbxlT9f44nvarnL/CkWPU5Wp2xO2IJX2GzBAnk0umnMBrR3doZIRUISE5wgMLX\";\n  b +=\n    \"INj6xCwMsVWhSjBIVMjuaFosH5T8DzPnNZxrpCXmz8iG8e0LIQNIhfmYDqVMx9EZDHL/V45SylO\";\n  b +=\n    \"IOR+rEyJBEYzVWZFACFKoKhsV/UosX18z28Oz+PoauHQrVUmLlEiTSIGfw7rgQs9CFOOyfoZCHR\";\n  b +=\n    \"vialOWBxk002d14rF8sQwezT6JS7nwvuBkXIaPWB2huDT9SByyOPY5xewD/ZGIZUuh4NHjtjaP/\";\n  b +=\n    \"kFwjTth/qHDDwc35HX28LcGfyWv6eE3B/8jLD9wjPjyjZrfCQROE8tk/zEOvqJMzttM/mPbtBnz\";\n  b +=\n    \"pqXb1nlqhm3lpeUVCDL6jfBAuGPUvzxg91MXkoV+mxaPfpM9Z7bhFgnOo1g2Ul678AmjMMuc73V\";\n  b +=\n    \"sAxoPhteMSjHZ32befIRmScjjymP/+ROsbNZv4a6FkiePxAfUwVKS/R5j2i6FtDR28AZqi3V2hI\";\n  b +=\n    \"5bieTBcEmKULRYAiiWhe2aIxG23yO+ic4l4jwErlGSheyj4oFKaOyHCmRxpgWXW9lZxoM4xxcaE\";\n  b +=\n    \"fu7ytvWLQ57DxEfWI7CX8O7Z1eis9+KaKmcgzepZvmEOJfCT324SSNP3X1yS53WlqJBa1jC5Vqr\";\n  b +=\n    \"PBo/0mOrnA+9Jm0VoEynXVud8trqjLFtBWrg2uqM0bYCLBteWVEvN1oCdGvNoww32CnbYOdMrcG\";\n  b +=\n    \"m1LNMrcGm8Gdz9omBBmNAZuCDehmH5xOeiAZYBE7U6hU/skJTPkzmTv3Qd3lVXwubBKuziVQ99K\";\n  b +=\n    \"rOJ741cks2ilsy/JnM/sCrfKL8Aa82Nea4ZJRFhEG+QIP6vkC+abCHNddeRb3FHipp2Xhrr7NJG\";\n  b +=\n    \"ygSR00PWQdqXdx9vYPba+kwWg4HgVMf+vWAi5hWGm/cCqZigG67U7bp38XDlXMo+uI8HA2G5Ud+\";\n  b +=\n    \"YAVzCZe2PIPA1e9f0QmJx/CFqDx4ZG1fHlzWL4mp8f+LH1zbd8/a75DuvuBTyT8IHqqS0QC8gvf\";\n  b +=\n    \"nq9ypPPLn4iH7C5CAvLysIW4h+fOyS0El2NGRFv0wOvdUoi8yYqXvsj/TESGU2YXst6EKe4yxKT\";\n  b +=\n    \"/esgACUO/n6dUCCES5ybri/U6QBHTzEVmZbRFyPJvl1sAFImuqy27MYZ3b2FeZW+8rUix/DbbTT\";\n  b +=\n    \"WE4vI+vQlc3GY58k/Ga2a9nMkz5WZPhxmA5QnFj1/S/TblQT0tRUrZebliT4caQNXTD3UQgOxaY\";\n  b +=\n    \"1OoWrq1iq5l5N3wz71G1EjPv0CsJWrMqxOurGKyN0EZZV/QJWUcajti8TewTvvl+w0JEoJCmVsj\";\n  b +=\n    \"AM0Vv+KborvGFCTzr/Vs11y1zxL34l1dlr554/m2paFTha3w5dcV3NC77wSAcg5dfwzHhiJoOcr\";\n  b +=\n    \"7a3r+eKq6a1eurWySq8J2jrTA80N4/jInIdZuHrc3/vb+I+fDyVHY6lpNJHs9/6d/8jxsfW/rsf\";\n  b +=\n    \"/r9QKhnmHroxHf/1tL7v/DcNwuR5T3zp774F6d//nOf/cLnNekJBnCPLhiIcrdG6T6GtbjGdch5\";\n  b +=\n    \"LrhiinhfHlPZ961SiGOjCxEMF2JEAZalAMcMxLJbozMGfm63Rtm+oinIBzgLS3EStOM+KkZXSnl\";\n  b +=\n    \"SyPTVCQNY7ZuXcmlkKa+MKKVIhoZKSpsD+qklw3Ds0YqhIyMVdIr4hTacTS7oOSlRM29JQZtI+c\";\n  b +=\n    \"Q+oKpqVV6wVWlLirZU5airyvIaqjI3qib5iIpkI+qBH5krurha5hKdkp9O8w7/YsfO/zB/kUrxs\";\n  b +=\n    \"IBuo1epp/xKHbaV6tUqJZ53kXqHX6eYIY/hJRNn4R7jFUpR0uGSPInBaUtybVRJ8n1s0igleUgL\";\n  b +=\n    \"0pUELUZZDmXsiVBF+Fp+gfk7Q2FbXIIeFHg0a8ZpDgUHxLoSFWyQfftwTC+nBrFA2E7cYYGc/Oj\";\n  b +=\n    \"NkE4wEtCz4/Tj3BwJGqcfl6kChEhmFvuknmEeP/ESNSPmlnlYdqFu/P2+p1kDgKeW3CGEiDPVQA\";\n  b +=\n    \"QkIfZ1KjhgOQlLGxyBD9OHHcGi5/1kyzQPsGTvRusd7G052dtP7NmUJSFOzQCamgEbOXGgIW7oo\";\n  b +=\n    \"vLex+Vk0WM32lCRm31nLxTvEmpjvm+BVZv3LbDKAX91QKpB9XmsF1uzJggY39kz3bhDB7vZ8vr7\";\n  b +=\n    \"f103kYEzdk9YLdA8Pk07nBDn5MBzWBoJofJbGguhcl+aCKHyYtoQQuXMtCmEvPKMKoQZR2gJYdY\";\n  b +=\n    \"R2kLY5ggdIcxVPlWFcL8j9ITwkCOMCeFhRxgXgjXBoDEvBGeJEZYTQjlVUdYJ5XRFWS+UMxVlUi\";\n  b +=\n    \"hnK8oGoZyrKLcJ5XxF2SiUCxVlSigXK8rtQrlUUTYJ5XJFmRbKlYqyWShXK8odQrlWUe4UyvWKs\";\n  b +=\n    \"kUoS6byQiuUgxWlL5TDFaUQyjMV5S6hLFeUGaE8W1HuFsrRinKPUJ6rKPcK5VhFmSUKMbHPxpEf\";\n  b +=\n    \"Kn/6u349KO8QwmeYy1mDStSotywWTbacy0OWbI5DPzLUEYehGvZj9USzUMaqZUeblp2F2VtEb2W\";\n  b +=\n    \"ZLqcLRPu6xK3hg1bnOhbR66plE3VTFos/xtPClkVRbd+TUxfQOI54Mtu/IGMd1l7YWO0RDz+0DR\";\n  b +=\n    \"J1voiTMnwvlCoe05kr0QKpXzr6Tt3OaU3LA35ZXmqZBLK1K8HOIpnBXM2mqgkaJtWpypTvD98Z7\";\n  b +=\n    \"6DZtd/Mg23BUlh+/MDbaSahapp+gx7lDSNRNwxFwaryS0r4kiX8lYGSFO3YUeUmfWX4Y9rmNh9h\";\n  b +=\n    \"TSX4wcMN33tgbJGzzWUCKQu0tJMSy495rGhMQ7koKV/7/KvEep99lchEmVKJ3wG5ZsnN4xD00mM\";\n  b +=\n    \"XdTJTonfEegcDtShK8c6YD1CPSC2ItLAtoPngbT0oafXDjrRAjjSUuJds4q5lLghhnM4O0WiejB\";\n  b +=\n    \"6DzCiniQ4M08AtF66xd/YbnGnRstmyyWm/idk34WH9eZ1xz3vvmDaa8oqZiLssmY+3h/cT5YWrr\";\n  b +=\n    \"7JFaYIkb2e3ozQ5PcjazglNutCUwlu2AItRvHUXYEmKN1wQva3bZHksxlKLWQZlo96JgcO+f4H1\";\n  b +=\n    \"hHEXJgn2DyR4ejDB0wMJ9tUTNMrvBEGakqFIoPklFYtGV13f5yOp8OXP36rC73YVlmrOcjUhUqO\";\n  b +=\n    \"fX/mLV4PsgyKpaS50ClE5tF0fua6PFqQWxNEYmhwVSD8SA8Ox4w22Uzqgg+HA2zHw7wtw3cPIDj\";\n  b +=\n    \"R8Ud0/No/zxNDYkzd39UOpOTHwTCk/dF8Q0he09jb27OLDDG7frvB4wPrd3bNLbE9oodlTLi1dC\";\n  b +=\n    \"RbxDYygKXP6ZhctyktLrwXUuMqelDNv0VmNn52YZ/xKMwYCS/Fj0x3eP0Xc9HxahtKddEIiDX/Z\";\n  b +=\n    \"64RBvvyC1zn/n3ZOIp1z/Zbc+E9d5zzpOkc6bMZ1WM4dRhPIf/osi/9jnav5Mt7Y2YC37tlSI+h\";\n  b +=\n    \"8sGXuZJC2SGRVzqFi2ynfOb08p7LntPmcop/TAXTqgU5z0CkVOn1DVkPUe+4B14m+/sQJcZTOyV\";\n  b +=\n    \"oDF/py+PCgBLTUGxxOQf82B2HQ3+jQDfpTDvigf7vDROhvcnAJ/WmHpNDf7EAW+nc4/IX+nQ6lo\";\n  b +=\n    \"b+F8QH6ucq4Q4VPa9bUQNjNF8ePoosGY60yogSwbDylg8RTNTGam5+XqGAMa/HULt9thiwd8OMk\";\n  b +=\n    \"bybaP7HvqVCT1sle+etqL+IczSqtDHx0JhRXR4M0/evp/OjfxqokdsbIBBdMBjR0vFYcCOKoJfo\";\n  b +=\n    \"wyUB5BlQwJHjFLIxU2cAXFRjDal4pfD8dcd2PDFdAeIYBpuKaC5mmjYfOloELDy8+vUU8O49ZNX\";\n  b +=\n    \"/1zCFguG0plwD7JKqjLW1r1NdfXIHiGPUWqL2xwJrj9QQ4+q2aQwJvgYn+NCuh0NHu+1rmQcxDK\";\n  b +=\n    \"7GInCzWGHtzFSCyfsuhlPHsJBBm7NhV8M3YsauAn7FjV0FGY8eucrHDjl0FU43N5gRwjR27Chob\";\n  b +=\n    \"HLuKvi0C650ibn/SaenSFGNVeGmKsfq9NMVY5V+aYqxmME0xVm2YphirU0xTjFU4pinGaiPTFGN\";\n  b +=\n    \"VlWmKCWz1twgaG15zgWrDa19w3PBaCMgbXu8SBDi8zgg8nLh9Cmz17xFgObzeK6hzeJ0VSDq8bl\";\n  b +=\n    \"V1YzhZ7r9BtJHx+kZRVcbrNtFjxut9ouSM128QDWi8vknUo/E6J7rTeP1GUazG6zeJ1jVev1nUK\";\n  b +=\n    \"/B6v+hr4/UBUeLuPyhG7f3tKjYMVC0sqfxDirKZ51qxIYQBRT114hc5Lyw1X2viwlf0pNUFXp5U\";\n  b +=\n    \"jv5ORKIuGK+S7dJNsg00vlImVdeQvus4VsEQTanEd/IX4FLSqFaer4Baz1Ps5bw81dQ0iET1CfY\";\n  b +=\n    \"KmA1igeuRhUCch1q7XvVPIsRgF1eE5p/Ai+T33RKVjoza1de5ocJqXomBrSI+d2BNNcqb7SrefB\";\n  b +=\n    \"5czYOPQW6GfQLVPP7k9+T35rP51vwN+Rvzbfl9+Tfkb8rn8m/Mvyn/5vz+/IF8+61z3L1LPOnu7\";\n  b +=\n    \"fwabvFYAe1CrDDguKm+H/OAqEnQXm1YO4KvyC6xpIee362X9TEY+n46HAFghk0zcF9NtIdoJ9PB\";\n  b +=\n    \"C5ZJXMvyEfMhHIxCoNtEeIvpTBpYi0aaLliT+iF7UW0g/Z3bHq3A/fiOnWDkiK+pDe6XQcLVMFP\";\n  b +=\n    \"ZWoQNRbL/EGPnTaOLfuFRPjKf4zvH09ijezmHr0XboyeUCQ3kMtlvJLLH0+DnVLFRiNnPJLkSHg\";\n  b +=\n    \"yXI/u7UEvLPhXZX+RrIcjNRWjn/xrkkCeMVBMOTRQKTOunI1UrCAWHIhAzeZaA5jqOucbwA0JD5\";\n  b +=\n    \"R2sjJfjYj0sz3wPm4Swb2wHCCNtHFZtHElz+A38hBbgjCvAh5oy+Qsx+6VULTSYmH2m4apORKsb\";\n  b +=\n    \"YtRSAN//D6y4GJ5TULD7SCJdv/nB8GAkr1Nol6WI11P6TK+KiX0eDA9HXN1sQawXtLqTNFtQdeF\";\n  b +=\n    \"75IqtZzZQz1CHpi0cbipf9foFfXsuVk4Y1TdnYmXBgZ6pKiY9czSq9UxqmUCK2oW2I9QUQtZsAX\";\n  b +=\n    \"ICa7awfdRAkSPumsiyPzL5cFMr/mHtBFzISz+csi8/11Be+LA6+Mg+3dAKc2IaF/J1LMpZ3Oav0\";\n  b +=\n    \"bnuirFaBdJ3rHxw9kNW+eDm6S7adDQJ4P8HnXIDFE+ufsiqHuT071kX5/Jcjqo80eei+PDMitP9\";\n  b +=\n    \"olX9mSrHqHzehlSZ4qzN8yNpaA5s3Z8HuCKi7Qs9jxraFdHzKdrC0ONttH2hR077I3qcNLQ5CnD\";\n  b +=\n    \"vgy3H1uif0gaJHjtoc0SPKdqGBbjfwiZka3TY0H6Hnk9iI7I1eoh2ZvTIIOLbGr1gaBcV4IYKe5\";\n  b +=\n    \"Ot0btpQ0SPOdqz0SPFZIZ7Ntpd0fN9tEWixxPYu2yNZmkzF+A2pluu7OcbCFotDuV3HcpvP5SvP\";\n  b +=\n    \"1RQG+atQ3n/UL7xUJ4fKpJ5c+QQLmYO0SKS5hOH8uxQvuVQPn4IdzIcGR6iDVAjX3doPjxSbKIV\";\n  b +=\n    \"Zyy/7VC+4VDeo28OFROUKE8op0Pz248U01jjkdvUobw4RB8V6/ImZxMfmn/zkeKe+QOHPnCIWnM\";\n  b +=\n    \"aSxdHNKlo81uPFPdSd2w4NH/vkWKzJFpHvzp1aL59pLiDVvXxQ/MPHSlmKf+Nh+bHjxTjkmgjNC\";\n  b +=\n    \"UPzU8fKbbSotfMO4fmZ44Ub5DI24mw/tD8uiOw76B6zzeOFOshiDlEv1zcKYk2QL/z0Hx6pOjRz\";\n  b +=\n    \"2SH5m8/UmSIok/hTJSaaf5bj0A1mOo9P3mE0VbTQ/ObjxSp5HAbFbQ4NH/fkaKNJVqIE/Tbdx2a\";\n  b +=\n    \"j44UHazaQuTlm/OODvWRGHprHAPxyZZD8xuOsNP6Lvrk7vmxI0Uo0bgY6x+af+ORoguuFWI8v+0\";\n  b +=\n    \"ITih5V8KYRa78iFwuAYqaqVRZ2tVn+Xr+2TupvYlTNufTHLznUDFNbPQG2kvcwamLO4jlMiBmS3\";\n  b +=\n    \"CG+HNTfi8n3nyo2Ezce2c+xsHeoeJOYvGt+SwHiWPuJsa/lzYRm+TbTcCGyBscG1KFaJjM0k9tl\";\n  b +=\n    \"diQDxg45ohWwPR2Yml63r49gtJ9E4tmkHe2RzDN7PKlVr5uO40Net6xPYJvpHxqewTEv/b2CPiC\";\n  b +=\n    \"tM7CLHQzL39BvnF7BIdJ+cz26El6tLZHAByMt0ewE920PWIYqLu3R4Ayyu/cHgGLamI7H+DS7RE\";\n  b +=\n    \"MRyfZvSpNottp5NNzw/boKXrctj0CJGFje5R3vj816YFq+0LnsnLfItycwL2XeRybwMd39Vh2BH\";\n  b +=\n    \"vu+DHYdjPeiyh5WKNjoqQsFYZjxQXGfskF96Vkqfrizn6S61KQWxEnG6gueIHQD0QuwJJ8RmsRe\";\n  b +=\n    \"DZeB1L64XpunIzxWVKIYlMV3kcLtCttvhW3HTnjnzoRK9zWQX9dpO4WUcmgMqGIJaUmUgvDtcCU\";\n  b +=\n    \"lEAKr+UM/BoEfg0Cvwb0CWpgt8fi2oPKVM+Nkxkkk/sHaOWF7B9jW2AkBYocQpjKxFCJHUgT9vZ\";\n  b +=\n    \"Zvrcgp3hqDb5VgRiG/zw2XcSoWoMvRxkkIaaz4GLBDlgDD2wIqiRsLk6bEz1D8C4NbjjL5l7IY/\";\n  b +=\n    \"fuKt//XQfTxQWu100i05tFdleN7Mu1KO1nWrrs5020SwR8B6hnp3vLG++/3oSDUH4ulO9fit9bZ\";\n  b +=\n    \"ntxH0Wjlu0BDDuXxXcQtgBMls5Ce3m3h5aIuJO7j7maCzARmuXGjRtN7e2vWeXr3BKhlDQKb1Um\";\n  b +=\n    \"/lhZje/tzTvzqK8cd9NmI95POs/q5ZUFJgaqDUMTJwAYZXCZBFY1fGJgSNHEQooa1uqmFt7FwKF\";\n  b +=\n    \"4NfKqOIsMI8quQ6JddCB90yNv5VxijNxIkyS7WJ2+w7fmg8iiZtPfFljRUgw68kRQnKmV9AaSpa\";\n  b +=\n    \"EKk2xGoTjHFinZjEJxjisUZ7MainMMRo9tmhqKszR2VxQ/bo2bfABTvOAgfz1hJwcDQMMqDKo7P\";\n  b +=\n    \"S08OGJPKCMI3YOk8szFlYCFORTIvshrwX7B7xJE4gqPuEIjrrCIKyTiCoe4QiGuMIgrBOIKf7hC\";\n  b +=\n    \"H66wh7/GyMOimhxVTpoZJfixniyDOxl0gz2AJAA6xzDfu9t6T2PUYjgnZdel7NiU3Z6yU1R2mco\";\n  b +=\n    \"OVdndKjtjZVet7MiV5zQf2dhh83Y+3RS49GP37CyaM7jUNtknab9AvZg8VZg95Vto0g8P4Ny+kz\";\n  b +=\n    \"WAQlH2oZlmL08rosajIYwHKnVzcS8PUlDMHpr8FksoQ1htSobEimS6iZwXi8gp9kROjydyCjyR0\";\n  b +=\n    \"9yJnMpO5HR1IqekY+DFwlgwe7MX951d4DM8vdAfKw2KoBjNojEBXwaNfIwdTLx3QXzN456/+0gx\";\n  b +=\n    \"6OICKGOMGEZb9UEXF6vGibeEFoMF0W7fxaHe1AaKcc8Liikn6oD3pY4/UwHdY14CEDUR0BnNcvn\";\n  b +=\n    \"uBanfzII6CQky3tyu+qDOjMvvpM2eduY/r3VmfKvOZG/ohveeb1ksIESjVi7inUxJ9hbRTtqwIl\";\n  b +=\n    \"JcUTTLpZmFv8Euh67cYk490kbPj9d6nPs7liIN9HosvT7u9Xosjtw1dY8B+fJe7sWnt4iHXNjGi\";\n  b +=\n    \"y0HDLTXwAEwvm/LHGCdHTD2Aiz/jcAwJKzPE0j22RytguJCwNHKILsTpTt2D4b5ByvDidj6RQjC\";\n  b +=\n    \"/XI64aaZe1Q0DRa4V/oROx7E/t13SyApWQKbx7WUvAma/+nP3/jvL3z/D6zQCegF2kvO/+If/OY\";\n  b +=\n    \"HP/Vvf+VPfvAAneFA+NiRQ3/6Q+evft8/oYMTwkf+8sSff+DD3/sZCi8jfOPG7/+XL974+CfpkH\";\n  b +=\n    \"cY4Y9+Esvof/v4t9O5LlIJP4RT/ynyHHCrCS3ET++wjteyf+I73K4S8QVUefhnXw3Y06RLwenPh\";\n  b +=\n    \"NaolXfCsD8/WZmx2tQgz2UfS3uGry3kdZ5NWEXhsJxlO1jR2HOBhxbmRQMTD4Ayw6ySla9QWtkN\";\n  b +=\n    \"aJXsL7CBtV4Gc5gXCi7bici3v12qGdw693MRTyO+3YdcbqyuA48eLSJn1xIpc3iu8CJVUI0G7Fo\";\n  b +=\n    \"iqL9Gg3Yt0ciyRGs1//CLI1k+tEqWX1b1LgTWvMVWcHZUBesmLgMVlI7pG6+iGD2+ocDrqSTx/G\";\n  b +=\n    \"995sanf/fHfnKpR2OAzqLzf/biD3/vz//l1U/cTWMA4T/+we/57eMnP/ujP0+D6hoGyQ9+4T//0\";\n  b +=\n    \"Xd/9EdO/wIRrsgoOv7v/+LGjY+Ob48uIfzJj2IU/fGN92yPLkTuVk2HT300gZPsYLEjQ/R8lmoc\";\n  b +=\n    \"d6Ju4h3quPwnzlxXMpk3Hap1Ry4QaR56pkmHIFqGfi8FKEz2fFqE2e+kshnGlJT9VNpjeGruGgr\";\n  b +=\n    \"faKrTFtE5jrIz9GV5+tInoC74aI+luzhyltGjvbB8jeiqJcnD6lxDTIMX+NCHwQY7ROhUBdlvyo\";\n  b +=\n    \"lcT4uxO1QmYIUEGohdqDjTXhTn15c//QnDfyhJuR9ymb3/bBE2yDjpZv+xKeqV/JOKkRDuKM9IM\";\n  b +=\n    \"XO9BqpKza8s5uci8x++81uwDjpM9hPN8Q7nIOlOId2p4XR0EpTzmuaummIGbUvdusACF1tro7U2\";\n  b +=\n    \"rtZGay1FtLU2t6o1KkslzL2u8Fq/G3WkXlzy0/atU162DfJOaoOlpX1lWqbZR5vlJD+ol+S5s/x\";\n  b +=\n    \"niziO0YlPSbRy72QfQMHj0zQL2pbFq2TRDzQT2pvIJxA4UB9ok+G6ir0NpztpNQ7f0QtsHvTBeX\";\n  b +=\n    \"rrBzwVsOKtYW3Z7P1pbh6H/ho20kUg3pFQ9+ynmUulETd1Qc/+INyJjtWfszV9B5HwWh6g+jOo+\";\n  b +=\n    \"FJI231uvt8Iy6uIuqqf0K5ato095LZpvMPpI9pSldGe8hXqBZpuwgO2P4qQTvLRniJiicFs1WFg\";\n  b +=\n    \"eNa5NR2WW/FBnq/7GBFPHnRoTTu/kobpgeb+2kUrz6e9JzDqemy/gP9t+cc9FnpF5bEDuXmTmaJ\";\n  b +=\n    \"tyZPQPenNL9H/sncVZrpIyqdwyd6bzz9I+yAiSCRgIzT+fRKfDcQvLRlNsE8SpEMJ7C/slwTxUA\";\n  b +=\n    \"L5DYoKXdRbvvs4RKZFsrPM9pTZd5RngveWJ44nC+VvZ/8XVeB3g3ey2Ua8hwK/8imaq99kgn7Tq\";\n  b +=\n    \"U6e+JRO32Nix/GBYpyyhvh7/i2HP0g/AJzv/QUgq/MxBMbybP8+lpBr+t7+YoxxhieUAtSd/Uyx\";\n  b +=\n    \"ee7jGqT7GI95vMTMY8qTWpgFoDO+ZfGlonf4OFV++bcDDOKkXDn4rWCipFz69T9802M08tKyhdC\";\n  b +=\n    \"zf3Y+gtpxP+UYIdCOE4qu0JeEXjRxFL1famq6iwG9uyStx4lkSjjobD82DVXHuITm47HvbWh6Kg\";\n  b +=\n    \"NC+ILYrVGyxshL/yXWaCoZBym+02/ME4N8sD8WMkYv98LSEu39s+9gP6jcKUUL+rjjuDnYV0x8g\";\n  b +=\n    \"LWIbtwQ9Po81p6DTmze2plHj00XUAZmhFmRFze+HfpK0IKFbkojb78X8nBWimrTtlXu/buP9KDD\";\n  b +=\n    \"xZq+gmuSN6iC+PPtfRZolic+TWvZ7eXBP33VauDzyZa1vPPx+fZS3niJKpOPZZ8143a7zmqf0eP\";\n  b +=\n    \"T9IsdnJuoq/rr5k0/o6Jl+brDTziHN3ILmqCU2Xx7fz9DnvuL9blUGcVdn1Mva5Fb+gNqF4ntdk\";\n  b +=\n    \"tKApwmLkL5+bNU4s3lic9oicsVeitnyouWkIPFyyt/8qreYj6D+H551cXjMPnsn75qDWu8n0m4r\";\n  b +=\n    \"uP76pWGAs3zNv2/bIYdPlEIMsW44pZD9o2LCxYStBkNmDrCLMII7AFWAqPkj0FvTFT1eMXNo/e+\";\n  b +=\n    \"VEzk6/YD+JZx11k6OiaA3y0G/KbPHvXhnulUPS7zRaOGwjuxP88sBPt4bi82XBQPPv2mjvReh3z\";\n  b +=\n    \"uWovjHktm5SdhjX+Ln9TMYuB+a3Kmp7TR65QMQhPLOVVaiUFX2xWyPYMTx4wqaylAluV6J4IlLk\";\n  b +=\n    \"DimXj8WlBkbPv7SGV2FeIptJN3BBsX7gA14SiQe6Ar9xNuARqZrQohV37Rgv2P/kXJw6/Qfq4Qi\";\n  b +=\n    \"i0guXEN51pxiRWLugYbznC1cGPxtDgFYLHqrlFpJhxIrvM8wNC2jYFuZHRZyrHTn4hH/eaEB5I7\";\n  b +=\n    \"kJPWKDueNxxIrtdftb7yQaRVyxO4Uj6MbXMkSO6qSbRLtBqxB5Kb3BIk9y+aYfPAJA77czvhn++\";\n  b +=\n    \"BcBu8azwQzvbX4zHTn8QjxwX3A+FmaHM/EE7hwvyBcBJa3A+EGTS4Hwi70N5+IEyhuf1AGENrG4\";\n  b +=\n    \"P4DrmPIEq+me12cFyiIdzZjwmjk9/B2P2w4kWTckpcaE/vz7uOHgsdTtg2+fRU6BnRb/fpXaFPE\";\n  b +=\n    \"n3K0XtvpoRMnyL6xv3YfIA+9mZKyPTNRL9tP6/Pguo8JfSc6Bv2W7hoYuTNQp8h+uR+O0iIJXKh\";\n  b +=\n    \"zxJ9vXq72Ffc+WZKyPRtRKd5606m40o67hsxmErKrk7fMU8W9OfpoiNsHaPp0KJ5xzFy580s/47\";\n  b +=\n    \"RViE3mB8FgXjX7iJCbjc/Glu6nhed1aMhOh/zoifr0ZCnj3vRU/VoCNkzL3qzH30c9x8Qvk94Kf\";\n  b +=\n    \"J6ikSE8jHUxohBQm5mP0FTZPWUYLZIOcFsPUFLL5WQZFvR5iTb/CQ6bIsQxwRoGC/qTS8PDTvsY\";\n  b +=\n    \"gjDZbjEMlxioaZKTYWaCrWr1K5Qu0LNlJoJNRPqpFInhTop1CmlTgl1SqibQaXVFqTNIOSshmjy\";\n  b +=\n    \"Nsid46BvY0IKQgthxqGGbDPMmwjPiN0Jwoy0nnfOpaZ3QJEFYG4SMhYJhBQyLRlZa9X9+DT0sFf\";\n  b +=\n    \"0FBk7IGduDwfizO3gAJy5/g7EiOvtgJu5vg60mevpAJs3c8iCNTMnOKBm7nYH0jzLIQvQvI1DVz\";\n  b +=\n    \"Q0xyHr2ft+Dlmv3qy/4Tx6P8whizckRsvWk/e3cch68X4bh6wH77dzyHrvfoJD1nP3uzhkvXa/m\";\n  b +=\n    \"0PWY/d72KFq8CjfiNN5i5YC7FjorMciqQbtWmk78E7evSTq8T4Z7g52AuhuhsbqmTZ4fWYV7c7/\";\n  b +=\n    \"z977B+l1nWWC9/d3v1/dV1JLaqnb1v0+NEu7UHb6DyNpHG3Q1Ua2heOJoFxbSVVqy1ub3XJ9ck2\";\n  b +=\n    \"lW1rFNSNbnUQBxTFEExtGOxhowCDV4gbBmOCwBtrgBIUYImbEYCA1CNaAGByiYZ2JJnHwnud533\";\n  b +=\n    \"PuuV+3LHtnCDvFluz+zj3n3HPPOffce99zzvM+j2VWAiQytYjt1hg7KvyQYCuUfsI15y8jmVoey\";\n  b +=\n    \"aqJLT4cqRcGE8f8PdbEGROtJcTgXWpimRwPjgYdleoxb8KWrDWcEIN9AjHsguWTUjWteu4IKoWG\";\n  b +=\n    \"O60Ogxo3d5XLShz9KAg7GRzjqc09uta6bfkaN5ustFdCr7CTXEyHMHDkcjECDlfyWY2NTpY9+qm\";\n  b +=\n    \"Cpq6H7WAcopncYuoOoKWw+ojpBd6xiYoMwn35EAw6/l2bx/oG25+5hqZA0khDGRxraLZuQ7M1DU\";\n  b +=\n    \"0lrtGsbN1m1fm6cvdg1XaPECDTFV+dnUH3z1pRKgbFlUBd2WBTTPLDCG8P2BQb+FmFlwdsik38K\";\n  b +=\n    \"MO3AzbFZn7S4dMBm2IrDQL4csCm2EYtqAFWrc1LEN/EbYLBSMvI2BQ5JgXGFN1ubYr2O8yrgDnh\";\n  b +=\n    \"mWNsgbaLv13ieyZ+qx+/V+ILE7/Fj98n8cA3bnbxnXdEWpNpE29sgY7Emw/hOyV+1sQbW6DrbJO\";\n  b +=\n    \"7Jb408Rt92+RdEr8T+EnfNjks8XMmvnC2ycw7zEuG8btM/OQj5YzaFO+hq9dAecUSNStolM+z7x\";\n  b +=\n    \"4e5ueEp5KRt4tllruPYw7Lgkl7xRRrJGFtqG2/3bTIGsk9oDa95KKZXJjkrpc81UyeIgaxTp5uJ\";\n  b +=\n    \"k9zih1DFNjcZJpTMdSCsxWxuWLICLdWxDCb8Mopa2uHRp5Xqgu1XajTsBMk1PMsBlZhfoHeH7AZ\";\n  b +=\n    \"xFwgZZr5zizg15kLjN2rsc5cYOw+jXXmAmP3a6wzFxj7To115gJj79ZYZy4w9l2Ijcr8nNgLJuY\";\n  b +=\n    \"wKKEwF0B8T+0FRGS1ATHHCACSys45sRjo60CLghEl1i+KL4XyhtgJYLOAAVY7llxNXHcSWc0fxs\";\n  b +=\n    \"W91iFSXEvtVkGsm281YbdGc8eseK/1NK0TxAnw8VhJyBXhb16FjDKpLE14oFH2WXAHCAN3FweaZ\";\n  b +=\n    \"uPNy7TnR7+3pmAPR/VVERVKPnge9YUYriUxVxwLc92qWFuVKBW417JkVHwqVpL2VIIap0fCBW7i\";\n  b +=\n    \"vFanegmpYGZZrusKZtZtN9VqZviACL11R6KQh6nmta01Z0Em3qt5Zjt+tbWmGojCDmnonzUMTVN\";\n  b +=\n    \"DqSSKVUZvBEM5x8Zea4FMbzyeMYk273FslPXxk5hSE7lRWdmzedCxjCFdv965vDlC8nqE5DDkdW\";\n  b +=\n    \"wstUdyWa/X2vVtbcOqOVtnNO2TbqBN1BiY0lRN1JuJVTfeQylATtAcptSOvY6pnYzQ3Buh5tHTG\";\n  b +=\n    \"9IGWKy+Ge1G5rZmNm3vjNwdlAqcaWkF7F3FhdjVUd1LSaOXkDuSU9DYT0fuwWmMCDxTJlOOP4Gc\";\n  b +=\n    \"qTfeEol7IzGwD7JfwmoHL4lvtMJbqMsQi++Wc6fManfKVu1OmdfulO3anbJTu1N2a3fKXu1O2a/\";\n  b +=\n    \"dKSdqd8rJ2p2yUHfKWLxMnTvlxtqdclPtTjlVu1Nurt0pt9TulFtrd8rp2p1yW+1Oub12p5yp3S\";\n  b +=\n    \"ln1Y3yFnWgspIwAvEyT8lD6t8FMH7kmPoTOW6oxJgvjKDk1BNLXrM+ui6VY0wNBORgzxFfYB7xC\";\n  b +=\n    \"tcEnsrvmWcbsgoPNS4QKue2j9jjnZeiEu9Q6haZ0KmQyqoalIJESxo2m6sQ+FlYSizBt1qV2neU\";\n  b +=\n    \"Tpi25XVsyDJQlt8PAp+KFTBlU5bFBd72EJICiWjw9gdlfcu0W1WuQ3Nhq1/9PwknigTlwzOUiMH\";\n  b +=\n    \"zAdW76CVEtR8ovUDXnOl8QekJeqNk+IMqgGha8UNLce0PSg/O2fKWxXJmsdy+WG5bLKcXy62L5Z\";\n  b +=\n    \"bFcvNiObVYblosNy6WGxbLYrGcXCwnFsv+YtlbLLuLZWexbC+W+WLZWiwzUwdX4iKcN7/Rss6bq\";\n  b +=\n    \"23LYDg3Kq4na4mt2UdnH/21gI6aqRDYMfeHW0Simo6L7wUNCfmgzUMievEYvSoUT3Jz0vfPj3yG\";\n  b +=\n    \"8zklON+LAi8m9IyLhPxM+HoZS0gssbDF75BV/2IiLpkW7XA1qWnQXhKzxou5xJiX6hjlY7+7jOC\";\n  b +=\n    \"v+qBCcZzP6gOWWpqTXGFXxv6YY1dOiC0tY/iqivxBDGdVwEzN+6BLDKo6qxJE/AF2xe7oA7KimH\";\n  b +=\n    \"BnSx0ppWdCx6jhuuYB7ZrrQaNvyANn4hqdUxBADF5l7Zw7KTlwWj0xFfbEzCBMkaTikwk53ZMD4\";\n  b +=\n    \"Xf3UfQZAj5YHeuNaU8yScWvxHXpqNj5NlIuC74/diz/LybDbE+83IZVIZGZtuRCu25JRTDts+1h\";\n  b +=\n    \"eLDfxjt5/sEhBcFi/rln5ggX4gUkxHqZs9lmeEZyvLVITnewn9OFRSjSCbY2R+oc6XyDtbt7ucK\";\n  b +=\n    \"6XzTTrNPOOZHdIY6ET32iZlBOqic+UTsSvtFZz9izqutnkFa9gIg/a5x4oV2faNqiPpOfeCMqZl\";\n  b +=\n    \"ThZVcFtvJKXL3q6KfZg13tmx/AeHg20QBGCAPmdsOrM1K25sg87vj6f6EVTQqQ8EKoj38po/9+C\";\n  b +=\n    \"Zkav19COZ4Ihnq7zahnqMBgZmhqd3RMQtO7o4ckNLs7OiGhcne0FEpw5+7olAbn0I0S3LU7eox0\";\n  b +=\n    \"V7o2GKkQ4O0SyrEmGKkQ4D4JFbuFb4vXfqeEprEGGKl38LskVGLtL1IhwPskNIc1v0iFAN8H+YN\";\n  b +=\n    \"wRFmPs+Z3UrBg5n3OnV8ygNZYvlDx9L3iTFTdin3Queh8OOBb7+nQWELmdzkccFw/FQ5akD2wmo\";\n  b +=\n    \"smnHOvpQNtcC6Ah2bOemTYXVh5eKibYPBtXKDUrmjHixbn0QXoniNgJlfdhSOcMRqL+2jZXhjGR\";\n  b +=\n    \"xmEUvrCEVl7XqjC4yappPZNiFxlcHQIv6sqOs7dwbLD2NZRY97lVXhsAE1d85PBXfMj5Ua3A/DR\";\n  b +=\n    \"E6zaOTAQfPQc3grhcbKK7DhWbjBz7uOLpvV9LhnyHV+au/Ukbma2OzqLX3MfnyCMZXd0JrQ4NEs\";\n  b +=\n    \"kCxeDwvTmHuuFgLRJOZhA/HZ5dqggcr+EE+wwvF/COizNG6e3h8PShKb2cDCa0OweDkET2rlHxl\";\n  b +=\n    \"3kBttcNG86JDy+IJ5QPbwketU2Ygk3DviWu50EmKazxu5X6t8vY/017ldm+39B+z4b7/vE9Dpik\";\n  b +=\n    \"6PmNr6Z3m6N9bZQbcoX9QKA/1DjPmqq1v3JVpSdLPBA7wfIt+TXK8GXmnrdLfF2KVvEh2d0eMkE\";\n  b +=\n    \"3swsj2CjS7Kk41lSQUyFtlApUXxswGtDByZm5zZE4hcXaXFeeup202bxZ98J/J3Gn70MTuHP7Qw\";\n  b +=\n    \"W+DPPYA9/dp2QfTXzZ+6E7L4lWFLizpz5U54Y2lU+AnG4hEeEzwlB8Ay5UTgsROye3e32u2JUqP\";\n  b +=\n    \"COpuvNtBjVmvCOinrhKkblet5RXq+kxahixzsKHh5urPW5XWjKhTa70BYX2upC0y60Tde9sE+24\";\n  b +=\n    \"dwCuTnM5HrbuYXFYXxHQDHUsjiHVaJpxBlrhFKp5STjtiLO2GkUUi0nGLcFcdkdAWVWyz7jNiOu\";\n  b +=\n    \"dUdAyBmWqEzcFOJyaEUhrsu4TYhr3xEksv/FuI2IgyoQ56nTx+8IdjBUmNCtDOUmdAv3YJA6wxB\";\n  b +=\n    \"StzOE1G3cKUfqVoaQukW8NUxoMxfXkbqJIaRuZAipGwgUQOokQ0idYAipfbgBM7XLEFI7DCG1DY\";\n  b +=\n    \"diprYYQmrGEFJTQhqQKtwTSI2E1cmEKElWW95lulgmi2W8WAV3dX82DyfoPdjy1RAxA/pTwpAoQ\";\n  b +=\n    \"pmprGDqEb5xXwWJHZkjDJ2Cm0iCUamXkxw4v3gpXH6QpbWGFGCtmnYZh7dFL2d76M7wRTl8RQ9f\";\n  b +=\n    \"lsNX9fAVOXxND1+Vw1MtOXwtoojGYy238HrFvEIuAZEUOdWQSKV+Y32N5xLqyVJrpFK/DE3Jkmq\";\n  b +=\n    \"kUr8MUeqXoVLWPiOV+mVoTlZMI5X6jdU5bV5Ct+/m5oI4p+2V0L7d3EAQ57T9Enrnbm4SiHPa3R\";\n  b +=\n    \"J6125uBIhz2mEJ3bebi/3inPYeCb0PloW3vOqY6eSzJ3+vqVChCGsC0prr8SUKLIQidyHUbQ+pE\";\n  b +=\n    \"mvumI4k7gKHgaWWuRDbvFcoKx96co2BEj9Z/pUzieQFb3aMocdAU8XP6lYyIufy7HKKxVZP9u9S\";\n  b +=\n    \"Ksqa3Opqy1LVcNKnk8PCZ1Fr3q2hjbvE5rtrdP3Shd3Qld5p0NRx1qQjGGO8Q+rGhygQatUE7QD\";\n  b +=\n    \"E0HwiaYzyJ5PGKH8qaYzyp5PGKH8maYzy5xJvlNtnuOPkHendo3cigC+RbfRDKsc84bQgRSi0q0\";\n  b +=\n    \"e4N0U9XFow1L+Sh+FJQoDE23h91alxliU6eR2Z2BBGcZJmrbzd6fb6E5PFBmFIeVsQitTfrlEl+\";\n  b +=\n    \"mwHoj0RuByf++Hnue8fVb9BNEDEKSeeKSv5Rz1yM0UvTqe9DcK3ksvMet0Cl12Bg5uXV7yV8i6+\";\n  b +=\n    \"iQpO2gK/LQ7+0foFnnIFfu5NFDghBSYWV7FOgS8/aQv8zTdRYN8WSC26ZoGhFHjJFfj5N1Fgryt\";\n  b +=\n    \"lWEG6H3qegAxX2qqWVp/RvckZT685o3OTM86uOaN9kzNOrTkjv8kZr/zQ+Bmtm5zxxTVnZDc549\";\n  b +=\n    \"KaM9KbnPHCmjOSm5xxYc0Z8c16d80Z0U3OWFpzBgAddhxbl5niJ9iD83jtnGqF+UkspN4Wl2W0c\";\n  b +=\n    \"mKP+bQJlTWJykXQby56YJjUEdHJatXYbUfApHOPiAyMoOsj27FV/G6u2J1Y4CyCjodhvVSD3aTQ\";\n  b +=\n    \"mJWC6fQio/Ui4/FILKLCq4u8mwIXpdfFwjATxrmxy2FlyORXKE6mCgxzmFKywuJTZCpPJHSFJcC\";\n  b +=\n    \"Arp+YxVX/vbamjdZQYwzzba/4VFrTQWTHj4zWi4zHI5ut0ZXCNlqTCKnL+PWazUmsoISZ3hefAM\";\n  b +=\n    \"9hUhM62GFSixnUKga1fEGtW1ALFnhKBZ5EgadN4IkSeGoEngyBpz/gCQ94igPmQ0+WmrJ9pCuUf\";\n  b +=\n    \"pjlYzyRI93ch0MQtEsFNFdlx03zGNq/QI6M6jsWuuwjPVXByrH6Q+OegfeBW1iqOJXF4pfmd2ck\";\n  b +=\n    \"ty9102EbGa0XGY9HNm+f8rPAu20Yye3jUt7cG9xBUd3r/jqeQkABc/NQ7YS5QPISYzVYSQ+uzsO\";\n  b +=\n    \"cFF0vbnGYQRp5br+0K7gOFQnBBheHy6SRVYjjVpsZ7xLX8rEyY2ZFmbFfZiy92ChTuXKM+YPVZB\";\n  b +=\n    \"y17ebtMHJOvsla31/Zg3PRTfdey4mtidzXYQJgAbJt1KqTRXL5vb67JI+uWHI/7+rYu3CJkfPmH\";\n  b +=\n    \"fMXtmJP4mjsorT42Iu6wChjqjq3Xyca7G3S2ijdm45gd8sl5BBog8jf+WcUt4u5s/8pzcSeA6pg\";\n  b +=\n    \"LLNEyR55JIgCHwNho5ZivR72rmNL6ipRdl9brgXcQeQjMmyUXCOQE+yutKlWILVAWcKcgdL1WE7\";\n  b +=\n    \"mpjgaba6dr4nPFZpQwwXMMxJIcWcoahHbHFeykXezl+ojVD3Dn1bd1rxk+1IBKMhGdCCDGxGpqX\";\n  b +=\n    \"oqG/bCqCKZI4sTCGQ6Z2MBG6GTbVBcxFDH1rz5lF5uhZN4iAt5hsNB31LGTA971RB6KdxCmTQT3\";\n  b +=\n    \"+HEhijow6sfDCuOaqoAGFUf9nSwITpZphAJMJ/V7+Q3FVoBHW4u4ZRUZQIw2HYsEMFqMgyT6o/o\";\n  b +=\n    \"EAktgLK7yBMiewJVArpUCYgI1j3EZ79FhYAO+agFHelkAlKVCYhEJqCjMgExPXW68HkoO+BOKv7\";\n  b +=\n    \"3yM1L2urveGQijsIAfYTtmvbbgt6IjKfQvYe4haNNawgnpLVwwv67+wlcduH0BcYHyWU+46n0We\";\n  b +=\n    \"bkFRKQ6eI0FH2kNJ3c25AG/ZBXHVDWOedHvs3lZWkFTYaIa/jGbKQPc4SOi45MmHoneJmjy1tVz\";\n  b +=\n    \"E9IUn1D82g+08A0QRNb3SoxySgCzrSxCX8F4ahbRSb89YCGUwUX0HzGRODqpOQCZ0Q1vwipFXy5\";\n  b +=\n    \"AiTnaEpcYoiYZhvDMuiymt1GNVmFLvs4jIPU1rW7Tl0lW5omQRi1vBolXk1jrwUR+b/K1lil56v\";\n  b +=\n    \"fg3+dVHsSZCKdQzPw9L5x5cHaRt+wTq0k0fGVJDqqJGHu5CDGsNhwBKv1AFwXd8lHCHayaDZk1a\";\n  b +=\n    \"VrzweUbYjFpScWCh5/9MRN2Y3IjYvQHxdBiUcStRz08QgXWGPvTzp1iOqKXumf52HXikLI7rlAG\";\n  b +=\n    \"YgL6Xjs2wrx6Fiq7Et0zmKEgyy0ZMGD2QWm4L54a1m4FVjW82iwJXf9V0rC20wAx3VFehYK2CTR\";\n  b +=\n    \"bvyV3PJe5boPj7m8pKCUrkfrnYDiUppGpDqP1yMBd99DR8wtcA3HKt5jPnkLoxRZ2IpVgCBkCPi\";\n  b +=\n    \"ajlcjx0bOUh0jeTLGRS7AHClq/WqIYoagDllAwjui61RRHZt5sdrZmtL2U6QjNSX3eNI1Tbo18I\";\n  b +=\n    \"5+NBSGqQuxcK3dzt3sZ2JrmHO7N7bGOY6ei62BjqPV2BnpOHwhdoY69+1jZ6xzRzp2BjsOL8XOa\";\n  b +=\n    \"Mfh5dgZ7jh8KXbGOw6/KIdl4DpM1r3o2N/ybk6kt94yIUW28xymR1obiDiX39yzYaO9T4aNBi/L\";\n  b +=\n    \"oW3xU2GjxefDRoufDhstvhA2WvxM2Gjxs2Gjxc+FXouFGc0+X/aOK2u++dAvt8LspPk2Az3ybfI\";\n  b +=\n    \"qJwAeW4fD1gw+o2VrpDNn7Ke9TT/aXXJNhlWyUHNMku2heLeQZhT/k2hXxWoUODrR2DJwms9A6H\";\n  b +=\n    \"OJthEBx9wydHyboc/EGfpMnKHPxJlZxsE25i9tn0vUK43Z6ILtcYlm4KBs4XsUWr3BvNKpSYcN+\";\n  b +=\n    \"aOUsxKPUFUYLMyZ9yS6cJkv9DEJoRzskWGGzzASSryOqvjOGdCEhPgSR3ynu4ITYyFgwldmQkyX\";\n  b +=\n    \"YQcVLuLktoISmNY4EItrIKxqADwaW2zQVo1IsKKBFxROKrmxyfSLVcFZO2R5YumEjUaJdxjeOwB\";\n  b +=\n    \"AOCsDBwOBRwwCMsKeBJuWKJCF212NRFzRXou1MNbWIWXYQy0xZZ2nY5fpCqItwzuC0q9DUHdaZD\";\n  b +=\n    \"/xtuvM98XvOvPBVwYiuUIkXRVpV8VruqolldCWZGNdlcFUXKerrHZUsG7vBNI70nWcd+YCNoOHP\";\n  b +=\n    \"8aVqQHcSAX14crWIQdDkbZeV7qhbfpG6Gknu97lpP5yxe5fZ+YJJX5lkNRDEKwgOkwTId7n6USo\";\n  b +=\n    \"+KfTGkKWu/pcPoODsg7iKRnEpOskgxd+sFcOsmcz3wbzXoUXB8z2BEydAZC4lCIS2/wKzSA82SO\";\n  b +=\n    \"xv3GU1OZ2rOZ2LLY6bPhY7HyY6IuLzvzG4kNXkKlHSPTKzXr1gqfsXQK2UmCk303PQneJRC+R1J\";\n  b +=\n    \"dI1rmE0OKUqbyr2FjzwXu32F0IDhMhr5FjoCo9nTuC3zDA+FGdgXwoPu0zA5OWo/eVgKsnw47z7\";\n  b +=\n    \"0KF88xrkJeLvEtjjQ9zI11jFKraBJcQutqE4nl4JWaIJH4hdi++2H8lxv4rMfZfiUlzSYedmcor\";\n  b +=\n    \"0SuN2biKQ4CEsDC3yuQe7RoQYQD8p09mIE8mHPDWPpnGfBEjNuHzSJ8hhCAzJ9ewT2bSeIkFCtc\";\n  b +=\n    \"ETORgX14syZonM268xAjVsW8sSw9Xpncq3bO9XrMkXqNMD01ykSe2z9yah6b7cQBNpx8R9/VcPM\";\n  b +=\n    \"42iRd7WxzPpsSZvSP+Z5vFp70rbmhbxLW9J95oW8XDvS9OadPi6D4hvmnbxN99UlzUtovbeyGea\";\n  b +=\n    \"jPi/b5BHNZmxQl+o/itAX8QWs/uE8Nbm2CNHeLovRF6K4Is2djAduxwgIxbxO97QzlbblSv8wYm\";\n  b +=\n    \"5BaXc1bcwAtQ5KvfegNLMutyzohH+GS53XqyTzYwKDMu53Z1Di+3WV/4iQZ2ZXsNHBE/8X45bT3\";\n  b +=\n    \"W+g3My7YabCIu471yq/V56zWwMjUYZSv91oA56ZZbrOOcD4IpyxrDssU5knfKzdb7zsfI7Cxr6M\";\n  b +=\n    \"vmc8Agwbu4XU5ZF762l3murBEzU/RAn6OOzibrB5gT5ZN7p+wqpxoQHAujubWG0fjO5iGALGOu5\";\n  b +=\n    \"oK5aTqaC9ym6WYucJumk7nAbZou5iG8wspN5yRGfMbb55yT+JyHqslqr3GB3ojbuIfPScS/zIJ4\";\n  b +=\n    \"PLd1sL2EJ7fxYaSoq+mMR8RFL3tEvPPkt9TfWf2d1t8p/S30t6e/uf4m+mteFo8MW0RZ8TYILOt\";\n  b +=\n    \"No7JOECR1AgSk8rqI5T0RywsiljdDLK+EWN4FsbwEYnn6Y3nsY3neY3nQ8UgPbtU3nIyLTWXrXJ\";\n  b +=\n    \"k8uDI09c7gJZrBhTSDf2kG59MMnqkZKCwy8FtkIL/Iyln8uQV/bn2kbDkKKHDS2LF5QprvwF/aE\";\n  b +=\n    \"Q4apl3igGPaOQ5Wpt1UE0xJhzlImnadA6xpJzo4m3ZnudEds2Pdg6APBiwERer3yDaershGB7lh\";\n  b +=\n    \"/raHSN132lvtsd7qjPVWd6y3emO91R/rrYmx3poc661irLc23LC35J0+yJWdNZWnNH8Hn80N7+A\";\n  b +=\n    \"TWbyDz+HkO/j0Tcjrsy/v2568oJXjoyOfgLZ8M1rmI9Ndzc13MgWA81puzAQyyxs75peHuaNvez\";\n  b +=\n    \"34yGGYhS6m9RHTbmVOy0+Z+PB7DvyNJJlXXX7gdvNue30Sk0/Tn+FHBphV5vaE66a4YYfcVh0v7\";\n  b +=\n    \"ruNDWDuf9k7DOIwM234rQ8aO/cAEM5d86Y8ajrA5i7N/Qq/x/yxVfgusIe1D0QHzJTAzHerz3+w\";\n  b +=\n    \"evGDJshpoZzeFRjs28OrMO07e+Ir5hccqi/huL0nvoTf9I7g3+dY5q4imiGDjMLLMDXyA3tPH1g\";\n  b +=\n    \"yjcllMzo/0Dp9TtOrj0CdOT9MUrPQRJ7yI7uDaAwno0DVWJn040Mz/JW1U9AjJlANPpuDXOIvsI\";\n  b +=\n    \"X+BILR28MzqKT5ML3A+cnuaDWnK9UZgDEuGjN2QKRAffbH3urZSbc6VoEqQtjV0iq4e6ZMHzSBX\";\n  b +=\n    \"/1GAMlfZgeNB/8WwPAmx6vN2PqCCIIx78DzuLQUHZoZpsX/CugkSqKpbMy4MySlTarVZiGtMi1a\";\n  b +=\n    \"YnZeZNzZ3DqlkBD1TL4nXs1N8n8bXsQeTPqdLAVZ59iMOTSqRc8F+Iz8WLReS4n6u8jcPWlrxG1\";\n  b +=\n    \"16Rou4YaMCLX7Trvuu3G39bgsT9dMwTUHbw+fZIdrIUtvppB4vC7s6v/cUo1J/wmMxH9QPfMXlu\";\n  b +=\n    \"btrbcQ7XvR1CS1ZC+rcBpF/a5xo+lrWbjtpJI7RDuDap7Ii3nB/c17nCQPlNbIz4TgjVjtOdEdP\";\n  b +=\n    \"Xac29FMemRtUqhJD6uCwhx7hUncC8dUIRF3gNC7IiuDRUK9cHTjC0c3vnD0Zi6cycJxo7lYgBzE\";\n  b +=\n    \"qIRcXXwcE4eMJxdIXYVUqjCeFGrSm2o7dpYbVTgTNqogVw9sOcGaDhhPetMdEFm6+S/BHSUjN4D\";\n  b +=\n    \"4qQTi3ZCIBxu47CI+glx7GtC5agrvVS6HEWsrfi2YjgFla+ZhgNiK88suOs7crg69gNma6VYkqo\";\n  b +=\n    \"tmqhVV+9SRN6r2HxE/3giL0+LHS88kK0f9YuDkqC8FTo76cuDkqF+q5ai/WMtRk+0A9rSZzYCAr\";\n  b +=\n    \"AMSmVIIJE1f+PqVnK3Gqlw5jIyhb+ZU28wcaKuZsGw2U4tNcMWA4uYNz6LGCvGeM4uVsadLEd8z\";\n  b +=\n    \"n4uFxe6/z6LsZH5D9wsVJFFnidabdb9o/W25X8S4tTkpKsyNBn8F7EAZBGC+AJ01BkhEzgwuUMK\";\n  b +=\n    \"9go4WD7uJbcXYfc6VY6/z5LjdOXLMOz+OXc6NY855cewUJ44NN6X4kFDfhSZcaLKmEHRzuQTVDh\";\n  b +=\n    \"ZWjFm3j+4HxYHp0/sI1i8OFCYUMZSbkCyAJAsrta0pc+1hZx+9GTo8tcUQTs0YwqkpuTZxqjNLS\";\n  b +=\n    \"53n7KNzRJenco2Sp3YYwqlwL4DCwUptwZY6OdpHX4seT51kCKdOMIRT+zy1ZU51xm6pM6p9dN3o\";\n  b +=\n    \"89RNDOHUjQzh1A08NTWnOru41GnYPnqCTPDUrQzh1C0M4dTNPLVtTnUmdKlzt310LJnkqTMM4dT\";\n  b +=\n    \"tDOHUbQyVp8sNJ85hL2xhBKeQWedCscO5UNzqXChu4QZpcarsnip7p8r+qXLiVDl56hx9KH6gFR\";\n  b +=\n    \"b4zl1LrA8FsTz2vddwitDN0lyZTnzHCIERYfOxr/4WE77bBHfl+jV0n44X5C3RTdANkmbeNhNOH\";\n  b +=\n    \"n6oPoSAQDLTRk+VXimfvIusOvKnWHFKP6rS9UNFz8cOPd/MvRyNxiTeLVLfspzU4H//TKcV/2pI\";\n  b +=\n    \"SPsLiTpuyOGLenhK3Dou6+FjcvhFPXxCHUb08Elx+nglcU4fqwm0P7XB1rWhI3vjucLdY1GQNiF\";\n  b +=\n    \"x+qOKokPND1trukt8Aq7YbpI9RHEigDNA2/cccJ2J9KLZMei6nnaMI8woXe890eyYJ5sd81TY6J\";\n  b +=\n    \"inw0bHPBM2Oga7h2s75oytJLFvurvd8SoU6rCDEs0G11cT2lfdcmPtPDCM1nSTeFl43UQuFKwnr\";\n  b +=\n    \"euFgX89P2VJ3UiQUMiV6vHrXEzmMZSsP9E1agK8mglY8VJ0ZJiCwgBboUoq4gTqnTy9E6d30vRO\";\n  b +=\n    \"mN7J0jtReidJ7wTpnRy9PIwSeMUGrtrAyzZwxQa+aAMv2cBlG7hkAy/awEUNgBsETBxKF3IDkey\";\n  b +=\n    \"DhA0BhFkF4vUWQd+tPoj8g9g/SPyD1D/I/IOWPQDKchhZAYzVUDaFv/F69yidjZXwScCZqpcjO5\";\n  b +=\n    \"7VMyQZ5Jxt2BaB8rItZBaYbLQkmC1itwKbHaqIrkwYi4vc5AAwsJrmelFC5UDz0kXB0luAfa+Gk\";\n  b +=\n    \"p+6GNg6oWTdPBUqOfYozhAWnzSP6CDs3nCCkioe5uRaozfwkh9Zmxx6yQ+jszQ5GjOZQZGnGccm\";\n  b +=\n    \"LJE/YfkmVWRs3jAYcP+WBMrHqnJhsVo6udglbhzvfPPU/btW1BYej0tz1pHf3PyEEFuSBX3aino\";\n  b +=\n    \"wcMUG6HdYfD9RjLfFq8mB8LuSR+A8YFkapBByQPQFU9o4NPmK70vqE/rNE6qo+HK6TuaNazKbqO\";\n  b +=\n    \"I/YE52cctIDl3agaWlUxAFWPruPfHFHUjcOXIZL+4YFf/WO2+nV+bVadAvsZ0Xt42GsQTPbzd3R\";\n  b +=\n    \"4KnZ7Qg/1ofNtdaXvqLoHExzWkvJoeNi52/BTRfUuytgMwyePVWMJJJFXasafTVAXCukjo0T6JW\";\n  b +=\n    \"8FvADiaxro2m39gUNiLxU01dtFfXa03dc3PjjZm7UWPYDDagUXWT72YlaxttyXpeXTIby2aygWt\";\n  b +=\n    \"btEObcKP2VrEMKNTFjq11e2HHf/le0Bwbmxfq6+FNq8E6h+vUWTV26ht3IEzLbldpa+bwfP8ySM\";\n  b +=\n    \"D5fJ/J9fkGac3suMcfccDXAJGsVluyxlB1qPBF3AG4/a9f+WyoXwFhvJmDEtCVAFJA4iIDcXtEU\";\n  b +=\n    \"z4MFPHP/v5nwwaZihVdQq1jYQGqQeBXCVQ38cXHYrxUrqZYdv5uVg25M3UEMJbe4YOknDkd6hma\";\n  b +=\n    \"4ooFtYqLknKnYZBL8b8dCwEvl9CWT5oZN4iirPCS6Z6n43FSn/OxsvoQllGdTcDpY07++AvC6UP\";\n  b +=\n    \"o3dOxJfU5H9ekPhdiy+qD2MDR+lyIldfnguzPD7kZX4bW+egaq21MeJ/W53y8x/QLqFrYTtM0j9\";\n  b +=\n    \"fHxAmvD1vseH0+y+WaqyngEbGly3g19cuNXknBWm77ak46rPi5GIJ/cmbiOtdUbLxz0atfS7TTh\";\n  b +=\n    \"FHuJ1JpZk8pWiKq55C6JZDzfL8N2LW0NoRbSJh6EpBzkamnugr+KK5BjdHzeCMKJ5KjxjyZf6l9\";\n  b +=\n    \"JBGmKb+VCA/RzmCyW3XMv5ctD07Nq8M6kVfn+2saHxO32qpeON2g8nkl3R1djOszMQTJyPOyOzN\";\n  b +=\n    \"C1/1Fekcwnu8aDl79fsfcg9FUvfw9NWtPUJ2yrD3XszCxHjxg2QuVZGv/uCcv3WgcyRYMuHIkuT\";\n  b +=\n    \"/cIocN4JL3ilBWCT+fWOxAzAGUZCskd1NEW0qHBnXVhGQrBIQ0tERSIR6nUEm2GEsaHTLogGQrr\";\n  b +=\n    \"Em2LItaTbIVEhgaeiRbIYGkoUeyFWKwk2QrtCRbqJlHshUktaCjkGxhKueRbIUg2YrwPIYk2Yrw\";\n  b +=\n    \"PIYk2YIyVk2yxU4hyVYEXiLH+hRYTzjpGc4VgkbXPKBdcz1o9E0xkrhG5xSkHALJVliTbIV8hQV\";\n  b +=\n    \"KsqWNxDj+0/hgv21PJghX4n9N+/ZgH9c9m4+kcoCP1dW6mOyJz+RYbDzY57sZ8l6YMeVSJXBgxR\";\n  b +=\n    \"gOJCY/LQRlZnB+HM9YSFSCc1DjMyaia6TAAgwSeZpkVmFNZnX50foJSKoXHrXj+o3PevnRN2Cys\";\n  b +=\n    \"rRYrz5a02LF1amP22Q0Qf4848ivzMXO5l32J5r9A4RvKr9VaPmtQstvFSq/VShON2aAPJoJv+Vq\";\n  b +=\n    \"KIq4Idz2ZVr3rA08YwMXbOBpGzhvA0/ZwLINPGkDZ23gCRs4YwOP2cBpGzhlA0s28Fpsp7Q28Ko\";\n  b +=\n    \"NXLOBV2zgqg28bANXYp2aRcIIIqtfqV0tEaIJWVqBK9NDShYOwF3KlRJhsOTxGFCeubUIOSv16B\";\n  b +=\n    \"VbSqaYyvqCKWUHPQMu1XFYwUngYWwjRPSWrBY7JI5MmaWtLmVE5EpCNRkr/B+HN5hvw/+JUzIsz\";\n  b +=\n    \"/9v9G5J9QMvakZDcqlkgi+GryXnttFCmR118i0mB/0ckCnnCr3NlLtM0HV8w5ISzIgTkX6UOzMI\";\n  b +=\n    \"agkZQt0TsuRhjYhrlGVoizhqBQCT5lViSz7p1RevgaHIB0txoZcpPiqCMyDNUDZJsuMbI/Kjjux\";\n  b +=\n    \"xKfGMyJ2+gVTW0nFcx0iqqxHecOb3e9VGojW005pIZW0hzVkDqVTyR35j59Q8mhPrKMUrvXbNvh\";\n  b +=\n    \"4J7eFcwzwq98TXImviXIt8Qsh5tY2uRT4h5G8k4kt3LbKUkEJw+FoknLJCqE4T6dUIzIQqj6jEh\";\n  b +=\n    \"LyYEETiah9vOU8YRAbFlxPLW7Y7Wo3s1atVk/f3Y3tdwCjFlo2Vr6xxRTDgobll2LysMsFoI83r\";\n  b +=\n    \"LhyG7puoFuEZZ0tNCeshvpHlnX0sqzz7iRdCNRNvyHjYddR1pj3Fp3LhDdPIoPih1DXJRNesj6u\";\n  b +=\n    \"RrdrvZLVROO/bhK9Gnk14LRKHTfrDShHzu6PrkVqEKKhhEaL6L9nqr7UI59UgxHm0/0xtxSI8Y0\";\n  b +=\n    \"3EK5bXEO26mGrg5zIZKMyylNBYlGq+akyDCx534wXH3fiYZ/C9Qb4XbD7zXOC/U9/j0zRefsx+y\";\n  b +=\n    \"0rz79WGMfiyTXs8i6bNY0hFF1AQDmjOEAeLzdWMtt2A33fszoWExdPqADgWu3P8LPYAh8XuXJ9k\";\n  b +=\n    \"iQDAcg+Wb5zJKjw2LFYUvjor8NUJE2lSdhxfHG5YEeDqrA9HxbSljzwTzLNxRSCrs+OQ1R7y9Jl\";\n  b +=\n    \"n08o4WHVWoE1d5Okxz9SKwFQbebBF1UGeLvNsXhGAaiOPqNCYPB3m2bIi0NRGnmnhNzhmMiLP1h\";\n  b +=\n    \"UBpXp5zg2nBQfZQrac2fIVgaM2sm0T/CRYEE1eZGutCBC1kW27AlGRLWO2bEUgqI1sM4LXhBzbj\";\n  b +=\n    \"uPw7zlmTkHudEXQp17uGn2q0NNEoafDSQs+3aDY08RETlj06UYFnyKyb+GnmxR9isiexZ9OKfwU\";\n  b +=\n    \"kV0LQN2s+FNEdiwCNV0oZ88xKrUQVFAVljNgdrMY1BZiti8sWlQupY2SctsCN6sFhboVMdPgiLM\";\n  b +=\n    \"w1C2KQkXhiVDZQJ+BHAffS6+p/epq36ZPgjH1vycy6SEA6DCq34TIbNgUmaXL4D0zJCauChGr1+\";\n  b +=\n    \"R/NoLYo4jLpiJiHIrQbgYR42RsaSVU8eKsTN9NNNAlq9CLj6OT6wVF/h+2sKiAklolzYr0kIkwP\";\n  b +=\n    \"0eoaAfNWHMjId6birTvALv1iM64b5+M3l1xi/ZI9aGl/NBMP7WybAmlj8FCvGME11jU3UzXh+nB\";\n  b +=\n    \"fkYhwyHVAY8Mg+oDnAYldJj4Ql61JBxUx0Y4hDZUdRl6tZdVxDcpW0dEsra6hvhrqrQrGkLRPTN\";\n  b +=\n    \"IeQkpL7kU0sUyBcw+pgZHjPkj3YsmmsGEnswYOJ9x11F/XgiB97ICyBnZWu6tT0nsKYmUmoouMk\";\n  b +=\n    \"8g8EmklBNPnbguRzzHm7URx3BTouViFeobXAzdimu2/Gr+GH1xIUb9yIK5cFcknjMr8SxXjgDFE\";\n  b +=\n    \"se1NrdSaGjQgQh+SD3sjK0vvdyqpZczraI4t6xpvf15IZQa5ybC/PZjuNtuxY0PKS4UcyBVD1Un\";\n  b +=\n    \"OFJnZLPPDHAIHgTF/yIUWPSysdHbEW+i4SxlTtlu/v5O3r2s+3dXMu7fYeS/LVgN+w3akeQtkY7\";\n  b +=\n    \"E46Qj8RrSkdTSf3iEIGGDEETJPRzDfJMWJHGJ5OuwHrWWgyMQSxJ4MBcj9t2qH+VI+ZSog4RKsm\";\n  b +=\n    \"XTuCKiAqHEELkT8XuVGKGcaBB7LMXCynElHhdl50YM2TSwea3EGhpnaTZuRBRyJVYilHQNDweil\";\n  b +=\n    \"Dlfq5liL10mYJnjEyEPhlwF7CDBOFmIXCGQzGNEHquJVbIgQWDLMmEowUco3B7D9pr4tlyeu/By\";\n  b +=\n    \"15K6IloVq1AjvZypTIejFonr62eiD5JIF/n8HXmtVzLG3ZHU1B9Kz2KC9DezY86NP9enKVpjvi3\";\n  b +=\n    \"zWCbH29ocXf3p5wM1dBONktw1+0cKJhIz9frejLy8gpSHL9NwU6lC5pDa7Ch2Hn5Nw6myoxB6OD\";\n  b +=\n    \"YNN+thQc+m4RY97NG1abhVD0Vlcjith6JHOdyGw2QFzqHA8Xedkqd1+VEfIXUqUi8kdVtSP6fy9\";\n  b +=\n    \"KADd0vzAHfKTWXvnK1xh3JacJTowFGiA0eJDhwlOnCU6JTdR2pY0zfDqcFWVtWWq1wFO527UtcK\";\n  b +=\n    \"XAZj+ppJU54yEfvKl9jM10hg5mMqm71mjkwsr+JGKp70USrGhDanmjlysck23kjLk0Ka0+Sl7qx\";\n  b +=\n    \"R8mxIaNJnSAQ0u+esX9DGcyJc2bZalhs0Irf+SIVGtKzT0qRGZNazaUIjUuv+1NeIxPpI9c558p\";\n  b +=\n    \"hB93f187LkCDME60JQUOoRZlAhRfkSBAnFiPUoJTyajMgnynCoL0FsWU4CLFDlltYhUg4CRqxDF\";\n  b +=\n    \"GGLldN8Fo5L9rvgci43YiwXRquOW4/pw5W0PFZ+zcRRc16kXhNucu1kncuuadZNLz3GbZHZdnk5\";\n  b +=\n    \"1jBlrE8l4l/boygxV7xP0WsI2RoJSG2cCsXxRog2jY1rsHekjlFjvbYFjmvDkXQklnTjhimEWGW\";\n  b +=\n    \"KErREKoFy6FpcFeLQjrymVAG2w8SfItLLBh0LhgrteEwYgd5hxWPZHrL6oaHt64Crr9rXFIrp/l\";\n  b +=\n    \"IrjPFYXYgJhhQC4+IwJlcU5KMQHwX4KDgnOnSUqKN6HYXtqHlHOTwq5UFED38o4kfxvp34UxI1L\";\n  b +=\n    \"LJ2VLyjGB518iihR3W9+A3hUbI/Aqdjy/wnUrWVaNRWIk5biSptJXK0VaCvOr67KlGerURy1nIa\";\n  b +=\n    \"ishsJeqylcjKVqInW4mQbCUKspVIx1aiGVuJWGwlKrGVyMNWogtbURCWP/fLz/vl5wH5eVB+PiA\";\n  b +=\n    \"/x+TnIfk5IT9L2s5T+ntafx9TuNbpcHTg8c995PKvvvQvvr4Ze2ZxtWSivvTSH37ya//6sx/5Yi\";\n  b +=\n    \"Bx14PRgc/8zOc+/IuP/uCff1Xjrpm4X/q5H/6Rrzz6U0/9kcZdNXEfXrqw/NyHlr52hFEHvvH6x\";\n  b +=\n    \"wF/OPUfTZb7najeV0MloxYxsa8qtnSIYRtawaunQkEsmvouY4sgvi1K9kRPabC3J3pag1N7omc0\";\n  b +=\n    \"OLsnek6DO/dEL2hw157oRQ3evie6HKnI4u7oixIb798TX9Hg3Xviqxo8zFVSBt+zJ76u0EQSFxE\";\n  b +=\n    \"i9aerlBZtvOIa6lT6AiBBG9jUQIDFqZQORGDqRVBZ8HF2xd161ySkdcT+sReZrxcJ6ajG6VzMD6\";\n  b +=\n    \"udd9UciKbfvw1X7Qqql1tUZ0BHoTOuiM8u+WKSqlw4KCRwwl3K+skbbWSX/GXbAXWsE9I6Ib9RA\";\n  b +=\n    \"mWu1halIlRnQltlM4FeSGQBBMyVxoQAN0EibMWXjAn+b0KdnKy+tMptxuLt5KHV5E+G7gW+/G9X\";\n  b +=\n    \"AyaHXdsaTRw1dkO057yaJ3XNw0aTGgmmSeHNmqTEi3hh2zEeYozLHAb7MlwCCmWm0Yy4NB4BkvN\";\n  b +=\n    \"GxIXxiGX3BQqqYlQ80Ygr+qo+lqgCWeJ3CSX4pF9SaVxL4YIowOIz7U2lBFkq3RZ4+az8WCodt0\";\n  b +=\n    \"7SIpVogfDUzSJ+UbiDFlL7hDcqQ/qUwhkL/e3pby7+WWDFWJQo7kzK6550rOgX8wK7y3LaqK6Zy\";\n  b +=\n    \"YNdO3jVDMh2zLlSGXc/nQmr2lJWYxnXWx2AxbguaWi0ZoWASTeYyoeYKcpUPrEaoowR4VLLLaoz\";\n  b +=\n    \"x3mlpvQME5t0zZtdiz5jorNrJfzy1gM+Zbk1Yy8LNTFl5lpTk3q0pJGV44wU7B7LgSwINBYWMD+\";\n  b +=\n    \"+V5cCxHKJm8Sh94qJkTjBUK01GTQTO4dvxmDP+PHY0b+JXd1jrSGJWXNidtWw7vgTd41XGdLUX9\";\n  b +=\n    \"XAIEdkT6bzqbZUF3UcaecbHaX1veiVmX+HGv2iz1/qSGS92+Rwslf8BRsU1S71nstd0MWHtrw4N\";\n  b +=\n    \"CVgUR1dw2keOc5ZntWxiqG250OtUOhpeoYNPc9wrZ5n6NO3hngdYaGhJd6fF1TPM5SPSSSgEmwh\";\n  b +=\n    \"YAKcSDjHVDeXcA+T2p6EC0xfCwlPYaI6JeFpTEmnJTyLyeeshEtsH5QS3on9hZ0SnsMGxJyEd2G\";\n  b +=\n    \"HYpeE57GFMS/h27HHcbuE9w4LWGsM7xtugMnG8P7hRthtDL9zuAnGG8N3D6dgwTH8ruFmmHEMHx\";\n  b +=\n    \"5ugS3H8H3DrTDoGH4PtoLeI+H3Yb/nfabfvvG6MLGt4wdYlJNrvAozTgzMzbshHGEGtmJINuulp\";\n  b +=\n    \"acutJQ0ZEY+U8Y+q2CfnVDeEI1+xUR/fOnSHz2i1CEabSy8ChZequwhGv2qif69Cz/+tVQJRDTa\";\n  b +=\n    \"2IgVbMSWsn1o9Gsm+t9c+PSvMHrWRRsrs4KV+U95C130KRP9L37hySsse6eLBsTHmKn38b662Md\";\n  b +=\n    \"M7K//8u//rNxiFy1v1a+GTpVELUx5EcHi169vgA9lqLpvyxFxT2phMigWJoNiYTIoFiaDYmEyKB\";\n  b +=\n    \"Ymg2JhslyxMImnEguTQbEwGRQLk0GxMEVYxznvwsLEqmK9rBCV/rG2Vi1MUWAxD+JnMlHfXo5I4\";\n  b +=\n    \"0DeUC7B9I6ZuAfNBYC9eI9AMA7Lj0pR7pefvfIzb37q+QH5/L25AW6cPy/AbffnBBg03nwAI86f\";\n  b +=\n    \"D0TmTpQ9qL7x9QTCPnrel9EgFfK8k6MB+WWrKw8DaNsd5rRG+c4i7sb8rT0VJsp0aLOGUqLPDJi\";\n  b +=\n    \"CN1a4zWPLh65vN/hgY3OM8w7PnA+rwzLB9iIdX/hItWITOSo+HHFhJRmT2h07rrAnhpkNWQvgkN\";\n  b +=\n    \"2B+wr+v2eGG+iopwCkYQTlMjdIxZFW7cocG3Uwqbj14UXm60X2xiN1bmAhDmYImR7LubkCcuiJs\";\n  b +=\n    \"sdubrFjsK6gXdO2SCkuPyCa3dNGJ+h6CI5+FI6TDLqGd/hPMkr/UX2IJ7X9+RNTs9JeKdPvV8vF\";\n  b +=\n    \"BObTn2KnkTltbF5/bbH/5RR+pWmybxSUGRhAgGowPTxR0dtyUkZCv6IPphsXy3Rs+cU0nLGPEbw\";\n  b +=\n    \"8CSktNjudaqdS7TSqnUK106d26tROm9opUztdaqdK7TSpLQWtBF+xcVdt4GUbuGIDX7SBl2zgsg\";\n  b +=\n    \"1csoEXbeCiDbygAXiX8cViJ+EyPfFmsrxffCQa2suyECUueFysS63ulE3zyuAGEBcFmyngn9N5i\";\n  b +=\n    \"xajwyAcc1xFDD0k590snFwLzTXGUKSctaTVxqUC2Ye07q/MJy8BHV607Bu5bvCtJZemKDdkCrFL\";\n  b +=\n    \"q6U/0Lkk9kVnHKpMppTUxZCHGNu75iIzNjl/42RMLynJJVPLMq2ThQ5Q50+xDtyfTsPpk0IE0CH\";\n  b +=\n    \"UJ1Cdc2B1NvDjD3Vz4Hg2CRflFD/mUDQH4meL0GJujYXJEKCfrYN+ucU8S5vN8zNlnqNNg1650b\";\n  b +=\n    \"wqNgh8ekBtLJmumS8f2R2njwG4CGrH11oLi9Taq5b+Jl6gEh+oDaT+F/5EvfZaph3bP2hiNn/QT\";\n  b +=\n    \"C+rlvmLTaVsYVT2TYcOt+GLcHRhBN8Q01ddc4lbP2gK22QyxlUHf42dNDGcPLpgficXjo7M58O8\";\n  b +=\n    \"OnojiliSUDY1zchBSWmaMWma0B5MCDTQTC31dXgSohyF+K+YXGjW5ALYqBTzyJj2SCNtBN4mdZS\";\n  b +=\n    \"p2jZUbYJVi4+bqjDXxKiRZxJ5+lJ9k2eoBC/RMb9TUnRKyk5J2SmZeVOlplO2jcrpYY/ym2/cKX\";\n  b +=\n    \"nZHm43nWJ+XadMolN6A9Ong2nTK+aVO5g0PYP+g9aM3b4qt45gw86Srm/LCLbtNDXYN49g805xN\";\n  b +=\n    \"XhqBFsYezSbyu0j2Mg9EuBtHMF2pjhyuWEEmzohP18xgq0dlIK++Voapeo+GNl9GULNubspoJxd\";\n  b +=\n    \"QQ50zT/GUD7wIWNAzO+JA6EoNmZdsECrAUKlCyIqtrfeLiUM8KnICVUtR1bsG3bha9Gwdc70GTi\";\n  b +=\n    \"Xkrv69bxtbw0jfNZqbxQXCJJ8NiT/qoM1ykvUw1w+Fw5be+KzWGudVshlQGqjPQz1RlVvt2oeVT\";\n  b +=\n    \"/yY8/LIh6bVaJZkbC3fAfaQr5eYbqdF4wnumak3LhvC4QIU05eDfRsXMy0f47tx1UOcH2W0jrXf\";\n  b +=\n    \"tztG7sVcEwLIJIpZKbXAlHHMF8UCoIFouXMNbuXvbilUDZCXnErZ5G+4SP95GiH4EvEsyiWi4/P\";\n  b +=\n    \"bXGgPWRspj3xaVHmXQ3Fc4N36IK5C5kPyz0d7onPI+U5uv7HsB/R+fDkdUcvAv/dlDCH4e7dQ3i\";\n  b +=\n    \"1LFTp8eKHQ7qHR28Lzkak+NKtgEr4jsUtzpxmekf8KrqEzETi9EpIS3xH8CybcGDv6X3Br0pw7v\";\n  b +=\n    \"R/F/yyBPPT7wg+HVZf/4nnBciJ0s4/ZQ6eNjedQM4/S8P2SRni8pZOhOZYiaHzQSdGYkduNGy0V\";\n  b +=\n    \"8zpCb4PYDY1caRTJS5agDHMH1KowMHHkioHwierzJT9xAIhWkK99ZDgYwKSCvPbmBgjNHAErGR2\";\n  b +=\n    \"gQ+fZegTDzcuzh7si69WpllYkLAXi/93BuLeDlFppn9NZCSRkY2MERlLZGwjE0QmEpnYyBSRqUS\";\n  b +=\n    \"mNjJDZCaRWdW5q5+JwAKaNYyh1sSldeBA8Hh2zWuy7FaPPnH+UnC0ev0bX//gaIH84oRQIbHdTF\";\n  b +=\n    \"yslj704VMP8d2C4SCwYeHeS+4VfafqzH8wd/KUaKODcxjdeGSgfgcjuEKO9eVdJDxmXyaqIkENi\";\n  b +=\n    \"EFMvnVzEoSh8WQFh2DyH1rklUI9Gzd8EFDRDZA++i+8G5VC73cxc8JqAYDMVChP7+WLMb2rj11m\";\n  b +=\n    \"7Cy6kRNi5HCkDAOrSBE3M4EEDay6npAJR1bIiwt4UviuzeAG7v/lV1QDgzngIagRT6biCbOsb/h\";\n  b +=\n    \"vFimDWNB/i7QM1oImP4P4vQtziqIJvI1ta0HHjdl8pHbzQ1bRCfPISC1bTfQKOaNCFeMpKVC+pp\";\n  b +=\n    \"inQqcMJbqv4yCF1EMHJHXcetv0rqTVsLmNHVqog3J9eCoh1oRWTxqX70ZGNN4aoJQKVBJEvVXEk\";\n  b +=\n    \"G7xS1dCPXjGUQBy8ppjSihr/5n+xjM2nQ4qFBoXLojMS2/4pkRqLj+hrHXXrGeKfChUy7jtK6lg\";\n  b +=\n    \"nV5ZZFrib+QrkQx7HuwDx/1aimI4oUvWk7JMMyxq5YbhBh04G1V+2YIVsNC+SYfylDh3DR3wBEq\";\n  b +=\n    \"5PgyFAyPzcSt02l0VVxM8F8PNME+EVybCozPcgogXNcI8XcOtiLisEeYBNAZ4ZNllIjyjxgyPLL\";\n  b +=\n    \"9MhMd4uJ3erOrQEroxR9a/lo/5GAKI3G6Iu0yWXdVE2Vj2FasxVRYN9IXsgDzMwtvmN5AYIhJUr\";\n  b +=\n    \"tjhcahS7AAu1Cd2AjKBqKtZlIYoEGv97E2PPJSHLGPEtTtZG1sEPmiiU0443RTegW65wT5hMoPv\";\n  b +=\n    \"GZPYAXJwx1InAuMpxbi75N0f785498S7G9598O5AQOvc4Tj0EgCOaNM6dau6Zde2p2f+OYkYIdP\";\n  b +=\n    \"541QWEdfqhD/sqKuWo5Hdyx2miMcllQNL+ajGdaRj7/UQOqqfWNdqmzrSdvbudhws249Fv3g60i\";\n  b +=\n    \"JjHTpKJytjrY5cTRnrzEGElhyfkEhZW5+oppR1Xr9DXbxsgtl3pK2GwHEelt/11KwbEtLY6O2Oq\";\n  b +=\n    \"1k39K6x0dv35a2x0TtREyetq2ad+teQ9o5pWrf8a6CFoX+NM4lTxBZl61DlokMNkarpm6hsHdac\";\n  b +=\n    \"Tx2nXI0b2F2jbN1z9x83rO/Ux69R9brVULY2ZknrpDjC47N2pIwErB9BWwYLpgNB6U7e24+2U9Y\";\n  b +=\n    \"Gm9PUvhm2jhgbvaXZsWiQONUDyltQJ5bxuC2HFGkeQRoFpJ7D6Ag+fqX5ifgNGxpbeIHegye/s4\";\n  b +=\n    \"81pdh8CKvpBawEm6oh1C5BuQh2H9hgCaUXsGBsjvnubx+zuN78+KIs9DKnuf49IngmpVMkacS0+\";\n  b +=\n    \"vTQLQ43zuEcGz0AK1hFd+EVfoTCtmhdJillqKK6qZWVxRTVTRySQ6r/EWH+AQaiYWsEiRh+oG3j\";\n  b +=\n    \"W1V4N8Rcbtz4VNdx0HjlojStlXanpgcW7QI3eojYAul8kQ40pWMZOOSJobccPpZbRT0ikRMSdZq\";\n  b +=\n    \"71X2A7gQxPBPYTFWp0WZGh7SjW+gfKtOAIBMcVKYdXXQXxkRYj5W6nJOsha1A0P1SKtic1YTu49\";\n  b +=\n    \"z4SBURESsiIlZERKyIiFgREWGNiOCalTKR0tkngwXExX9R+QAegt+g9+HPe/DnPvw5jD/vwp+78\";\n  b +=\n    \"eed+ENH1334sxd/bifpKqlY6W4r3rkRt/S43adOslOOSoT0reR35SVvhNQbxoRnsJMWdOFHdpAz\";\n  b +=\n    \"81w/OKquZfLEqcmo4rnOSoyx4qr6zF5kvl5kb3HsdIwx20V4c2zEuMjM++ZBfmAcewMaoW5O5JP\";\n  b +=\n    \"OJdSTvWy0WHXRTQfIPjb6Q1WwTffIHjZ6S3aw0Xmyf42+lN1rdK3sXaOnZecaHS/71rgPsmsdcb\";\n  b +=\n    \"dxn4T2y441bprsV+Meym41bqnsVeMOy041brjsU+P+yy41hgPhhxSvAqIdLtcB+x0bdZTJKvnM8\";\n  b +=\n    \"pufF2/nupMosBVP6CpKMapTubBRlYRiV4F543Th3QQPcdobL6ZRLOzzS6EASZV9PlvDPp957PMd\";\n  b +=\n    \"j30+a7LPZ459PpkZtsA+34ZzVoN9Pj8sDO5r2ec7wj6fkH0+ORCa1317Dft8C+zzLY99Pp0ZtMg\";\n  b +=\n    \"+bwK5ss+nM2WCN2Xbss+b1+HbQ2xS5HviD5QxuOcfMEctQiThvv5Pa+J50HIDpsUdUUs8n4kAUU\";\n  b +=\n    \"04nx2ewbsFRPRw+TrVTKhCsFjEIC6uSV9uTj0fV3Sdj5V5fifwWG8PS2wmY7jE8DA7zC2UcmRGT\";\n  b +=\n    \"UWFS3fSx97sSQQklo6ctJocFQoJLg9yteRS0EhMBLv6Eo+d7z5hmuWe+HBX0J2HFXH8D8P38JNd\";\n  b +=\n    \"kgp+TS14NtHJWqxUFqzoaMRp24gb1b5rzRQ6t4cCoDWj+TfWrHg8FqqMGfEMssZHxAOCbcFEINg\";\n  b +=\n    \"R1ASCXcFVINgT5AWCfUciA79roDeE/5r4DtnoIQJESLADe+GN2IqU4CZsRoZKgx3YC2Nj8zVLgx\";\n  b +=\n    \"3YC2/FpqSlwQ7shbdhW9LSYAf2wjMipI7gLD6v90PaCD+3qp1saTmStcsjzrlOCVWbHgHBmmWIq\";\n  b +=\n    \"AxvsD6SiaHYLGReyHfmm04JGRdZxtc3gvGCyX0tQMlI9uNjQdwKpJE72kqCUcZeZOzwkZF8kQIv\";\n  b +=\n    \"0eIjI/kurZMEfKTu1TcWLCyEUabTnRI6sn1j3E6aifOG8hb/M0rEY8hP6UYzFZ0yM8wtZj45bWa\";\n  b +=\n    \"P28uZcra8df3cRxeVcrz7A5Y+SgYyuyBZ+8nVBqYNrK82bW3kmk+uwkAtJOFspHsWEVYDbfB0HV\";\n  b +=\n    \"yqg9dDF7xWB6+OI9sjrPSNIdsjrPWNIdu5eTGGbOemRRPZ3kCyxKskJDNT4//BW50Ii3+MWUgyc\";\n  b +=\n    \"ilUOdfwUtvPtdytU1b73hmT3hkbG2dMeWds8c6Y9s6YqcPLt3j5d3j5B17+nV7+/8bLP0fbVq5d\";\n  b +=\n    \"lTrVwXw71jxUEkjEXrry14Ff0aWvBF6pX/UOVv+Td3Dl697B0t/45yyF3jkf9g6unPIOlr7XO1j\";\n  b +=\n    \"+mH/Ox/1zvs8/54x/zif9c57wz/lBd2DXDD+PnRvzWJQilIP++Flqm8c0VcVf5jdD2Y77/z1NzA\";\n  b +=\n    \"PLzqnMvDM+biyj10OdvvGRaFEiIF3gpBkW56IgniCkkB8iNoIbICbPDPK0gLnAm56Jg1Z1kknUm\";\n  b +=\n    \"iQTnUjMzIIeIwF2tMXfKZBvQEEQRBiQfhm2+ZsPO/xNht0VoUnqrRw4eUIcGh/m5mrhjj588Xu8\";\n  b +=\n    \"o7/5xY/9yXZ39PUvXP/5He7o+hfO/tmsO3r2o4/+q1vc0crPfe7K9AkKgJnX92LZWSzbi2W6WOa\";\n  b +=\n    \"LZWuxzEAzv6BDKSlmrQsHRtUyrVJ9bXJMJTKmEhlTiYypRMZUImOKP+sUU2Iwv5CGkxjM85an7J\";\n  b +=\n    \"tHmR3ZTROPO0zdFCNLzuWRflk+Llmh9fi9PC4vt4/Bz/0Ye9d6jF01T1byhsRW+pm6GaUXia2TN\";\n  b +=\n    \"0+RRajotXAYkD0bmYKjJK9nwqtIIJbXJb2qSdeRRDyvS7quSa8hiZhel/SaJi1FJom4Xpe0pHjV\";\n  b +=\n    \"U0gittclndKk00givtclndakx5BEjK9LekyTziCJOF+XdEaTnkASsb4u6QlNOosk4H1dyllNeRI\";\n  b +=\n    \"pxPy6pCcj0siZUXw5Fc+NS6mgXhNLKjBUq0r2IJrkDbJun7tI89F6b8PLo+1RP3CTxWL3y3YT2J\";\n  b +=\n    \"/WnhzWS6FXe0i0mgwK6mYhC8IK9nN+Hwryf6/vNWJ9GSj/sI4LSNx0AbniiCDmvSrGNucV68khe\";\n  b +=\n    \"yuPx1aRSH06lpruHxS2lxQsHqel17BgnYZhjfvx2vfENmbJejSkZezzVaB5jyO22zgrVFcNr0lj\";\n  b +=\n    \"Lint2h0lURT0jerVknoFdaYrjbo5b4vE1q3hN5GUXcdc4Zg76lGUCR2E+Hb4pcvFQKLyeGw3mWz\";\n  b +=\n    \"FWpLNHubj3iKXUjpVYFkkxrLIFUVzJx48igfFpMYV7Vi10HiXUuJsyuzEkEIeP/58AIDNiWEOAz\";\n  b +=\n    \"YrW/etmItm962cIEV+7mjPqjkszNLGe+iuxJWI0rhp8RNS0LB1H8mdH6Iscdl6D3AIBwKHeVhTE\";\n  b +=\n    \"e/UnLV6WCqSm4q0WJED4XetjFUGH6m9I2nnq1gvTm6L9wqlc1BFdwT3i6vgJeKJ9x/BadoxS3S+\";\n  b +=\n    \"nFdWVNsiwqg0ccQrDWKlggEsORixknJaozHXgmZrbBlvrTl6mlxpXqioE6Kd2IZiqFditmKIWwE\";\n  b +=\n    \"8cjhybTTxVHCXm1OFerq9P7ai9gZtH79DFWZYR2dcN10L6tEUaMWEiCQwvUuUPC3eT6VRBOq48L\";\n  b +=\n    \"a4BMKlmqOjwlz0wBDMn6GQ5909qu68V3ZFqrD4BDbRabeG1a5Rpcvt8y50uwvtdaF9LrT/iA29E\";\n  b +=\n    \"LjIi3XwxTp4qQ5eroMv1cEv1sErdfBlDWKh5c/Q6wfS0/u4GP+nPOrr0cs82qxH/xePbtGjP+HR\";\n  b +=\n    \"P9CjP+bR2/SIKwMHvl2P/hxH56r4mDAGawcFsnkRAS8beXjZyOFlI+Jld1OBA3R7byZvInnzN5M\";\n  b +=\n    \"3l7y9N5O3J3mLN5O3kLxTbybvlOSdfjN5pyXvrLEFpjEZqfMGLm+geWe7j6ehGbWewvbDw0Q4CR\";\n  b +=\n    \"1XjblHlrskESpCx2rTTMolSfhvmkk9SRKmnGZSIUnCqdNMmpIkYd9pJk1LklD2NJNmJamkTnkzq\";\n  b +=\n    \"ZSknRQ0bybtlKQ5Kp83k+YkaRcl0ptJoOELTK+BFc5TqrbqZtqVZF4IF1aQVbrzxAnbl6Rm0LTc\";\n  b +=\n    \"S8slrWfTel5aT9IKm1Z4aYWkTdm0KS9tStKmbdq0lzYtabM2bdZLm5W00qaVXlopaTtt2k4vbae\";\n  b +=\n    \"kzdm0OS9tTrY8pD/PjYTPIlwYmfl792O6fLAcHhlm2OoQV8kUjjdVwA3pCJucvSo8Dt8kkOANc2\";\n  b +=\n    \"BAU8BC2/pVCoW31NiQcdlmqAska67bkXcpFVqn7B4huLdsHekO44P4KnDmHVfBdw5J455hBR7re\";\n  b +=\n    \"iruCUS7bF1buHoq25Lqx2mSBc4dV8kx2Y/EC+0YyfJkX1KQz/z4kYAdqyTJQZnTgsKOLl68KsiB\";\n  b +=\n    \"LJhe9QRZk1Brcmcf64515ratU/i2wPTQwsE+tqQ0/ZG6MMA/pDhj9odHjZlvofdYi5Bz+9zhhm8\";\n  b +=\n    \"lOxDdF8o+N7zHAPsnKSvmcS05rN06+OVIJR67OUx328rSkaneRpIWcUrYI68f5umxwHJZbfJHah\";\n  b +=\n    \"+EXh/EwjOInlbev0aJnBbZEhvFR0PTc/fITSO3Ox0+JLFi3y9zp+JzaZjqShZhPrhVPazY/NTzQ\";\n  b +=\n    \"svMbc27EoUWc977tuD+vqxNs5dNT8rIhF2EAUovQ9FzNO28kys/UOgtfk81HpOuvBaSqvcgjHdS\";\n  b +=\n    \"RFJ4Vu3b1AmWFXTP2B0VXcX2mcpIq2hIKMw/qBnRxGsZuiIxk+JqletpcfXsU9jNmeZq3fSoeJY\";\n  b +=\n    \"bX+h2M8CUtjtEFHbFqUReBXdRbaqRWZ4q3USL+S1M9otYJT7qvQeJEODCfUtXCWRXHgSELUqQjG\";\n  b +=\n    \"SlgHS7QfEXsKZ6xNVWx5SUtEwP9iMtXUNri89kjHvFZ6LzJMWnNywecsCnfwqw9Gr5J60csEZcs\";\n  b +=\n    \"BFlAFGkNY03lbtpu1OBoXgVS8WrTldI3qDdgfWED6xiVGAVozCGik9n3HyjBofWeNXW+F86V5Jr\";\n  b +=\n    \"WcOVZIyC4FLiZgaSA/4ew8RSKYA85PHYnsstKc4Rc/XQv5Q0ZqKXlO2A5ei5pPlL3aT+qu5gWsE\";\n  b +=\n    \"TpYu4ROqEq0E9maTIRHXWTuQzvzZrL1tKveSkS5aUMJGZ6kUsldXZL4b1NcdKESrEi6FXCrdVbE\";\n  b +=\n    \"nno0btz0daa552Om5c5jTnvbjYe13W03a14SXZMYCoyjCtG8V8rgvO+wsVrvGnm7P/00rjufYqs\";\n  b +=\n    \"V2puBprycXPh6IwdjW2CmNy1WvAvdVlXkjdJbCokLkjDlA5Ra8ojQ9dSwN381XVBipKLVVRupap\";\n  b +=\n    \"Tx730UB/LzIspcqwrCu9Qm2U0kqvzHrSK9M3kl6Bk07EeZmvL1ICYqAYTDO189RF5lVc5Frgi4u\";\n  b +=\n    \"I8soHrPCKyKycCcdlVk57MSItshSOC6/sF+GV948Lr9zfEF4R8RC8ZSke4oRX3m+FV654wisPWO\";\n  b +=\n    \"GV+33hlQdUeOWBdYVXznPoXG3Krty/J16ObePNTBNgVjOAPhNJQDuLekR00LR6RPK93R09EUuQ3\";\n  b +=\n    \"PNnhDNj2afEgB7R2Vi91c/EVjUF7PPRvVRCEj0ikgc3tVKsqqKeSE2R/UdEY2Rejy2zPCtxbHe0\";\n  b +=\n    \"HNeKKMtWSejyxxo6Kh9bK3bywkdrTaKgetnm+IMk6p/sPkKTFZ9xY9gONpCPfLCR7OWDTeQ6H0y\";\n  b +=\n    \"RFn2wmQzqgy0kWx9sJS/7YJoU7oNtZHsHTICM8ApRXHl4OHOu4tGuIb+Dc0NVGSLtfDlsy8DvyL\";\n  b +=\n    \"SwKzPJnkw++zJfnZA7MCkdWzT0ts2nu4wWhqB6XOCeP9B25IEsAZguVsoZN83Zfg6rySHZ4yx35\";\n  b +=\n    \"LZycqXc7rJss1lyyYLJy3Q5sVJuc1mmbZaeZMEcZmvZXymnXZatNkshWTCV2VL2VsqtLssWm2VK\";\n  b +=\n    \"smBGs7nsrpRbXJbNNsu0ZMHEZqrsrJSbXZYpm2VWsszSObO9Uk65LJtsllKyYJqzscxXyk0uy0a\";\n  b +=\n    \"bZadkwWxnQ9laKTfWitc2y5xkmaPdkZVWCXt0RNN3Sfqu7p8mUedk5CQI3P7LCl2ImtrZE97sEi\";\n  b +=\n    \"rXnLErZeyEN7vUtNxLc7NLTet5aW52qWmFl+Zml5o25dJIrOommJo87SW3dtdzTE2e9ZKVi57TT\";\n  b +=\n    \"E0uveT27nqmqck7veTO7nqyqclzXnJ3t/Ak7gJSyEziB5N2qhZWO44J9C48TmL9QFLyYR8pIaJl\";\n  b +=\n    \"yJOJh9n7EkkFcRx35HgnhRN2QE2AxyW1CHZA2YDHsxRE2AEJAx5PU/lgB7QKeExRhbIHCW+v6gl\";\n  b +=\n    \"ydCXHHLlvMXR2QFaBcbsIQpRGFEONLLhWWdff3FJ+ph2p/yu6G3Ql0E1Ny4HSPWY+Z5h0NJlNkj\";\n  b +=\n    \"Fmk2SM2SQZYzZJmswmSZPZJCIQoArL7rFhCmQvSNrnBTucVNcegdHbHmbk2YBJeRhTwMM1mYnQh\";\n  b +=\n    \"Qxt1ojnEjs8zOSzZj6SeUUfmlhBM4e5Lwn/sZjM7BX2Q8EqMiEcg44uMFTcqqwQqnaD4lZldU9V\";\n  b +=\n    \"GhS3KitzcjtDxa0yVKreguJWGZpTnQbFrTJE3CpDxK0yRNxqoCw5+yRE3CpDxK0yRNwqQ8StMkT\";\n  b +=\n    \"cKkPErTJE3CpD7xNuJXCr5LLpNzDjddAvu+zuDB2VkjOOW86destZYGNp2fHJciWy47nahcp/Us\";\n  b +=\n    \"e1gbkfyk6kFx2oPwu2iFpefKSVS6Ry9L9PoP9obrVSkUyI9dI2sbA/exWdiWLnfmts8w8TZm5KM\";\n  b +=\n    \"Nbl/52ohIVSbgF9nmC5SIDx5hC+wjCMkjLFekmXB3hBSKakryMjqLDSSpGMIKrZFyfiKAhjeqZz\";\n  b +=\n    \"MWSB5IzCtDgUrSxYv0HxDsFzFrgIn9EC31y19iR7IsR+kQrPYZWmxmNDiRokEqn47dnIfL3I3uI\";\n  b +=\n    \"wahDjKOGiY728aW1vFXQKahv8XdX2osqGsvPLBWhb0ESSGhdCRxIKiaOqkZhXma1wqRWm5hhypw\";\n  b +=\n    \"LPY30Lujo5XLtUt0XuHj8yXy/SVjcbw+hZNsu4+891EbMQtYaTsjyUDCNxmZ4VIkmhFGkBlqxEb\";\n  b +=\n    \"i01em0erGPA37gfbu9WpNMUMcKDwHrLJgZoEx7EI5NiwaAd19oo0T8MA2CWoygk7CeSb97zAdfW\";\n  b +=\n    \"QHESxHgRt6pXv/x8UK2aXsOlIDlR7cf8bzVQR5cyPNiPhVLiO7iFxTNG1vuZDiSIwfKc9aI2841\";\n  b +=\n    \"e2rVFs/LPXFMn6JbzcsjrE0JBSZta42FvV+oqg2U2eHZH6zQsCCM5YRhUV6HVUSUVSI3O/HZwaG\";\n  b +=\n    \"YQQ4QE/vZB1TnUjyrwPgOFy6SoW0UDNe4d60gGJ6cYyjbMYYZhWr1sGlB8NKUOOXdtwSaA2RTd3\";\n  b +=\n    \"+Fyzl3Wk4K5CavOPzGV6Tx4pJpfNA1AGVik5eornVsA0Hn9dbyEkLVTdT4gOekuQyvCnWxOejn4\";\n  b +=\n    \"JwMumJpr32myoJCDHGQtrU/dgYEgxjFF75lvvbixoNoF3oM/7n31M6z/8JWvr8FYGLfKeAZ+4fd\";\n  b +=\n    \"btM7LOjNMeGTniTmPXtGjnt0a5ZEYH6/qkUhFXdejaR69pkezPFpSOoySR6f0aCePTuvRHI8e06\";\n  b +=\n    \"NddO0L7sJdgwD7wHTwgMyUPf45NGM6NXq3kvPSGzle28iGkrsykHmltgYxvbTMK6Ojz3QZw37A/\";\n  b +=\n    \"QFbHF1eBrkZCT0SRggvGz3E8BbqI4YVOEwCNUzmHU+Y4KvxPWxZ+i5H9jQ/akS1REoZexguLucH\";\n  b +=\n    \"et6nB8v5JcafrI6NTpZdUiJhkbkLVzYc9ih/YWynLpnNoM+cs7n6de2Ja88g78pFYlv1YLyePtu\";\n  b +=\n    \"eq1Owbp38jB3pOrzkOsqUQA8ijNFT6td1Jjwy7OwEoUNOHzvczgpeARF5pXLsWaDeWRXfQwt6kI\";\n  b +=\n    \"mi4iOAE50cVbA34ntmzN8udodoHFbbwHxhLI4yO1ZFx3mfsFvUIqFuW9zHKn3J00esPsj9g55/U\";\n  b +=\n    \"PgHU/7BtH8waw/agFW0TcVykhLZ9fq/1zhYYwPkHxjCm2pgbEEBYdJ9LRDZrHZykjInLqFsU2Hm\";\n  b +=\n    \"9oofUT6Uxrwqc32lBcVTkThnZWUuPQwhqbYZOCgNQyU3N6WLIrzTO3g7wN0qiXJMw+27cYVeMph\";\n  b +=\n    \"+k+SI0++uTL8jWRjR6XdXJm5dmX5HsiKi0+86LZe0nk3reWk9SStsWuGlFZI2ZdOmXBq1UaYked\";\n  b +=\n    \"omT3vJqbx8I1n00Ol3nZzJ2ziSBQ+dftfJqh0n8qJ2+l0n5/K+jmShQ6ffdTLV6eCrh9XCb+csf\";\n  b +=\n    \"L3ptzf57txw8t2pJ9/+5Hrn2OS6HJtcz9ppclpPvlNvGs2uY917XsUjbzqPT1DXTr6jevKduMl3\";\n  b +=\n    \"VE++I3/y3f3DJGpBYwhYBbgt4WcjQQ2yHjE92ET0A5yX8EMsRAH/JfxsJp4CLkz42ULgBbyY8LO\";\n  b +=\n    \"VCI3BBg6+wbQP5Dgx3GblaURrcvu5oZIgbICLixUTqvMk3oreNEdMQp3EreUGK0BUZ84bC3cYP9\";\n  b +=\n    \"TdKbeUhRUtqjP3Gkt4GE2UqCk3l5NW6KjOXDQW8zC2ChKsubWmvpd5qrGsh5E2RWa2TWXfCirVm\";\n  b +=\n    \"acbC3xYNJom5drGUmWXugI5906Z9Rf8PIRH95wKQkblRqfbY2aikPMpO3bd0UxYzzkhH1FxnDjn\";\n  b +=\n    \"hHxE63HynBPyEUXI4pwT8hHdyA3nnJCPqEtuO+eEfILuM25br3TE0mYuUvx5YvUR+XjJhkUuOsE\";\n  b +=\n    \"2HmCpeUSRIg40Z/NW8bev4DTsQj79Bd2bEIVjGsZwkTTm5gVVzqO/KeaJxWvmOyxl0TMcJjzVFG\";\n  b +=\n    \"UTaFZUf4V0ZcrM3m7jLAgSwvYDeOpT9dWgxUtPbLx+9Szumg74Hk7A8YRdlEREg+FPHKOnaf7G5\";\n  b +=\n    \"ADABFU9ksUdHESCs5J/2s3hMZUIuRdQ7RJipEFg/QhMX1TPfIEC6Y/9lgqkV+d/00TMVa+9aBXT\";\n  b +=\n    \"g0pAfgNZEOI2uGxAJOLUrL1/RzBb/dEXdDPCtPqxSyb8yot2LwJxxY+nMGrfUh/LHPi30mGgLMA\";\n  b +=\n    \"0EljaJzPZJQgU6mBMIenpkHgOZPkZ3iEtwG5ic4UE/XnTcu4i3sGWU6ykuplz0CTGxw4u6lILRA\";\n  b +=\n    \"1Dcar4T0mUyag100xqa4z/03FLf9ucN6YcFX+cmj5Pis+2gNNJsGiJPTx8ZMUPRVgyStmzVuK72\";\n  b +=\n    \"MpTu2MqN8+NHDFeLlDXYVr8pcxIMSLfFvQGLXWCxbrqSGb5Zq6bysoJkBgVfEU+RK2IkkrbAQzV\";\n  b +=\n    \"kxybaZl0yQMcLhSfjIU+cLwJ6X+pJkyPNWFamjB7gyYkol/NVuw/YtpwNanbULg2TDXb0F23LBL\";\n  b +=\n    \"m76ZYeURX/dvEe1cbhu9qvicupfV/lcrvlwVEhOvP1s4gWmyMYqWPbVKoSSGTFPADOzmSl8L+I8\";\n  b +=\n    \"Q8oGfPm9ES1MHqsYt8Up/6nD6pX0vCjvrzCHPPTgfGiu8IjAEjDuvJnjjHBAdNisXk5k9hVyBop\";\n  b +=\n    \"8iLc0oERklogVeH8BvwDRIfqx6CVxe5tRVEo8AgwYeUst5D6M9OXepJlPieuKBA8m8w7+SYe+kD\";\n  b +=\n    \"fQ2HtWOhjK56ZcjkS48Nu9X9oyo9Lka1VMy7ftC4fuBfn3c6KTtww5mVl9YcsAPmTHNzD5QfQ9+\";\n  b +=\n    \"kZtDJGhYbm+tcKnAO9OwVWaSJCKmKj4HKpYeb/tcBSEJNkHyOGRZpqMbNTST2esFVC76IXYm9Zo\";\n  b +=\n    \"mBlpjVJWZaYoAS210pahaTZ9zAnDAsc5b58NT9a85G50a2V8Xzayhb5Pz2yGLVIaEsiZXAAwamK\";\n  b +=\n    \"QnLWjPEtekeqetGLiRLu+iDUwbdi0nNWqK0UVTnKb4/VDEhZTERtq16U55rk2MiRrI2uTbSrk2u\";\n  b +=\n    \"S9nRVXhBKvxRdN1O/OvSDV/0bTIpzJKm5OKn1bLLnkfLZJEgnMR6e1tfLonOF4fq6iarrEeVYiW\";\n  b +=\n    \"pvbvME2LeNFb46pPK2GTq1i3+GVZ2QJcUKXfLWRt4wgbO2MBjNnDaBk7ZwJINqLddbL3tYuttF1\";\n  b +=\n    \"tvu9gyIcaWCTG2TIixZUKMLRNibJkQY8uEGFsmxNgyIcaWCTG2TIgxmBBvqE9RO99tOw7iXvKI4\";\n  b +=\n    \"Hk9VpULi3YtUQhBPpcIMBEjSfy58CmSYVTjX91QSsaGUtrUaJK7tTbSDqVx0abGUIqFq55DKfWv\";\n  b +=\n    \"+1aGUuqGUqp50psMpdRWxg6l1AylRAmvPhlKEB8wHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUq\";\n  b +=\n    \"JHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUqJHUrJf/ZQSnQo/UISJb\";\n  b +=\n    \"UTlbyWxImKrAOE7BBduMH87K39YXBQbOASJyij1zpVweK/sVMV7C7MP9SpKlKg10NCArtXz+XIO\";\n  b +=\n    \"fu071QVwWUnGneqitariHfqG3sh+ZXpiliftG8fLOHb4gfUqYoMCtZpeyRKf647lkO/c8QhaV4g\";\n  b +=\n    \"cpLIk4oenxCGUG9tN12vwjGxbj7wF6IRm+GXPEgazYaPU6Pd5ol9a41mnS5Ezu0qEKt4uRavDsD\";\n  b +=\n    \"EwwqJy9MvJU0nf26JfELc/PuhcxvGLpJjEqvcJNKGei5UuNCUC0270KwLlXZNtWrjQyIbhLJVs4\";\n  b +=\n    \"4ffUY/+pZsLeIZyNSPvgU/evrXA5GTHwJxWKp+9Bn96IldJy8nEgcp/eizmQHs4YYffXoDP/rs/\";\n  b +=\n    \"5t+9Jn1o0+bfvSbfQf4//n/vRt95JXiF/n50PnU/0ES7rSr/CE5W5SHJ6l5eNKahyereXhaNQ9P\";\n  b +=\n    \"XvPwtGsenk7Nw9OteXh6NQ9Pv+bhmRACnsnSkpi6rY6mTE08JlsTjsnWgP3iVKhoTKHIqUWIakb\";\n  b +=\n    \"PG8WHlMoJZfNkXra0vZyooiBFBpFgP4EVIbQTK39z0d7BRvw8OKB0+b7BFEGqg81EjQy2EAQ52E\";\n  b +=\n    \"rkyGAaPw8NthE9MuAO8onBDBEkQku0FA5uIYxkcCu93sPBDmJJBpwonA4HAwJKBkN6t4eDbyGqZ\";\n  b +=\n    \"LBTQCU7wehTRuazvaHcaP5uKqfM383lFvN3azlt/m4rt5u/M+Ws+XtLeav5u6Mszd9BOTR/v6Xc\";\n  b +=\n    \"eXRxGKgU4dEFLvVna8l8/I9dnXsRnDyPJ9EGuGIqhG52ICDJgYAkB1ybKAZcy8AMH1voA6Iqk0F\";\n  b +=\n    \"bMHdWdjQ8Zh5RXT3dfA4yaQGXnUOs7e44vjicWJF1083+guWkLNPlyNZmtvaKrJg2shWyvNdCtp\";\n  b +=\n    \"zZ8hVZK21k2yDLghmytZittSKrpI1sG2U5MUW2jNmylfH1UZNtkyxDdpEtZbZ0RVZGG9mmZPmyg\";\n  b +=\n    \"2xdZgsBbTtehiuyKOrlrhdFdUXUdMe5hUWsrsqaaIqbOGViunZRNEPMpgXi7WRVtIWYjSYms8ui\";\n  b +=\n    \"OWI2mJiWXRdtI6YwMRaUVU4gZtLEtO3KaA8xfRMjehM14O0PEofG0I+V8JrCHScUfYOevmqgn+l\";\n  b +=\n    \"gFmnNm61qfbnSbOtKYqL+GnJFY2WVeBlhMHWEBjBfMN/1DvjxsBajL8fifDiI6LhEdzxupBLtYb\";\n  b +=\n    \"EeZt7YkiXFsprnm27evYTxI9Rr/FaVUJbG1PmeGVgEXRCA0j2n9yCmAZbTrokFgamN6wntKRsna\";\n  b +=\n    \"wjRyGQzn9UaS5EKlkIgKilwFMF2AilSAim63HnvwSJT/vsY/ioxVxHRx+ZJu0elpU3QjBN4m7NG\";\n  b +=\n    \"oAHlCl8QBpEgd0LVAMaGbkQ8BELUIA1xCQucCRU4Q9MJd/kg3Yf4HBdmNg+AhCoemL6WrxBCBHZ\";\n  b +=\n    \"EcCPEJ8mYXNttyWMns9gyPgRuQPPMm/uAB2I3ifDMzSE9TCEywT+fRKnYz5cC61hT8DuAZQSi4r\";\n  b +=\n    \"Hk9esp16m4/qUaHyTPCkZ2zV3G7F5hjZ62DgOU6ij2xPNl65wwbL7zULL/gOxaSx/t5hY5vBiK3\";\n  b +=\n    \"20RxsZAKLx/MANbJwAsoi3eRqEtWoNtWOQnZHFovy1bGV6xMlKmxUUm9mRJKx/Q7eQHV80n1vxh\";\n  b +=\n    \"ouAAZOGLyyTFs7As99Wr9HsHXJK8XcqYh/YGZ4nZnVi5uHORIBroUoSWCQEaFaz3fXJXaefbXk2\";\n  b +=\n    \"9CryFPo1v0qfv7gdv0KeUvJI+NfdV+pTVbbNrH5Y+bXN+07IW9rr9eokwh79vY+bZHzK37KUf+r\";\n  b +=\n    \"sbM3UF/qsdM09jG3lszOQjHSrDluv2WLodK0I6njLX69wzWa/XE+n1VHo9ll7PhRakzO+EHXbnI\";\n  b +=\n    \"lY/XUe3RUwG+kLDzn190KN33iNvTvZ59gZ93r5xn6fr93n7nEAvtM/b7PPY7/MYXU2nbDugpWpl\";\n  b +=\n    \"+wT0mDmO6XRm6mn6vIueP2E+1uzvuNHfUn9y9b6Fmoc3qbk8gTequWjQs+Y6WjryIHbZgIel5l1\";\n  b +=\n    \"T8w5rztGybu3/fr5hln7EDLblH/m7e8PUFfiv9g1zWt0wr2TCMY1nPypugw1tl5pgIpJkXfd37C\";\n  b +=\n    \"6N3Z0hJJVL3TXJetokWY9Asq7LTsp6II6E/YgTr+hvc9UowqpRZFeNuJDn+FTjmk81rvlU45pPN\";\n  b +=\n    \"a75VOOaTzVey6car8OnGq/Dpxqvw6car+VTjcf5VEX4IS5+IXabJ9dDlbPAAqmKOIuYLmnJMGmw\";\n  b +=\n    \"6rpyMl3J/0d0fmyMboAV9EZYvLxA5cMGFW1g5TqpxuVF5utFUppzHSbbes1O3nrfCuOfK3hXMrG\";\n  b +=\n    \"pX/PxAbIkPTdS93lCW+jrJbCWWDAsg0RcvIjivSP4VogHzItX8M6+eN3Cw3m/7J6niMgtJoQ87M\";\n  b +=\n    \"FdJulbR8VfRqC/mDKTWimyGCgN9/So+Az3o6dl3aDgNndMp59C1hPghRoK20QOfBh3NOfIvxEJ0\";\n  b +=\n    \"8Mc4B0Y9jdGdoSK7AgF2dEq/s9U2o+m24b3Q9mN3wVQZ2w74Y5gn0WXYPla0CXPfF7RJRa18tTn\";\n  b +=\n    \"LWolxqW+dU0X8sF4k6W//HmHXTE9LeAiAXCY/sdElLNZznZTbIna3YWpUbGS4EsAYU3T4d+qN6H\";\n  b +=\n    \"4voh73mVbFCGJIMI01d5AvixwAjdYX/08jIygenEciWOGkenFt9LTqBqABN2f1m3aa26b1ty1X0\";\n  b +=\n    \"nlwzW3Jy4kNL8nVgRR1RNIR0JCOFko9eAcwBqVNk8q/mchxDhTP1MqhPBcdy9Gxc9waBGEIktUi\";\n  b +=\n    \"awaZwqFMHP9u8kdkTZjiZ3gI3CfULXvF4L2fXK0V6pzu1xw3kR+GwdqdfZfrhI8zJH7Lsl8Nz4w\";\n  b +=\n    \"AAjHICE5LB3xCiu2cwBfDTaKMIueg14wF7f9zItGHL7fFuQ6+EtzkxIOLjxOV4QryWIRkuhklTI\";\n  b +=\n    \"3vFuqAJ4ccs3P5DPdAdAUWKohjkhWXcbATABzFD+YkT+lvAHgiWz3zIMavJLK75dj6fW/SuWXx9\";\n  b +=\n    \"R6KpPJbnVmVUf9VfM5eg4H135Vh/2/1sFyIbMMhHSbL34XS0kvxZbOTpQysSvJKJNQ/MeQiwgSV\";\n  b +=\n    \"1wGa970iFsH3EcozqbiAkFF7/nRbQG/D4mKiybA/9io62TFg6lvo4z1G0zviT9QPfdTpqK/nw5a\";\n  b +=\n    \"1aqG6FsXQ6BpPPdL2Mu9FtkK/isgpkO1ThJuLmmevV6WBCQCrOP1aOQyG+P7WkQeAdsLaOQPiiD\";\n  b +=\n    \"G/iN+vr2a7aqfLcEwfBpWoxl5580vcH7Mdr2Rra6uI+1Dvb6BpKek96ORxwep6b/X4t4MQTRCKY\";\n  b +=\n    \"gSliLNt1cvUd1el6k30ubBg/ESbsMXsW+O16HmxcN2Fjf/yUxgGG4X5XzGZsTLSMV92R2dyfihR\";\n  b +=\n    \"ZUeQ+MukA/jGrZk+flbTi0jhrF+nn301+wuYFhd4G5jPipOx7VuBV67t8UXQtmuDOVNC2nVM6Gc\";\n  b +=\n    \"hl58MvQJJyDFq64yN2KbMCco3cTZsKabWA4t3wRia8KJ5VAZJ5bD9Sgn0AHnUYPTpBRZDhvUE2f\";\n  b +=\n    \"DPfFS6jUPHBUMLqWj4iuhBCS9WKVbz1IK/yqkXCd9y2Op4JtsmdGpdJjuia8lek1LQKUXOpPa0v\";\n  b +=\n    \"+PWDgXzqYAUWXb1eYNJZPjqIgtR8XZj6G7YOxffBzM6+uwVcRcPhTP1LRbs1CAMgPhJx51H0/ut\";\n  b +=\n    \"phX8pm0zmYuK2QVT9l8N6CniKtnHrUEFqiW/LnscrBVXW0IOTKuJBpYJpPqsvrdlEeGwTgcs7p+\";\n  b +=\n    \"lV9P2IcIViex9PyaRNKhkQdmYLwe4b6zRtEa2F4oJ2thmsKFWwikArQ45GbancNwhqBTAddNj8B\";\n  b +=\n    \"klpD4xXw0hVYtXAAzmxmpIrQ79n1P9pvPexUexcIxBaxwn7m520/tlwPmcCKymAf7eCNGd/WFco\";\n  b +=\n    \"r8nWrDJrLcbtJa+I7exJJI4VglloTrgJPaAfz2RMWn0y5n4IQrXvi154OqEK3rVz8DL8kXVPvY3\";\n  b +=\n    \"MYXVk3EvzNxz8P7MKdhM+tQ0maOgwyijh3uoZfQ+d96Xt2GSPFrXg3fL+K7pquwh5LCj/LUZym4\";\n  b +=\n    \"zGteQPip39ZrNsqXwqfrwl/8bVu4OfEyzlnK3kSdTn1hvE6fSG92qede9C51/UW91OvunYhd48Q\";\n  b +=\n    \"fpDVW2Bh8sewyO3Artp4/TttpJxYhjGEgxmjCGYXgeJnpdyKk7pJMc5wTWfDoKQsebV4zsbPgKj\";\n  b +=\n    \"ETkeJT2TDDH2xZVatwnlV7LxEn1sPG3lsy77e7sacJqyrFtw1bNZf5BYJD4i6+plO8ph8LJd9p/\";\n  b +=\n    \"T0VyglLMB+fMO90dY/9AQJNvn1UfZueKzZlHKxrG6ZiZVgAsymr+BBbPM3NoTiiA31qO+VL7JRE\";\n  b +=\n    \"OsW8D4HlFw66Zt/2JEcu+zeMmoWjGA2csbzCjQYTRwy6yBh01Tc+R4T9E7anpT8AOoc7quUZjPR\";\n  b +=\n    \"5iuR5kjw/k+r8McEQfz9muri0AyInYDTiPl4OESk56a9SDXyZnsByu9SADcpIlYvk8RensJ9KZH\";\n  b +=\n    \"Vk3qpaYOObm+HcIOemOTfSubfO7XbuwHNTnvv0buN+XkhfyAxDBplQgbizwlxDhhtLO9UTZh2iS\";\n  b +=\n    \"8Mbq8IdVNe3SAcGO2nRO4j8g9g/SPyD1D/I/IOWPVDgkBIxwbkbczTe99C51BYPVAAsWInvRDbq\";\n  b +=\n    \"0urEgq4TxceO02OCSY+sTQo16eERJRFVAohJ+OBBFrzE7i4vI4IG3sUJpWheO7ClBGuuPZ70Zq+\";\n  b +=\n    \"tYk3Fl0JSVZNq/1GFZs7T878GRHLVa0qLKvS3p79rlAmj5qJZXGU1TTYoUe2y2d/JPTePC/ZB0f\";\n  b +=\n    \"Hp2o7XXk+l1xPbf0nd66n0+nhSqEk37fV0nXFW3+6/xQuHDa/xYoCVVx9ZWS2dXOzKa3legU5QB\";\n  b +=\n    \"jTTwS/kgPoJC0nxk3lfJqcU+QyK11tcbga1AFHPxSUQdb4oltJd4lYAopHKWJJR9QKMrVAX2czb\";\n  b +=\n    \"86WMXGdmtlKMBoGFwr2bU+XPR6I1KHCGhN9UAhuwcpbCvunJazPHDX3GGDf8g2/aI2j58Q8uiEF\";\n  b +=\n    \"X/GHLiveYC9IDrLokFSQBqumvur4M0tBmZfmH43s0tPUufqxlLKBLLt9F5Lu4Nh+pXFFvr3SWyb\";\n  b +=\n    \"NetKFJVPGpHOoSosFouyDSLohcF0QWzMFa2y6IbtoFUum1NRGqW9wC2+sm4+ciRsTHQTdzrHrOF\";\n  b +=\n    \"Ih6nbRFw9mlBEp6QWBK7tr4TopOa5eQClpCUak0C6H8oLLdryRhy7xnhkIGuVTwz6EZEDiR1YmA\";\n  b +=\n    \"ir/vfuXCceF1D0SKiQoF2axwXcmEIFcZxXzGuShyOVSmAFyEE/RPrGxQsjhMGCRJ0YiE5PIwwZC\";\n  b +=\n    \"6MDwrIbJBiXcIOlSWcdGniS6z7pIQ2aAYIhsUQ2SDYohsUAyRDYohskExRDYohsgGxRDZoBgiGx\";\n  b +=\n    \"RDZINiSNigyrymvVCf+VQx9S1jHs4AI6s8DeaV9ok0DE/+vaPMov6QihF8kw0/8YS7IdR/Rp4bq\";\n  b +=\n    \"DVQCUkMxWhGHnvw51IFScvS6FdMNBWQ5Do2GutbVD+SOtjoV000lY+kfjb6uomm6pEyr2r0ayaa\";\n  b +=\n    \"ikfSLhu9ZGYsVDuSNtvoUyaaSkfSHzb6tImGypF0lY19zMRS4Ui6kdHdr8aydAERRqEMafuUIW2\";\n  b +=\n    \"lDGkPQQlHqewGZUgOypBcKENyUobkpAxpC2XINClDlmKPMqQFIhJShrS+SZQh4AoZtEzFcnDada\";\n  b +=\n    \"1nWovGnzCvZ5Izc/ulmdsvzdx+aeb2SzO3X5q5/dLMTcozt1/awn5pS3fsIKOuLB35eiwdrTUsH\";\n  b +=\n    \"aCOz4t/1GDpuLVsO5aO0+6N07acbjm2rMHS0cIV22TpMEV4p3dUZvDpJMytD1RKFDnckGLlDDZm\";\n  b +=\n    \"6V1qVKlnH10qhPSfqlLc6hSXyHnQcNP7wssqqvRWJyss7rU4bmLFM5/OdsREJ9NaJ62GkoRN2qC\";\n  b +=\n    \"OXo40J+iYQ+piRbVIE9PdaSGJpsUfp4WwPV1FoCIV1EpcWvEp7Nt/CkcNsSoeSjz2hHMvCy77/7\";\n  b +=\n    \"D3/lF2HNW5aFd19zk9c85ILXvAY0uJ+5w4L+N77Yt4z0h6xo+oZyHbQoCde1ksk5Ws5T+SFdYZV\";\n  b +=\n    \"h4zUhSvF1sasAIC20EYQwQxWGAFKywJlMSAABNGtrAF2DA2JojESSaOCEowiZIYIoMTv/q+vau6\";\n  b +=\n    \"z5kZWeZH4N4bC+Z0V/+qru6uqr33t78vEyEoo2pSM32MvTEq5L6C/DVuevqxWFqQC7JVWynSGuy\";\n  b +=\n    \"OBcsei3BUrVhLGlLiRcjcu8BDIOEVqcqU1vc1eqvuWonUeOk1WzVLRIZueOQkzelUHPJV0gsEMK\";\n  b +=\n    \"DiwswrsFVm7LCbsdGtKfPG62AUSAZvVjanOg1nfdlyHYjCQNzmPpHL+Cq5z/PUM+D1mmT8XKAn7\";\n  b +=\n    \"mj5fb3+vlZ/r9Xfa/T3av29UtATPf2P2Jb1k7BwqZwnAKuX9lpFA3Rf7lN12+DipN67HMpjyH5p\";\n  b +=\n    \"ryoyPbSTSF4/LZAhakfTV+PWhpEx3BSaw7jMNyLBOi4IJYg3ovcTM8WK1Dz9vaaTtBOichn2ZOY\";\n  b +=\n    \"z2dbyZ+iQduWMCpoO/bOtMPPUvO0ikT6Os9JUCL1zJBfTbSUU3FlYpytHco5d77b34cMCM8k/gm\";\n  b +=\n    \"THQ3OHo/L/YkF5m9tU7njYOzRTyTaZj8Vxs2uYnhtmBKXSc1NNIsz2GsoAaCqyv4T9+CKF7emBw\";\n  b +=\n    \"zWx9QIVstrFIJ0BDxEzEbvw3iX5LyPGQ5HEVDYBiwEnHDbMIRQhxVDDdZ8Ii0+Cf9AVl7RFp7aA\";\n  b +=\n    \"MpVhI4vc2eunuiYRfBD9K/FW5jlZsjrrWpltmXYVbE5t5SuNErPFvUJTArDOX67Zx0qctOhPQlV\";\n  b +=\n    \"eXBMcZ1QJwTV/q++a5tmuWZ4PpYRkK4lfPcC7a6YQeZkEyfHk1LSrjgjFRnJR1wgxMQmtqgx0TW\";\n  b +=\n    \"zmYTzhv9YnvGf0P+AJ+7GQTxWPeKeR56iPeLU8Pj5ibkK74RFjA7SM/REj8oi5/3I84p3mR/eIr\";\n  b +=\n    \"6o94p1m8Z+EMsr/IY/4qvojPqvnGmHgEZ9FBlI28yge8dt0sN9jg/v1P1CJ1fiEXuMTeo1P6DU+\";\n  b +=\n    \"odf4hF7jE3qNT+g1PqHX+IRe4xN6jSb0ilkxa7rx0v7dH4O/b9YM+nitF1yNKck63dEx2BnWltV\";\n  b +=\n    \"LPUawlv+dyZc3JP7dYsjnfzd8Kri7aw5bmAiFjO4YGd3uC0E2t/vQWvlvnaffnXshPgyImKWeiQ\";\n  b +=\n    \"Jc6QJsIrmDKEMo5IkAjhV5HsvsZYT+Cc9MenZbPZozYwVIexlf3G4Drpy4SK/C2MZYEY4k28VF3\";\n  b +=\n    \"fiqESt8Zw3Mvl8kkQY36lmiPvUqzqDZMMJzFi8Cb8abimwHyZDgEO4h2WnGCnkL92ew3F1bXHOW\";\n  b +=\n    \"qaUbRxLq1jy4f1Y4SPM3NOiHtLzU6upSl8ClxMC0MzMvFF0kZGHv3+8Dw24MLu/ZH4LGZIpD7d3\";\n  b +=\n    \"OLYGRZKozz0ky+6Jw3UJoVkREiLCNcfJk4b/zb1wbjwsSNik8EH1UALZ5R8RiyqMHZp3JeMADdE\";\n  b +=\n    \"E7UygBLLC8BOgiC5HtdaXQirxUzrFe5bBTkae8DuJbbgbJNUG91mDpv0iNr6FXj2B2Q3DrSYJb/\";\n  b +=\n    \"yo2MTVGjAd1sd33N71U0SrCt+C/6aaCU8P8/IGGZn37lOgTkQe5gFFYUsBDAXl4TvkCwZcSS5Ju\";\n  b +=\n    \"KdKem/R1kwrvGxORj3mPXx8XLU+/zrsDdw7PWYcK86ps8VAgQje1g0Vn5FqC2vRmTqYqPgYwg0D\";\n  b +=\n    \"NEI4zAmMcdbXs4emII4ziAXB25R8kBu21He71Kx0KLl0rM04OCOmWSS4lk2W6lQPEJjiNzMouQY\";\n  b +=\n    \"8RwHJFrYHWDbTg6mqdTTyu66kwIeEG8p/1rEiuDW3+SeRxGXnAMVwL7gHfJv7QilwlmG5xzWwLc\";\n  b +=\n    \"jwx1YxjVVB5jfChUNRW0+zn6+I9siqCyLSSYirrZqpP3JCiWSb5z9NoCWuqTyw2Go4zEE5m0QxV\";\n  b +=\n    \"VivBXDlGtZa4uXZekU4ioW0ixd6K7Kth32pT7LpGtX9VvUr0mPanaiOFvcQ2bYiOcNxvSMYqV8w\";\n  b +=\n    \"tB2PJfVitlV2kGqlUIwgM+zv3VeEazVdfCd0ubWeKIbHopK301KnsVikGx3UBYU+U8o9xRbljOT\";\n  b +=\n    \"W0Eo4DHqEiNsH8VoDNUYVhpuW0WGF7euBwpSIR+m9RMu4ScajMucBde/lreP61AHjtvoKDgwXzg\";\n  b +=\n    \"wW7kv4CqnLfxoV8hFiYiDaX4Z0Swi3J7g0ZieHQaGO6KyzjTRl+G/4ONxdmmk6PBNjtPsoVFrvm\";\n  b +=\n    \"iCRQWjGxGI/rHtO7B3E/3OwRZwM++Jlo8DPR4Geiwc9Eg59pFfykIauBbnL/Mfh5KtLz88kWkUw\";\n  b +=\n    \"vkfztKo387ynkf9+uYfp5eeACRJ4VMJFwBboHccfhKKRhzKozRZWu8j4tLelm99Slp2dspaxnMb\";\n  b +=\n    \"Gr1PUoee1Oe8g9jYmZmTfOzMzsmfk715UdxGB90Pbyz4hYnGuTKxR0R0k9N+WGnh6gC1Nkdpdqo\";\n  b +=\n    \"Tb5TZLlIpMT6gUCSnEs1dyXlngaYsoKynGqsxXyjDLAPAZO696ayR/CeVucag3cmSaVLLiDpHal\";\n  b +=\n    \"JFwp0Ssli11JEJshHkhAoEQdrJLfESHeliinIdBJnnJUe8p8Kdkd7Eo0epG/oJA45G1i/ryg+rt\";\n  b +=\n    \"o4bNuOpO/P+DhPzl/f+Q3oi4T43tQg84uUkepM3oKLQgZL77g4GDB/GABelD2zSxo/UlizvWs+J\";\n  b +=\n    \"aOwZuNUoCmouVGKUmkfCBY0c3Ua0gY9rDwjBgEPcBsB3oREZtbhpXlMCXdSo6VFaKb1j0LK2fDp\";\n  b +=\n    \"HQro1h5nkiwdZ+PlXNEUrs7hpVzhf7jPJ3qc0B8oy106m898qIbV7Iq4n2v5FT8zrVd5Fyre307\";\n  b +=\n    \"hgjXtfTbDxWtYqRYXqwozi6eV5wD3o562MksCDuNcbBYEHZ6fr24CjuN1oursNNZ9eIq7JTXi6u\";\n  b +=\n    \"w07J6cRV2ateLq7DTcL24Cjtl9eIQdmrUS6uwU1IVW2Ws/5b3PVlCZ4nuVO1ChhaCcqGV6W+kyo\";\n  b +=\n    \"URLA43t4FyodBA9JCxIioQXaPKhRH1LvHajleZVRGn07uMPEmZVX0oltl0pNKFIq8DYmr8oXSh+\";\n  b +=\n    \"91lJGcqonZhBBR1mHrPsWRfreQoS/ZUJZoMsN6fHRPz44nMrLUeT3HyIdjN1RAFFPbuNVb6CwqW\";\n  b +=\n    \"rHH1oOzGfGDPIsHFbmFekRPtbwpHuEUTwcdwiJKAkeBDFGStbaWwKB73zqbU6+sNaQuu02WwXBW\";\n  b +=\n    \"abwM80IOspRICsn5LBcaOy9veEsDT7lnf7ddOxtaK22Em7WNLC/POjJESFnJyixnCrjtq/F2YQI\";\n  b +=\n    \"QCYrto9cz5uTEMRlkSGjJ3wl/ppyEr3YsyK1laUEEUc5CSFnqJk7EASqtV0YgVcddZt9pVijI3v\";\n  b +=\n    \"idurRzvBLlNMiIrDxsOEC6x1HOaCS3bLzIZ/CTEUADiTuDX8Off1Xd+XJznj8/kvK8aSbyJ7yaE\";\n  b +=\n    \"kmMbrjMSI+pQ3xzVt2qeXljV5qGgMjnSak0yZ2oPTTMxZRKI+cSsULwRGn8kXYSe+Af9J+QwZnL\";\n  b +=\n    \"ZuLFxkjaa2dBwqz2ybHm+4qyzR5/3/HPGzj1v5aqf+unzi073Zy742f/j58bp9bnpC+61yfI7m0\";\n  b +=\n    \"QXfe/zwI/7tb/H2gq/9udYW+7XHuxb+yTWzvJrf9B33Hux1vZrt2FtyK/t6LveU59zay2/9o9YG\";\n  b +=\n    \"/Zrj2NtxK8d69v2hb5tn/lc/Xof/ly9Lrd/rl7P38HaMr926qhbe75fe+Jo/Sx/fbRes68drbfZ\";\n  b +=\n    \"3NH6HX22b89P9q3dibVz/Nrv9l3hpr61px6o1/OfHqhf728eqNf6qw/Ujzv6QP2pfBRrZ/u1Dz1\";\n  b +=\n    \"Qr8vs/fW19z5Qb8Fb+/a8BWupX5vxe7Z2qlk0G9xfIr8mVGjep4vhX9y6QRVWxnEWCJmajOAsEK\";\n  b +=\n    \"I1GbtZICRsMmqzQAjaZLxmgZC3yUjNAiF2kzGaBUL6JqMzC4QQjuMy14UrTkbkzdP00pr8ywYRh\";\n  b +=\n    \"NZiAGRxVMkNLwFCrjYvCkSuNi+KEE1K7XEUjOzbdhFA8oK6LAQl99VlITD5zOsiO3qAsjhPkOWf\";\n  b +=\n    \"mJH6mxAx3iONSl3ynSEgoc+CMurynCjYLs8Q3A36fME7oM8e0rT6XkCeVt8ZSNTq+wSZWn3rRKr\";\n  b +=\n    \"22u6y/jAHLbhoXH4K+RmTn1x+MvmJyjAIugYZ8S/xMn2D2+HVbYV3dji8rEPhLc3C69kM72UjvJ\";\n  b +=\n    \"BpeBOtfwWTn8x3b+CN6y0JTvZvwmxMYUSJ3GEOhSU385wWVwvDMR0rqm9mCwjrxX+WQPct/2haL\";\n  b +=\n    \"t9Eh7w4NjkHi91gK1CKjcyKsludbdKcImbKSLyyycCKYiVESxA7VkCqqA6kiupAqqgOpIrqQKqo\";\n  b +=\n    \"DqSK6kCqqA6kUorvlFz5UuVW0ZT7klqEHYHX9SqiTdkxEepseLVck5J+nVJwaL8uhb7oAyFHmrv\";\n  b +=\n    \"DO9zNYjUVVtI/cHun8rpu7JW5+/mM7tAALBVwBbcCYuPEtRi/A8rTlE8z1awHlHYUmNAI52jd6K\";\n  b +=\n    \"OiTZ98LFmVWRXIFuzETMoXiW4VV0uowqfMpLRFmn/aIlHoRAISFCzts2olIO1oFgiA9EK73671C\";\n  b +=\n    \"OKIgHJ3gru9fKJoih2nPxRJAfC2CNVKWh5LlLkzxRxMmDvT8rFEidxSOU93uNxrZT7s+oT5se4Q\";\n  b +=\n    \"83uSXqfFT8i8wOw6d409BSzu0Br7ZCIcrr019iQmjLiVlvcaJby/BPnbRaYbATu6j8lMC+8uWez\";\n  b +=\n    \"uktrdIV1s3B5POjzBvKZDHUs6zCI+aJFSPW4fS+AKLfRGzvP3ofpePKVuCZcu74GPTK55CH53Wb\";\n  b +=\n    \"zbejcXp63N4PvKNJGdb0LqHjs+Y/8SnIz9S3DCLvoSzFvtTeQlQNpuCjZfvgR/wpfgqPUvwW5Ta\";\n  b +=\n    \"6aDRl6C283Cl2Cv6XsJjtjwEsza8BIcsuElkIxfvgT32NpLsBf+lPI2E16Cg+1FXoJ5Z0oes/IS\";\n  b +=\n    \"PGrDSzBH0IzFS6CpzgnvL4HLiC8BNuIlOMJnuPDuksXuLqndnbwER6y8BLNWXoJDVl6CPUZegnu\";\n  b +=\n    \"svgS3Gf8S4D7qL4FuCZcu95vwEiDXWV+CvSa8BCCPXvIlcOaOewl+yhgf3SSj7kSUfymWYdttfV\";\n  b +=\n    \"rBb3NpJRK0GKyxAjRquCzx8LvFgI2E3yGspUjCRUCOCkqcI5GywPvSCsMo8TRGp5oaSbP9AMiZu\";\n  b +=\n    \"iErqw1WaQmMIusBD9+QggNdF1BDarpVd9o+yCLlNPaw15wPJAKRohcFsMjtqFckQMlYwJgakeNZ\";\n  b +=\n    \"F5wLZf5cvOO07zRsv3egNJMwm6lCWwFE+Q4AGpv+iPlYS4Z8VQiSjD2+Evfm4aCyaIAoQ+aihr4\";\n  b +=\n    \"LmfA5czDq+YzKhJCLoGccFJGggXKd5PVErxxxV/+km1acVz79SZ+faWQXcoXgSpFnSKU/wIhaSs\";\n  b +=\n    \"bIWLnvE7PiJynncPxb5Xg5BGlRoEcQbCGZwwGo97KzkjPCNHHSmGTFwlTQK0bk7EHHSIiSc6aWG\";\n  b +=\n    \"1WqeRllUaIXm6gtUxShW2UuKpV7QCKAb3TGyj7eh3MLmXAyXMYGchmkM8cX2vZadgzl04fYOrs/\";\n  b +=\n    \"URHrSOJO7dZv/pTbeBOAGLd/ilnFRz5V7U2g4pc1Vhk4jwqSQ0+X8VSyvSw4mWRhIth0NxckPu1\";\n  b +=\n    \"iJpxlW1TBXnfxeW6U5RjYJaEybMf4k8oZOfkMTOmGu4s0Tv10Vk9X257I1M/y0kDqlDN/Oot3a/\";\n  b +=\n    \"4rs0yCd/bw/8Dz4+eiaxLaL0jUtqDMleRvNkzfwPrlgsy4TBiK1gkE4RIBJKzupEJb1BCeV2bbR\";\n  b +=\n    \"F7SZo0wBiCRJMpk6aJuYw0T4nGwaw9YFTyfu5loVJbXuTcZRgev2k3WRKuEVKYjZxVWnvFOppRB\";\n  b +=\n    \"AoQQKnlA8tWYKaMrWt+MbSx566slILldfGyLi11ZE8UijARiOgBPxpTmUQTUxnr5PUHKDMFeEZJ\";\n  b +=\n    \"0M1AQGa9sZ89y8Des7iufdl4R4rVxrNs2xBe93dATxX0nioXXzp1ohp8hvwo5HG8HorQMr29cqS\";\n  b +=\n    \"FORAonN4w0fCb9oz6/u22XuICv6anqAvbZL5D6CxwPFzAhff9ISCrnmXL2UQJBZpJ4KmpVoqUFY\";\n  b +=\n    \"hBI8jyRuj/UqWoFHBNaCXjolqRpatKT9ELM99ydmDEfTKJtzXzJVRJD6FolnWdQKZEAEUMRXeTp\";\n  b +=\n    \"d3IJV0i4aYWENLpNrJwlYQ+JPZ0toZHuEFZGJXwigajnSYiFKr+d50sYRqJS50iopjuClTGhvT9\";\n  b +=\n    \"XAEgc5/NUWb74R0NutZgSmQbDeux3Nn0xpe55xXl9+0lICRcDZ3uRgxQelPAghAcdfHFuH487Q0\";\n  b +=\n    \"pqxRcjdHow0qJ2vMR1pEgNepE3liK17CXMI0Vq4hdDVZHa+hL1kSI1+oGA90Vq/UsUSIrUDSBkh\";\n  b +=\n    \"lKUSKgoqUqsholsVRRrmOje0A3MBPqK7bWv373OOY0+192BMhx0jgxRfsxiLMJqx1lspqMMUGI4\";\n  b +=\n    \"CyhURytnTa4uv+qqele5fMqNj8MbVxa2x2zkieXXMG6wHQnCkPdCdx7r7hPJzgVHRNAZx7YZ+yr\";\n  b +=\n    \"3N9vZSTfokLxIVTTYFapjQ3XWLqwNzIu++phafdY+h+oQLVy+wVw1IpTh5fFvHY5KGnTuFXZNOJ\";\n  b +=\n    \"lvJQm4WykfddvyHcI9gkPskoe05K4kXtR36FdiO6JKOYFTdf0kIIIAiFKq5ig+Wc/niW8iE3bN7\";\n  b +=\n    \"lAoXOe+VvdzDB+qL5yIRCJvjAGuNoJfQiEKNGIiOMlVhOf9ftPLz7202xYqz+QKmcJcSc0M6dJH\";\n  b +=\n    \"4vUK83Czz38TJOYG6UhHFZHJTwxSofuFTbW7rIgRaWupbjEuB3klH/0bInZQVwQ+GIhLY40LCrA\";\n  b +=\n    \"2/xlKp3dE7E8a6eNGCMpiYjfb4lBp4FVaXmT4yYth/KwQ0jaVD4yFz7NYIUvufnJZctVfriFJd1\";\n  b +=\n    \"ZvGinlm+cWkk9veav88js5PbsZnOGk0omLZeXt79KQ3hE37dpW1869oZuIuDM1nSGxWyRB8SARb\";\n  b +=\n    \"WdKOkOLt39TJpvaFO3t39SWTTnVfWubGiLsTD1nyAAXjbCp+RJJl4VCA/SCi2bYlL3Eqt7vKgoL\";\n  b +=\n    \"F1nYNPQSJtRGL6JAwFBNtjZW7er0JV7yz83Hpg5g18R9VhTBTeX+iP7UbVltm86h2tyWeKlc3a5\";\n  b +=\n    \"3GTOB1W1v+O1J2K5zrVFuby7crvOvMW7PFm7HTWOtGLr+LqJ23Y7uaa8CvpeT5/nYBzgIWQRg6y\";\n  b +=\n    \"84F4VPdFkNNSkfLDGhRbVVTN1Zuv3q5UTEKqQTdqoz+vPrQgn+ouQOI8JysA1+Za0XnsPa69Z6Y\";\n  b +=\n    \"TqsbVnrheuwdv1aL2yHtR1GVm+3xODerDNwYG7X2JNG6+Lm/VoDH2uQ/EEppKyRbFacCKCDulUs\";\n  b +=\n    \"e3+iONykKZRDVm5ErXUi+CRlicWyl9j2d9BzowDS1B82S8RCRvhh/cxyzHVq6JvCaB2j0Ixy7es\";\n  b +=\n    \"E19AMdzhPD8c/YQRl5B2RCwH809uwP+vgBEKHDKwfKDdSPluQCVCe9FrNoMy7Xg5Dnn3+iO2md3\";\n  b +=\n    \"Uj+mEVmmby7uKbycSh707ibXUE1iNV8wH+oBvAEasl7i0ZptcJ7IL7adxb9jM+7p2Sb5rOMMS93\";\n  b +=\n    \"Zje0gOS6qT1M4Kq77RnTPrOKHNuV9lLI8Iv0ol1Oy+LflcWx3f+P9E7ZTHb+ZLo7aa8cQ+Jwvja\";\n  b +=\n    \"lAex8sT7fGLdD3CSp8NJYpC4RmWhwoZY9gEKqwGK98d2yD1yr+Ujvnc3DThQUuvG9WlJ6NNG7oL\";\n  b +=\n    \"CTOjWEtGhT7wQ+EhQNGfPppuz2mbVMGfnppvbtc0qRMO+TTfntc2qU86uTTeP1jarMjl7Nt08Vt\";\n  b +=\n    \"tMLXL0ZqIIvwpWAiR3gvz86IDgfT4geN8eELzPBgTvEy9438K6OAFgtbZdXZbVKmKwz7Acg652x\";\n  b +=\n    \"Eveq5q9G1hgW1bKOvf5bjetaxIA4MTpR5XfsRtf5CnFigfqUgv3JWnQi6oIRKAk/kt8kZsNRG7k\";\n  b +=\n    \"n48DnWka6EwbMqdqFoN7Q8x8LpbuD0SlzcBl6ics2OOErfYg0pcVPBb3sbLPxWtj+NakI93tmUw\";\n  b +=\n    \"tyEXr+52wuh/NZN3PwtG7l33yGlCYEobMveai2umqqgQs8bwwmdrydt7GicBkanWjpP7Q3JeqzV\";\n  b +=\n    \"csphaWKYHHd1u9jFKUytQ0Rw3m6SC8MTbp9gGXhLORXp3w5wZw3UOEq3FD0Xh1iclfY8K8yRW7v\";\n  b +=\n    \"7+4ErK7fl+34CY0N6C7iVvtRouooMJuct1ZWNKU/M6wqksMIY9nSLgZ4mK4514/93aNdPCDTuH/\";\n  b +=\n    \"vpzepWKEgxFhMz1hcxqaLDFsXDUSc75Zri5A2gBgtpv22+3lCyliDr/vCy9FhBO+gsulgHvHune\";\n  b +=\n    \"5mnI+W5zp6cyA/De6yB51q/lvwLdpr5oesRI2ha1D4waN+o3DmhmFtSP1tVck6/1ej4byyPMU9T\";\n  b +=\n    \"sO6NFPXmyi1nvVS3sy2Bb1BCWmg8Uy0XcmwYhR2v7BBCUaFvX0Go5j9QQlW6UwST7fuh4n+zCBr\";\n  b +=\n    \"u2b8StuNK/Wx3uLzfsLrcpjxkPLab9k/PwlvcjW0ou8ZaMdwwebYryIioXoMazXwLlhzSa5JNlF\";\n  b +=\n    \"sWQXuQ0ru6LcFSwFvbt1A7ffn11ka9lFap2g6j+reXtoASPpRXF//tgheTzdBmRRIADnWmuq2yz\";\n  b +=\n    \"nf37TCDXMpDIGaXae/yL/P4uMdiQ0I5f3yte7EatxAbVFBnaLkM7GZIUNjJtv7/EizaluCqdAg7\";\n  b +=\n    \"n6ZHRq+BxQhUDic+hEPiyMIzvKuxsLjU+LEff+YxjoB7qASxZAAi7Fl0axLCVCteqW0kujVJYal\";\n  b +=\n    \"0YNWWpeGjW9GLnolapYRgiog5Zka0fltijiy0wU5RdhgkltJauvtOsreX1ltL4yVl8JEX7JWy2Y\";\n  b +=\n    \"iOOq4pq/9dXYLNuuQijCpSw4WY0JZb3AuDOafy4Rgtg2xvuXynIGobf1lJNgludYj/jv1T1PFju\";\n  b +=\n    \"ugpUgpRG5wQtEbrDotEWDsCEahBbz08vK6IrOSNXTxgQQZBvYjzZwOTFgMYS3kX0aIQnVFuhC7B\";\n  b +=\n    \"YVrjTKrFUkVxEc674oN4wDU+aGlOGiJnIOEG1+Y6KiZu7xi5s3GxEBOuSW3uORrlQcDmtx/oWEx\";\n  b +=\n    \"MTlJSTlKJr5YWXPtRtkRja2BDHnEBnWcetL7JBxhyh/TGNH/EroD6bLFPdG7rOXl0+7+pSZ3Fk5\";\n  b +=\n    \"+2m3whpiCnnKMpkDHn0LeUILwUK3Os7Vac6yLgqlF9RKx0NpUSu9IJSuqpUWoXSsVroqlI7WSsd\";\n  b +=\n    \"CaV4rHQ2l7VppHkqzWmk7lCa10iyUgs/el2L6b7ZwMbrBm/8/gl+6D0o7hctNTZd2c+vhWDgud8\";\n  b +=\n    \"U+aQIZ4EntlY6Ffgfa9BwyOnGNfodRY6aIxbLr5QzvpX27ShLRbuOzrei2QmJBLd0q0aLV+UcyU\";\n  b +=\n    \"oCfpB2pq5FH+HajSm41YH4F50sVEponPqcrWJVyVP1yjP4J5ozXdZbZH9FT9VqRFpExj/kMIV1s\";\n  b +=\n    \"zkhebl9J/grJmqqnmlHEmRtfo2fvq291prDd7x3J0X33Ku0ycK9uCDkG4Pl/LWfdj4ZEAJF2veQ\";\n  b +=\n    \"XYkmf3WU0b04c0xdw0iHQrTX8QjjA/4O4FLsxY6Y+42rm3UoqLzML0Vu1Eu4oD/7ebBQmEoxzlP\";\n  b +=\n    \"vqRQhwNMs99aLdfuX1qp8EYy/flYXEPFeWHzLe09qs+1ib9C7K6vpJeC/qE/XXr43HOZzy0WyXO\";\n  b +=\n    \"6V8B/ttkiomm1Z26Csnvs1Zmgw6AUHjtuSnJB4kGerMoqM2iCp5FJJf3gjp2a7VmmEFII5QOchx\";\n  b +=\n    \"SZSaMalV4rAY0zt2o4s+/jF/w7damcqkISHEXXpsrYDDhKv4uT3Mb/3nw/yxPcx3PPvDvBVekOY\";\n  b +=\n    \"28Q+k1OvtjFDd100EoAXcWU7l4E5OneHOCqoSI2hI8WLluz9wQ/fsu0TgYFVX5iNdUvSNdkX5tD\";\n  b +=\n    \"skE59hmfPIcNxtexJiBLMLO9VFjz9FHJmz0uKpaan0WUX7QHF2cEGfdZfbVZgIuQumkiuK1oHir\";\n  b +=\n    \"LDLCr9LJrtgupMXwweKFWGX3O/Sll3g5FheDB0o8rDLcr9LLrvAL7KsyA4Uy8Muy/wuo7ILXCkj\";\n  b +=\n    \"RfNAsSzsMuJ3GZNd4PlALH9EB7/epG5fJdtXtW6LbRueKSNyZR0qmRGs5ga2EeZdd5aBdRDrDTp\";\n  b +=\n    \"vsBtoAyEE3HDTxIz8rq3LET8HxC2D36VHeXnawkaEyyl6tdzN6ducwjXLcfzfvc25a/LOWRMImS\";\n  b +=\n    \"wDax6m/QDv+cyzIr+c/soVjGlcXzTwLpy17fruCnj/0cruSF7ZypWHPeoVJIKuHhni7Rm5jlzhi\";\n  b +=\n    \"ru6mmEDw7wcL59+w706UUyKJrKwfu4VSUDRCp5tRKSkTN/ehnvTcWwAfC3czbUpeeD1NlqsuBo0\";\n  b +=\n    \"46oC1406tI3oe6ofHunhRdp6JDbZ9v/tOW/dLGgbXiA3fZzquCdLf/EQ3dOv60EjukYc2aU2nLM\";\n  b +=\n    \"qe7Sxhy/vJitDTxQLJQIjIQ2iKOvbstNsa0/jxKmcOK22NfEgm0qSpsl7KzR5bzXDd2An2uo+OU\";\n  b +=\n    \"lb2GsQ12mqdHcK9ExppO9qlD9Hk4wwrrzbXGEjuHZSiQC+webvthQlROpl7GUJkTZGxClHxBQdX\";\n  b +=\n    \"FbOzByJJBvfdKLyMUjgGdlDMrUIzDFx1Gxpuj6plcvYWbf/FlWs3tgtTZPI2KFWad0O34NeQtIq\";\n  b +=\n    \"v40zxqTHKxNXjiu0KXhtChFMKC3VSDoakaccyZatCIJHDIJHRHzjs4uwWwKHgi2aolXtThW1Fqk\";\n  b +=\n    \"8zMXJZdZEyenqHWqeAHvUrNUwrtXc1u6oXl00nVbWPbLV06epZqtVsjPAc0NRizx/bnj7Y7UlgE\";\n  b +=\n    \"0V+DIm0flncCpkEn4PaknzRgWurFeOAskWtSy6aShiHqE7a7dR15fK1sZHjeh98Izu71E3b35Po\";\n  b +=\n    \"quq1XU07XUVB8STzaaYd1QnP8S3ffDMB1M5XTj1wbR2am4KiGRnUd+GKx2qdle2iyT/ExPOM14d\";\n  b +=\n    \"UZ1EDsv/0NYvlz/aKKoqV5VdtJoSHPJHo5rvIhNjuJ572Q7xcrOmyjV2hx8ya+1BN4dCKm2ikNL\";\n  b +=\n    \"9sU0EChGmmDScYEJ1Y/eVzkbwdVwrpBOrBXEVh6i8xNiUe+cR220siLGtxkSKCbLwIUWCL4GhSL\";\n  b +=\n    \"Oup84nNRTVUtpzp7fUJiL2c1RfEDRzr6uCwE0eL7RRjeu7DaqkNqg868Zlr5LaUDyBphYbvQJPL\";\n  b +=\n    \"ok2RepuwfibKcdDHa8TMSpAqyQQF6rAy0MqOUJYDldtSgarxMEIhHGLLTehnpYw2C7FoTDgthqR\";\n  b +=\n    \"BMbb1nIJ4bYXcQnRtheW37tTg22re+W+vW75nvdrrO1bgpRQNkc4j/KXLGR5XKr8zDaf+c8P7UQ\";\n  b +=\n    \"/8T8/njsNj1uYHVmJn17I+LhU+ZltPvOfH9qJfuJ/fjx32tqtMyTINnuKKyNzO0zGKuKqeDGKq3\";\n  b +=\n    \"gxiiudwdUP5xxcqRbUcacSwRg3ldvJeD1d5XbSJCS6mZXbiRN6JblECk3ZUNJBnjaR2L8k2XkFY\";\n  b +=\n    \"mGuarDbx5/YTydTqRX4cYXJCrNaIVBe6be7XtwEGlceX21H8mSNtwrJIhaiyiTwcounPEnXQi6v\";\n  b +=\n    \"SlRZC3iwiCpjZKOO46fjCg4sIT0SNjYq+hbNGe32EbaEjVWpEWUysOFLctQFEm8oJLSwShSJxzo\";\n  b +=\n    \"05UfFeswlFtGWWEQmsQhRu5Ao20WdZSSx7CwnV6WzKEFVCasQZzyLocbO2eL6GRUQ9PPET/J8oW\";\n  b +=\n    \"46h9FnOvg75xbEoq9WJwa1GRJZWifWvaU2Q1uW1outbqnNMCpLV4rlbanNsEqWrhZNCEtthgtk6\";\n  b +=\n    \"RrRhLDUZrjI4/w2u4d8LtJ+i3OQ8ls8H+m+xfOQ6luMIs23OBspvsVZSO8tVpDQLEc2b7Hc/Y2L\";\n  b +=\n    \"ZZunqRULWOpmUon9sUZk8fiyCzCtMmVjS3d4sjt0AfCQw/xSXEVWkuwelrsb1Fci6icmaCYmaCY\";\n  b +=\n    \"maCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaCYmaC\";\n  b +=\n    \"YmaCYmaCYmKDmByRg3i5S9ISolZLSxmevRQKJHwkQPTt4yZin7TXAk9m26IWyyg5uud1N3bol1S\";\n  b +=\n    \"+LlCgDgEL7XTGXL9a3/NeGC+d4sPpw60LwDd8r6SUbhtvugY6ZA6zlnx8jMtAqkJzL/ND5AiEln\";\n  b +=\n    \"7IFgkmQA7/2FcU6ClTJS9/mu9zsb9MsJ+Wy8IJE7lVCfM0zeiTWK7E7Ir0e0SOE+lFOZMzkVQ9T\";\n  b +=\n    \"s+9ZVp1qHU9G/uV5OZc/kVEc5zaSndi4KN7qdn1K4zWvcHHfEWXb9J1Q376tai505qlQeJUOC0f\";\n  b +=\n    \"WkYu2UpaIPcCARRkv+n0TPKbLvlhovocy0Qv+QhNRGH3n/J2uWI/K+DKY/Hni2BeCREvht9wpMA\";\n  b +=\n    \"pw0tGllNy/iTULaHxdulxVu81f+S2HASNre5MzRYhgekM5Zsea4FWYL3BMriniym24i6W5j0u0P\";\n  b +=\n    \"PvuE+Kn56HW9TlNq59eoJ+4elsTj20VTxypB/XdH3KuJ2f7Iyu5Q/h7AMM8iELoY8SI7tmjD8dH\";\n  b +=\n    \"2irgEJhVJ/kHkjWaokvsi3MA42Y2L/CruIsDU17mtVHYid7bcTDZ4/USvn4TrZ3L9pLp+C9dv+f\";\n  b +=\n    \"R3f2usRuyq8YM1+YeeJ03e0ibfY59Tk8+aepPL2hk0OfCjbPI/ei5Nfsvpm3wmHmxy3MyiTU7e1\";\n  b +=\n    \"nD9M2ly3Jo2+S1o8o/EksG7q6m9Fj499Jx2DYPCc/RUvCf1ndZcrJqy4/ZR4U5XxB2VrHd5OksB\";\n  b +=\n    \"wGW9/NOJ7wdw5BX+SNd7WvfUHtszG5VP31HvBx6NF3YEBJAaSjvbCiVn9xpfq3aNqb6qN/rY/PY\";\n  b +=\n    \"0XFwU7VhteJb6ru5v5aDx9xK4IOVe8trd7WyiZJ+pZq6ud9sDDemmUD7KifwpFAHkzlPOxj4y6v\";\n  b +=\n    \"uk+o1iJkcuMeWVrLYwLNMUcGpfVq0nVraeTzpXvXkgnxLJLQVeKl9rA9HxWC1zPs4/S5B3wgSJm\";\n  b +=\n    \"LQraEEhxf1cjAEz91EGOo48pgIqG5IGa0S8/sOkmYBbiGFpTqtTrGc+5S//s0R3dlX+SwO3Q+5P\";\n  b +=\n    \"MKY5+ZGqmiWhATz7JporzT+F+D19i6e58cbUs927YGxy3krePt2eLUg1C0BXEz04X9NseEkCbks\";\n  b +=\n    \"SsCbUntJvanWIgi7g34qNjQXRXCqbb5uv7yloM9v8a421cS4v3XdRklBIsJy573CUvxefwPil0f\";\n  b +=\n    \"nl/X7T+b3ywXu5qRwVbZSIHRuO3/+Fw9F4FDE1FXHKvW4diFWu316t2InbZmZmZu1aBGiBgSnKx\";\n  b +=\n    \"3D+Jmca5S65dP44oDJ1ivmuwZLJfxWjrsUNmkuj3OPanmQV8/c2POot16p+3ubvTDr6CQgph8g8\";\n  b +=\n    \"HL6XTFJogUIurbfJ2vvb1KpF5fF7q3rJV1M/2TwIrBr+ZDzFGpv3nZZVmrufZzlP7lx3+AIOTmW\";\n  b +=\n    \"H+S/5HcCjiIu1NPmyQKbPqCrPPKyYr2B5VYbWyXeQg+tcUmPGYa6JhznzOJO1gykmHJmmKpJO7p\";\n  b +=\n    \"eEM/caIbR9VZcd29VdIbDvCpyxm0mO1pDkaA2LsgA71nWSuHWJG7hgMPXRH3WXwwJZDgvkR09ol\";\n  b +=\n    \"HhCo9gTGnUR1UVod/PUdLn95QKvrCLTQejPBqE/G4T+bBD6s0HozwahPxuE/mwQ+rNB6M8GoT8r\";\n  b +=\n    \"Qn/SEZg8bQWizbuXNKaXtqT7GE7/04b+MdjQH1R6VH1qIsgIRoMNGiwmU0DczxTALoosGLeRS4/\";\n  b +=\n    \"torQAbvXXQkay7C6uNxAGYIZY0Dcl4jhKaWCU0iCpLE/rc05lezy4PR6RdPGl62fr9bP99eOLF+\";\n  b +=\n    \"pnZULk6leoWK5+VVH4qqLwVUXhq4rCVxWFryoKX1UUvipwE1iPfo1k9qLsEzKcldqV0uFgxeHAn\";\n  b +=\n    \"1XV1/WUtUPbzbaCsGRAPYgTSTXWKjiRpuBEMsGJDAlOZFhwIiqOWQOLCFRkws1eDtzQbd+1EDOC\";\n  b +=\n    \"WfH2zQeKtuAwZKd+zIid+PePP/XMcsBC2gGtobvVcCMKEZl449HvvDcFQKS+c2EVOzLx2wff/FA\";\n  b +=\n    \"EcMjA5n78yMTOg994dwyAyCK7VRiSiaPf/faDtmgsuluFIym//MWP3dF0n0l7SSzJb2MiWVFBlE\";\n  b +=\n    \"MQrszdm/Mh1+CbBHMR5edIGFbKO6DYmLm+zLjmRj389HRjb7L8zSmwxTn7Q4ucFTIJJC5gUM58K\";\n  b +=\n    \"6JXEGWec5T2+/yW++Y2reRyN5T2yut7+TldS+hF/kjWEeml7UzakY9YZ+wQoIbE0xT2sr6iMfyj\";\n  b +=\n    \"fBVJTB1NOotxJRmNXYUmuTmoX+f7CC/3P0d43kgmEUayJvgF9TgZNO7AEZJ4Az+r7ZX0XsEMkwS\";\n  b +=\n    \"C2xEX5Gww7nQ50TPHgBznD2c803mA9DTFcTQn/j70VZhD218YiaheMS5iIkiCyD/cxDQVTp4RUX\";\n  b +=\n    \"KRISWTvGeODwJmSYWzxgPWjIDEmvK1jkkIO8DH8j5BGGW/D/kWmlRd1aDZsVqLXxB1P7rHSNOIF\";\n  b +=\n    \"lXMg0rCRuVF3BQLRDrZhDTJ8hKdpMH6rVfcNVT+MxQRhTtpiNKhWBqWpG1xgFE8tF754VDtIUHn\";\n  b +=\n    \"tTwsjoRg6JAlmSeZLJq9tGi21PqRUTVQlsGdR1R4a4fml508U9meKL+/IZQCZMHZZV4H5Z2T24L\";\n  b +=\n    \"VGEPCi7m/NTmdeab09gnqHBMJxYWSOnOYEB40nrP52UR1gLqhqg4GfRLXSEw7hd0GP8IGYVlCgg\";\n  b +=\n    \"v25XdisPzrBFNsWtmxJKFWLR0aAbyVlAJPR009KX82rCGF/5CpKu9elINGa1/4yn/Xel0d10Jdm\";\n  b +=\n    \"4/SGWxIVCjMy4Qg/ol3ToSnsOdP4ZbN/9rAhyy3qtac18w2QTPbBM1sEzSzTdDMNkEz2wTNbBM0\";\n  b +=\n    \"s03QzDZBM9sEzWwTNLNN0Mw2QTPbBM1sEzSzTdDMNkEz2wTNbBM0s03QzDZBM9t4zWz3lsmzyL9\";\n  b +=\n    \"qxFJW/lS3sNMv7PALM35BeFNFzUkWnvQLJ/3CE37hhF84rgvj9to+4WdMsyynWeduLWejqX6yT8\";\n  b +=\n    \"2qVQjpp2rPL1G6orh6eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4e\";\n  b +=\n    \"El4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEl4eEn/w0v8w0v8w0v8w0v8w0v8w0v8w0v8w0v8w0v8\";\n  b +=\n    \"w0v8w0v8w0v8w0u+n4eX6MN7qKIFq2XY/oUGMIRFRsMYk8tsHJkWmTjGZC9JGIxLK2mUbh9x/a1\";\n  b +=\n    \"Seo5x8efY8rKQQTV77yyDS27ytpa2wa77ZhmJQvJcudut5DMNkZBrd1LvU2qJGdXuAhY2G718RJ\";\n  b +=\n    \"KnqA+I6Si664pWTrOsCMXGePCyld1kUt4yTiubHCSYBtXUo4TmRVnnhOgKF9v+shFT7nOVKi8sH\";\n  b +=\n    \"70v0NOhPcLVotKA1I33Oa7tEgX+HdhvbLvIWJWRMSVdk8fvI4HUzUf8aUn8Zi+0F60FuUZLNREj\";\n  b +=\n    \"FVDEk2mIPyoRvtbCqFZOu0Xounucx2rfouTO/K/AwW2FB9l2xHAPPgMTfAYm+AxM8BmY4DMwwWd\";\n  b +=\n    \"ggs/ABJ+BCT4DE3wGJvgMjHYoXGKHwiV2KFxih8IldihcYofCJXYoXLpScuqMdihcYofCJXYoXG\";\n  b +=\n    \"KHwiV0KAGo/z71COdegA7ohPyhlBalXS/g+/ENRbRSiZKEJjDRCVCbgjNWnb6YQ0SynPLrEcgq3\";\n  b +=\n    \"1PD+a+EhWOKKONl3fd5vqyPPagva+0KQo/4gRRTRDsSlQe/fj8p554htbCb2+dPN2gR4NXnqYWo\";\n  b +=\n    \"KZEULiFydGe4tcFBfRH3Kz2+noORbuxIOlrW71kPF9dz5n3XAIwWS/l4E15EZn9u84YimV56b3U\";\n  b +=\n    \"HE2n6GStfHgLDmoaLBm5IDRuwMEYBWcUb2Sjf/s3DtJQbeCSrrMhrMxkX/JnuM5MA9pHaMvRtGP\";\n  b +=\n    \"FuTCRr3YvRKJ/kSa5xS//CQH3DLa1zFXytQGG9AKQIXTeCAKSug5SW+dVyag2ZP+oWv61XXKIm/\";\n  b +=\n    \"vJzS12eSyBOurrFxbyHV7/BCT8+jAan9vhsGpSKSdnj71NnTlGxyP5UL/9G0sdieIWkhiYk9sSU\";\n  b +=\n    \"3o1sS79yVl856zVomQ8JVEUMsWAdMTa50cF1o2QqHRhIlJ90/2dJ8XT0s1VP7UeKwkhCpmD9R4R\";\n  b +=\n    \"PDY44yzPVmUdR7GnO1GtCp7qkMyzOPGr4iiG5k1LHkgThHlUb2O9jn+W4tOP+MC5pjzhGTGkmQj\";\n  b +=\n    \"aryqP3U40GycXlk1i++bNBjMYzkrtNBw8DV1ve/lllUS3njwgt65GKlpWRjz+3prmd3D4gVkdq9\";\n  b +=\n    \"pCyLsfuiV7v7DBvGooYL8ZuAYB1UvKx3tDrDkvmeVJknaE2JxXOYJvuwiaBYQL/HqgSmkW2eapo\";\n  b +=\n    \"bkacFvFct5JuhplaDOPiLU6Ass1FMuX+dofgXi2ksMHCxuZu4i5P1odhDY9W4wdAYK8H3Qsujbc\";\n  b +=\n    \"n3tQ1K/F0rpgsryuJQ9iKI1YSQYyNvfJ6lmehfLkUb2NxEop5KvgqrRSVZuskjPMov08RI3GIK0\";\n  b +=\n    \"IRS8tbf43GdUbSkMwemLHPBF3k0Lj37t/jKXfxDt4hwO5HVAnK9hC7BizadC3yfVpYjrryxRStT\";\n  b +=\n    \"e5Ny1wrtp3tOAwR3tiZwQXp8rMi2cQU2WYP4P5YXljidCSpPDDWjyiQbgiEGwNnQ+A7K099+3CU\";\n  b +=\n    \"vwnvCvIMuEaCigbuA8kccMqUJOc3sY45vQ5UIiLSb0CgeUs59htwL70S+G73lQLzkgIQlJTPRFP\";\n  b +=\n    \"wotLet72WkGu6/qKMrnR3MFSazeT5SL3K8F/+HRNSd37HJ6S6XaZa/2aV0zy4jSV9Uaj66xmMWZ\";\n  b +=\n    \"WOmmG7kWlpU8n40v5UxfXO/unPVFyH3MXFExVXK4imSlRc7fkimKc4Vk8IoFunlpgIRsChgMhnY\";\n  b +=\n    \"Ho1Yons35ilAroppi3Cs3PGWYv5l6S3wUHjr+tJrmIuJn4z5CoO1XMVG4vlKoo7id0jW1bzrQVy\";\n  b +=\n    \"8xyb/1v/2fw/1OY/ZWWcXV1TaBkHXG8chuw47NpxmLnjsHrHYQSPwyYel+d0Gae8nAFzQsz5Mae\";\n  b +=\n    \"evBZvTxzQ9FTTq+0ZMNriWQ9BrqXF6J+7Sstp9FFOo41yGl2UH64mCgl8v27NMIBP5NwsZzL+2b\";\n  b +=\n    \"gSwJ/J7vAFhCEF5DPCR0H+1y9lYakdlvKwNBqWxsLSqrBU6FJSDsF7f1QFbwXCQaM+1IjsCY3Yk\";\n  b +=\n    \"8dK1k4Rr6SeXHRFp61pfsNuuIeuKjKqFRMeV7rFmWDCh5D9N1QvzBYrFEx47XBN5/M5Mm2CnZA/\";\n  b +=\n    \"SgdrKol9rgppfhHYryaFM8w183GrMqwynxrbgp4E/EtPN6cgtJNt5SiKj3zr9LTEyYxQYjzrvt7\";\n  b +=\n    \"WPJN9vTV6Jvt6e/VM9vUW7Zns623eM9nXW8Vu8jKGtNBq3yjsG+m+q1rPWE0MsD5iXvTy+xuDPL\";\n  b +=\n    \"NEWtFJVMSLEc3ebQTacNB0Y8WNHTI1rtnm6bhmExkjmgNcs27q8QomPuvFM3HV16Bdx6xgf0KHP\";\n  b +=\n    \"mcHyKiO2kXZqGZtxT4rILJZS0e3Al9cWT7Kj61LIZei4UF5kfQi4l//cAarfklmWdvHLLs/MMsC\";\n  b +=\n    \"7X2PZ5Z9t9pLJ73sBulMIGQZ2IcOUcfCFec7YzGiLowPxaLzKNxEkGvsWt8wcooTOEVQtajO8Zb\";\n  b +=\n    \"YH/8LTELbbSQpQXYEs8Nx9BsIR5/YpfQO8ynsdPKwzOycjcAqGZdHb1LVUg4Dx1NEHyATNp8SU8\";\n  b +=\n    \"xA0YnUFdNzgdKEepxSju/fWUwnUh06Ocgq9pL3g+unNQDYhfF8utbV29/ybnKauvvK/5F6Fqm0t\";\n  b +=\n    \"mp2shrlPFae9Jqdi2zb8Va/Dfclf478tj6a90LH02xzBnMnLm1FXROisL/ZW3Z+w6apSRf5L8Yf\";\n  b +=\n    \"nPmxiP7Nx1yzpbD3/hm8Ye73HyLm+6KznkmctWvKrlDHQT8c1m/5cyQYk29MVL/dROpOGBO+GL7\";\n  b +=\n    \"O5KpEFrKr+EA//j03W/4v5U1PH8awWn7h39zvx+L87VbonFzLuXl0OV6ewM8eW+58yv1+xLod3B\";\n  b +=\n    \"cpufjzz2CKPv/Q8OVu5YG3/0avbG6ES+/fWf6+kyz/y8e39MplG6ex4Y59bvmOsY3QdbzJLT7e4\";\n  b +=\n    \"v4f/drmXvnRP/+vbieh3rlx3UZWnnhEw9uDVTL9a86+KpubD0zAIJ+LdrihK5Y9amR4SUAYpiC/\";\n  b +=\n    \"+CJcaT8u8FFA4awOKJxLAgpnXUDhXBZQOOsDCuelAYVzZUDhvDygcK4OKJxXBRTONcTg0ObaaXo\";\n  b +=\n    \"T7/jcjY9+5tjvfu95a7188QTcst995P4bH1O981NRbwLO3I+/9V3f+Fctc/PGCbiAv/3WD+79Ky\";\n  b +=\n    \"074crgOL7nDTPfnWTRxL89cxOwhTu+43a5Vhr/lwK17F6LJG8J7rvpDVAIwh0gapGvI/8i4oSuB\";\n  b +=\n    \"7iShWZaIpaRkgsgB1Ht0Bi6Mq533crU79bjOqMNHGzoi0br3VAusEz2RKC6ZO5DeeLNR4ym8HOe\";\n  b +=\n    \"mkg3hDi59kJjaZGwE3JlceiDxtjvCNAFVHiYbHr0tVEulrG+DihfSyOdIJ71k9BT1r6o4KhFijU\";\n  b +=\n    \"/N27nD7BfXC+OS6Ne5NVVJ7RaNYXvvsn3QSdwU+WONwVVYeR6UIqnVgv7Umf2wE/MMH5GbyZxGx\";\n  b +=\n    \"FwGyDtPJrK7x82pGrvbHoCNbglAkBORhvkIOMlqmfV/A9PFs2Ni5SWc8cZ2r2uMHVWhhqKbnUnU\";\n  b +=\n    \"qBAMDLYHOsEQJBJIOgyAR60BU+3vg9P91LB040Knu7Kzogg75bRpIFsOuJTNEiuhm46EHVn0fCB\";\n  b +=\n    \"cDpgdrRYroFyOrB3z6d5BOl0APLGJOEaaDZXcWLUGkStZcSxDRPZ1nZ/R4BXgzCF+7uCmLaziXJ\";\n  b +=\n    \"7HnFv5xRjC9BsO5D2Tg7q9T3QUbgPpClg4gQu6Iuj1N0t/dDInCoTAmQaeB3fAqGBm9yfIltZIv\";\n  b +=\n    \"UmWwlhQqGvaK9II9D/0RxDRre7/b7S8rYnqFPQtwGyUYjNrsAcDJ1tFq62A1eLBy8AygVzaXSO+\";\n  b +=\n    \"7mkV+574rAkUeJrSstzepIx2bjQjq2NYVi7BzmEHzyzFKlbxaXROrc0vDYedz9DcExzf8q3pOTY\";\n  b +=\n    \"QJ+Z8rtxb9DbzQhVh3pafSkAGcdYz9cce7g3qnyzCDG45Uukup2mhuJAPtkEG2UqUjtR6xFrU9H\";\n  b +=\n    \"SmFMsqLA00rjfRJ/w6p7IMvQzggY5gjqhqc+ZCkIM5HHmjDb/OvH+GXpHmblmQhHFsGfh5sN81O\";\n  b +=\n    \"IhlNgG5s4CwUMfBY8oSkQRBENYfjj19MCFEALoZDYSblLvcIRjJKljVKw6GlYXzbsEf/zSjdJZa\";\n  b +=\n    \"oRxveaM5p9vkmri8838k0Km6neXaW6+332s7EfQiVjtPB5Gmyb9aXOMlD5tajFScbgX2mhdU7uB\";\n  b +=\n    \"MWnZbkxqhYAIkhtBmSKCSO8Fv0x3eC0TEsBkp+dA4pIeeoz8/HqM2/Nq/7Dg/nnQan1IB8E+u85\";\n  b +=\n    \"wG9cJYJM6+2saVnzaByG8g2kuhswlgo3yaSX2IleJcs/7Xad+Qb5LKJdRF+rLDySIiBfnE1bCgb\";\n  b +=\n    \"vO9qALkz9qqV+Uvr5rtsB5i5c7sfDUQ7gvpM50G2W8lZBUwbHqGhyr7qNuTm0l4o4pDFvcVz3Fy\";\n  b +=\n    \"MPW/F+MZHSeCVdAUs6c1eO1TflbPaEWdov/H3wt4dpm4Nrp4LXLn5/qmjLd2gW4S3iVzdaumSIS\";\n  b +=\n    \"EG77yalpVCtmVCSSq+a/XEjGUqsqA1ECIQ9no+m+Y00VnccMGJd74cYRw4gNqZm7zdK8khlkaHU\";\n  b +=\n    \"3c2nA4fxig3kJnNd46TFnZuFYQVa2Uffzxr87zMAOy9tQL8BcEp8z4KqYG6bEA7v5opumAl2eXD\";\n  b +=\n    \"UC9VQ72WEmZFr4vTClDKePeLaSEnVpOcOrJL5KKVizJyGWlvOk7myvGKGPCbBMg2UL336CSbw/l\";\n  b +=\n    \"8jdIZBiJ1HjZIMQXfPqeh++Aoj/3vy3rgvtlDtPqCe93H2CBff4AgRTMNHlBS4ok06jJSqUZIcH\";\n  b +=\n    \"7O6frW1KL7CaaW/CGiwfOgM3In7gPyNm18cCEIwFrdCNw7ZcPnw3eiSCU+gGECR8t4ojbAhCoWs\";\n  b +=\n    \"CQLIlxDXD4lRlF5D6bqGzUdGEI4EvbLCCkJ9YqoJHzdIVnDNLVxBYwOdeQYpaksPGekXJSNQaqX\";\n  b +=\n    \"KpmmF/Y00KJGZrSycpi44FgN1LxGH2urWANV3aLeXuG+8V5EZrC9Q2rqKzOuVEWawtcqaJq3WyQ\";\n  b +=\n    \"wT6JmVc1S1qV57/ClqVFle8L+Wc//wryF53u7/E87Y686wkq7HMQRnYdJW7ivPyem2egeHYkYg8\";\n  b +=\n    \"ZFerU3TRIVzO4Hw6Sark+1L+AaaRHZtwUjGmYOl5gAm7Q3wPtB82KY8rHoD4E0Vp20xR4L4o9wd\";\n  b +=\n    \"iOVe58sHa2n1peY9fPaH2hwfdKAvRIkkjfhosDv9noWWo8Ti4Efe62vqSO8qVY0il1AoXFMhQfp\";\n  b +=\n    \"0nSVL9mXZOw7GvrK7SpofdYQbXVOfGqPSL1BYceoP3CJ6nHTrx1wpFcg7SuA9ck2W+7gKCOWZtY\";\n  b +=\n    \"2ByplTZMd7nSvRMoNVAiIyYUiTMGNJkROlG8RMK5h2n8NhlzPcn5dlsWikOlbHqgDGZnq3qxH72\";\n  b +=\n    \"UYiAfe0cDT0HkoAbm1Z2Gx6NTXkAsGhdNQXeAiRObId7UERwko0riTqTGJdC3vK3JgQFd7LAM+g\";\n  b +=\n    \"6Ag/tdiZe0FsY6+Uft362BUYnVxuPt9v/uwqvA94OxNJ7WTDGw8qbdyve7i80KLfHKh0FWZSH3O\";\n  b +=\n    \"8s2RvpsOwoE4KzrBJOBdApaggAd2w19Th/ZdEu2kQDIPm7OyIfQjM82pb7N1JU68Pu3wjeinrhk\";\n  b +=\n    \"PtXX8dbl+Wv9xEAdfmlYU7yDkMUuAQvFlbQNVD+6v56NQetV9SrWbNHUa8m6lUvRL3q60vUS4kj\";\n  b +=\n    \"9lilGUgGRDAQ8744ehjzMmdaHDWaDXypK5ICV6/PQX8O82GyNbjSByVHoUulTRqFc2Yz9CfQjXL\";\n  b +=\n    \"3WHdP6juWM9zLNZJSQh41EJqM6a6V0yJpviycgQPZ1nazpeqt7iXfNJKK1mSvLNxsATZW/rGU54\";\n  b +=\n    \"KcqxtUIrq6QbEnJ+umyHNvM7/OXWn3btW4K6FMwLXfll70tBuLcte7va6eW3sFAT1FuScU9lcqY\";\n  b +=\n    \"aUYQcL9OUMuAOY0ylw+E71CWpv2nOSQKvA9PyQWnvoNPUk+wdHuY1MspiQ9cVo7k3vvKcdKTGd/\";\n  b +=\n    \"fkrI1ZZz7ayt7hNya5Ly29gaNi9jQbsqGCl98vvCfeYXPcVIKUNy7YgRv88sjyitJNgnwkyEqQr\";\n  b +=\n    \"TuuPJwmyUW3Yd28cpMx7xpvVWkYJceE5BmatGkv0P6ufn6GnbnYinbc9NP5mets+eoaftSPC07U\";\n  b +=\n    \"7wv+Nn4GkTV9rbMvn9ZrrApfawj6BFHtJpy5mCfzauROcfC0osVpszU3sFOrkkiYh57fwOQonWh\";\n  b +=\n    \"cT4ywZNTgE//mFDYgZE9cTSqaX1NJVxEq7Ws1QKwhzqSSoy9x2TLBTqY7U9ONM9yocplpwzcV/C\";\n  b +=\n    \"bpB5bKD+Y4JBzCr4AnCBAbEAQGBFe02mYwLkNHgWg2fS8+1GonUfyzDJ19MLof7HffMbB775M/h\";\n  b +=\n    \"gBz7x76eX+HF88zuUAa4Iye75LRJNDCB378TBEM9MIv9BBHC9Z4O/hd4iEDIss4mNxQEmAifUmm\";\n  b +=\n    \"pIFNyj/BuqJy8VBucJwc4LsP75Aqx/Lhte3s081h9kVYtg/V/e8pfc/rKRRvngJ9znfp+bywct+\";\n  b +=\n    \"mjiDQhrIO4B4eqoTJWsBGzqdtS9lmXUt+pGspB5pm9VXjQlJbmxpv4WZ4LjV0KaQTaMVJ8CMZef\";\n  b +=\n    \"giEnBqkiLUxFn6dsyonIsffTKC8sFKRF7XDwdLvZQ519j66NLV2WjyoAJtfftv4K+x5gecq+Z/v\";\n  b +=\n    \"Z91Kw76XhtKmoN9KstnL6SNn33H0Psu8JZ0aX1NENvVCjxq5nNXLeo7zuQva9FOx7qbDvwVnW3E\";\n  b +=\n    \"6Ddzk7AzFokY0cTZbxlLtNV7tEthSGyJeY9GQYiBpCnO5Vj8TRmUrSJ+BB3SZFitnK3cSdDmJlp\";\n  b +=\n    \"blyBC0Tb3Fm6thUJxOflVsaKqB03yU5Gf3vgrShuvtWwaw0iqEt054WEQqLaAnXtW5U9DDPHoE4\";\n  b +=\n    \"XZiCaiSKA3vj9YmnQJxMcCdNdSKS3cPng6CoJW8zhNZ4m1b9ua3HrLOq4m2F8oq4ns/9f8euG/K\";\n  b +=\n    \"3xsizhaaMOdCNJ1A4sq1L9VSqulL2NZ7I3+Q2Pf3M8htv6KaSylwkWoKtO3dAv3ZADqZrJpVOnY\";\n  b +=\n    \"5LRrkPFKnqtV7fjVVFFtdKrr+L37Kr0lSva8RKYuJxX1Vdr3WgsAe6ia8oKuPOoBKwkLN19apVN\";\n  b +=\n    \"tbKpr6yyekqmw1WNq5XNlq0snDnfsz2p+uoNAv94vicXuu94mKT7zRVsOEYS2ZqJSL4dyqqOfXp\";\n  b +=\n    \"GBPf0pU137r6uAt/9rGBwEU+ENjI+qTObE3nTGA/b20q+1H+B2nN/W3Kn5buZee7Z0k8b8sVl0a\";\n  b +=\n    \"vlbvMv7OAZM6fTDmiXje4vVKtmNN56Kz1KaNw3+dvbErixkXlLEd9yT6FXmQsTBzET8YEY+Z3pk\";\n  b +=\n    \"H0QrSmoAjrhkDJ7839gaQCpzAnckrz3SkMI4HiFXqOtpwj6wIlFB0zJNrhlWBEe+YdnJLpwaGAB\";\n  b +=\n    \"ETzvqAlyTDrMA9EpIupOZdI+qbQiGtdKAF0ItJ8YzefZXn+HQTtsJ4/2hRp3ljEriVrtpd/heYR\";\n  b +=\n    \"JqMnjPy+k0m9NFBngImoaFdjuo16g2z9NPgGafoHC2V8qR2elEmgYR3ACcziEe+2vQmFFeyqFnd\";\n  b +=\n    \"WizPV4ikTFk9WiycWghvmFwE3uGZaAG6YMwvBDUfNILiBnK0gxK1QDMajGBJFMdDLgEjl/A14ed\";\n  b +=\n    \"Z5FAPK2a5YALUudTwSj2IwimL4oretQuoePC1JXfTqcgZmkwElKySJfoDk5EGYarUwrvug++pKq\";\n  b +=\n    \"Ola4WJSMnXs4g8OGlTXBuXGJL8MHqh1fQJU6yeDhKhI62S9ekG+XPjNtBbn6ZpsG5LzmroOqT+J\";\n  b +=\n    \"3+j3jOTI2r1gc/+9mFY5R2Lycv4DlebUHPuIv7WS2brHc96VO8FELNMXnUJcaJO18YzIOtCtN0f\";\n  b +=\n    \"ZrEAKxxuegXSYbMv/jEHPo/a8AXpPyQGiNSFmhKfM07ktT4ypVLlX2eJ4AFCn6vM7YjVVhpBCyZ\";\n  b +=\n    \"9htZL8Pc0uGSp2n4t8nRebW8+VvJ35Md9xRnynlFwGu+w6F0M7dyGn3tOJaAadSvSGbPmorbHfn\";\n  b +=\n    \"UJKqW5qFo38g0lRvxvcy56m4OSOfgDGcbn3AzpB9u18Mg5jmF20nedt1c6ihB7wmGzneSvt7Lbl\";\n  b +=\n    \"f24ECfqc23nWaDvfZhZv57tNaOeDpr+dd2s7n2hLOz/elnY+2F6ynefb0s4H29LOj1lp52NWb8g\";\n  b +=\n    \"9WDMAPE11E9r59xe288l48XaeDcCE1VQrAcgPRtjEri9Gr+LcNdNEqnLINSR63OsJ0cEOM90MP9\";\n  b +=\n    \"tuuMvNPBHBLI9Hv44o55byb791OOq9IIpeTI6ibaS7dltfNyn7DewRu5MCTzbxzOGvvuDVRdaJx\";\n  b +=\n    \"M95l7vc30Qv46C7jRNlV4sey5G346+YLHlmihyVw68cPEMysJ8Mz9vrO6zuMaUdtvBOJPxEvgnK\";\n  b +=\n    \"nyviyXyrW2Uw7IGa92ogdhBS3QciBwRcauwAniOGAjCF0hd53L70tEEEj8usxx0QCNBXFmlOCw6\";\n  b +=\n    \"l6j14bFxXf9VUa4MyHOanGvqiqtNCT6txAJU9q2wj4AUtQzBEjdT67/zN/cGCVQPBgjEJFrRDsE\";\n  b +=\n    \"CYSsqTPlhwv7pZZoTxoQK2CuI+nxLWkWIKw9ELEcx3d/8x22EgBikS9BlLANjN1J+B+AW0aSxUa\";\n  b +=\n    \"WKq0sQ9SXrfThVYqKltpdtq+SYR9Jlh3PINRpCrpjwuEB+ebwaCi860y7d2hCV4iSuu/ZFcUHC4\";\n  b +=\n    \"pnz0W5Xzum+VvA/EGu3DJx3rJ82GpPOyEiKB77JjqnF+9/7DPugLhR8JbeJFiZ+L+ojw1vv5GKb\";\n  b +=\n    \"2ojxC+mueuF4RXOE0FYmVNVtVUaRO1GdKv+860T8pdUrk033U2lg6vz1J8JZqMrtkgOe9/FSTM2\";\n  b +=\n    \"C39GU1BJKuFZ8oiGciSTkEIAbTjd9Jug0YcMS1TczYGyei/z4ihIyH3NB48H2Br7YBU28hXy0g0\";\n  b +=\n    \"ZiMNZxleJla0N0U2B3VRpYzSY3eRdrVQ1aGMZnUc+7tJpsVfSzL87d5F5H0dbs54XvQ+sztuNzF\";\n  b +=\n    \"kiNViXv+9h67Nt6ZlLOu3uULBEQUlzvdvP8NC0BEbq6aiLvUt+pBu2SrPhVa9dEfrFX3gSv3h9K\";\n  b +=\n    \"q+4y26u+yVfcZ36o0hsDJeyKqN6rr8r7W36b7+FzuMVWb7mHJ3aavTfebtfFuO9CmzlxZtE0P0p\";\n  b +=\n    \"C697n0jS+yA30j+bIUe2L7+sZosKtSTz4SkJl4zJFYBTOjhR2VrToqW/WMS1xv7Y/gclZ60VpHG\";\n  b +=\n    \"C3VLx73gIrUt+F2acGkm77ATX/LFuEpMlsH/fOHkMl9zM+gk3H7qPU0mqQznrOckiUwqR/Fr3tm\";\n  b +=\n    \"c1bUwHia/JaGAP64+0G3+yw23209hU2iKUKe7JnYBDn0r2PuHXy2fVEKISaJQto5Pce8yCF/kXu\";\n  b +=\n    \"sMNzg4o01zriQ+h2xgxdN0F/ULosjMI3nfbiuxptwgSSGO7rz+yrjgsTBUWbLt/JJu1grP972rc\";\n  b +=\n    \"y5emjlo6Zq5SOmr5VnDQKv0spHjNzFrPGtjGn979RbeQ/mzdi811StzERDP1/2rYxD52Pu/Vxbe\";\n  b +=\n    \"Z+/yH7T18qHtH53m8GLJpLYFS7LVj5itJX3mUVa2e3ozl+18kFDo9yKq8oOCapbiKIJKe1k9KEp\";\n  b +=\n    \"S1JHwMTMdUsnJB4mP82JGnJYXfPiSMJ88kjiM3/dl1r40VwzhgFW7cY1UGotWZiN2KyTt0X0V/K\";\n  b +=\n    \"/6Mbg9AOu4agHywSEcjn3LtcdnkQe2tGmxyLHNRTyoYbgZBJBzQxJsp5EfjrD9DoP05UBpTIgB4\";\n  b +=\n    \"a4hkkC2u06xfS2f9G9fq2i/WomF7U8FXProxi1Erqk4ba1BwR1Axnabd2mOl5vcAaPOncxx44gi\";\n  b +=\n    \"U5vdeWcztTFS7HzxjbX2MXO68MJrscZwg7ZojsMVTu0qx0a1Q5N3QFjXeUxdr1aPHXA7fiSwGJU\";\n  b +=\n    \"uIIi1Ji7c7vPN+X2oYXbJY5NpjHJgZU8JexQNOFtdgcKV37rgwIFhJ8yEaRKFD71brSpywhVWt7\";\n  b +=\n    \"dZuY7dVZFK5LOq0m3kH8YMzJRTuphRxE9kQPdIUzXSTXZsvCcg9VRLLbVd2ZJ1Ykfu5HXPtFGUF\";\n  b +=\n    \"o0Xptah4FrsxA7iqkDd7Pp0VR3L91GYePq8ZO1W8DN+ES7J9N+Dr9qvtNut+hGYNojbMI4FqcXp\";\n  b +=\n    \"2mnW8+ttdPxsTNsp+Njg+1Eh2CqDkE5yC1VR7HYVr3+gnbafe4ZtpPbsb+dbj13iXa6/dxF22nX\";\n  b +=\n    \"udJOcDUNtNNXdaJzMiHhkVVyA8SAt/cuT2qjSVKN2UQA+MGkoX4bhsHwABvsxo/RFc+BugHagzk\";\n  b +=\n    \"rhzU47P2dlSGEe+tA3agN1A2Z8vm01EIPTvN7dYiWZECcOFlsDMG0iOc+5M/tx+dEOJ2OavWOWK\";\n  b +=\n    \"lRdbGGjs9SXF2xsWB4huPywTe6XvRF5Y4bfaC54ZoS/Ztv2Dl7Bg3rh+kzadijRmtupGFnjW9Yj\";\n  b +=\n    \"HR/X29YHZsbtbFZG9anClcNe/g5Nuw+f24/JGvDHtLq3W2kRtXFGjokS3F1xcaCEXmJhp3jUPyQ\";\n  b +=\n    \"RttmUh81In7mg2LecFVoVk/1hXz+CG62+OLoVDAziL59u2XgRqEz7s9bagXkQH1DVYDA0FOGyBl\";\n  b +=\n    \"c5Z1K5mqh2cpq+MhUxoBS/pFUjLSSmdj7MznsPuMrh21IyHaD5ikjCdnks6p8ujhhvqcRfq1cdE\";\n  b +=\n    \"aynUUF5GmorSTlN36PcCe54N7b3crx93i8U9+227DtSb/tY8F6rMPB4kyAXYKPz9+X+OQ/Z669P\";\n  b +=\n    \"fam0Gql8mIaUHkZ/V8VfOqSboL8L2KrPHeoIKrgg0Pk6kN0ll2JzBIvxSqAr/1N5XIADTV8EycI\";\n  b +=\n    \"/Y4k2VMEAqOexrwj5pJTRSKAytw5iNHKNR0y13RI7y4zyv63vkKJrZ8UlNhtHiVGp8remxQjptm\";\n  b +=\n    \"ZT/rs8BuVyQ9QW0mllBTZfyUEDStcBEILfjpFkVsoARIZ6lpkly66r+U2XXSf2G5dbK+xt+tiTj\";\n  b +=\n    \"kdLo6usf4MY2vcRyiLq9Y4I1cWC36WXLyAXyEXx/lhcvGiNfYeXVzN3oOLl7BD4eI69jFcvGwNQ\";\n  b +=\n    \"KVcXO+6cF18qevVdfFK19Hr4svX2Md08Wo31Ojiq9bY47p4zRp7Qhd/aY19ggnhhCkQel7OfB3S\";\n  b +=\n    \"iTVELoBA/emnaGGTo4EUkDurUYsZH7VQGHsszAcADOSv8Uh+z4Zg1UvQtxpJUogkXbiOBhMGVE8\";\n  b +=\n    \"KJHAP5cbXBE3i3bEEspmDBxyelEjoIigB6+4JNqpypZxSYicDdeivIXZsSO51dUxVDa7JRV1Fi6\";\n  b +=\n    \"bmjfDaeiI9yK8yZuEvMYMIResumSchBJsDCkZP9gyAI+eV5wN498wzzU2g8DIl3Xtbf61rJyHlT\";\n  b +=\n    \"TazyfIlvRamq6sk4ePIN+43DCxUbAnlIWH166YQutvSbUx5r5OrXL6H/OSgfxd+R5E9xyGY/RA+\";\n  b +=\n    \"Q3bISDxKdotAJt3s6ae2lslUj0renOyATsRdYgussa4/I7EzmAMa0u1JVCfDg8BaIv4xjnJjy1v\";\n  b +=\n    \"C8hgp48AYLE/ZGYe2voB+0uf1esql6OIok3hWArJuJaNPOhKL7CYhw7cUFmTJ8b0TOb7pSmqkpy\";\n  b +=\n    \"vdLK0vBRejsmSQrrBC9AAUuhz+fnHL9B2xgcpnevVYsnfjevauDouSvRuDMJLZu8mFTMNOkL1LK\";\n  b +=\n    \"l3N3o2RajkO6BR671gJJsfoPmT2bkkwAuEmPkH3PJJs+wzdOGToti4lf47wWCX04dE19DE/Ox+T\";\n  b +=\n    \"F0XCZwShRuUoRQdG3XSZ8ZSVHFYs4zgidCAgjYhSYsIHbDWGaMRCjlfSxo75LkB4VrJwLUUE3A4\";\n  b +=\n    \"CYM5Bms4krJTzHMauXGv66qwKb3QXVrFkP+XlKDmui+jylWoRGNFfsH4t4vvr3/tyG8/1m1NuIw\";\n  b +=\n    \"ceAqEZ0GTaonCJ8uCxFu9bKEvJtTqqI2ckm1ufBo7L1jJnyjFGkMYEQl2H/pgBkQBTp8HRRLWAS\";\n  b +=\n    \"RCazIJabQAEl4c+dFjEyNNXgVTQm/jpNSOGJjyIREUrEzGmS9AF/cFhio/a8mFqilqJZTFkhXsM\";\n  b +=\n    \"yCU37n/OyJyyls1Ml0extk/v0eb/rZqC8thwi5GgnfJe3TFSI+IXIJOstEIG89ds0GPDkB0JQUG\";\n  b +=\n    \"EjMzKxWuXxZ4914fUTHlkVphejYTU3NP90mGG1NCs5SwUp8h3jTR/ntIgHZ2Uj1Nde2nUdC+agH\";\n  b +=\n    \"o7NvSM/Xynyfr86QYDMVSi2cB2N5s9ytEXEo4KpLG89eWO+w/L/MXV4yCW576kku7MQ2qdGauqZ\";\n  b +=\n    \"wVd3n/bYz2986i6830P+TtvyluV/4770O/QWblittW4yQLXq2jHBa0O1Z0xBKJq0BaO5KvYA8zk\";\n  b +=\n    \"G9layMoYIbdFH6A66kNoR4MIbdE2A5Jav8uoD2od1aHWgsWO+uDcUR+cOxqEc0cDcO5W/pvKzjw\";\n  b +=\n    \"mUGzje+d8RQ2AfUstNavB+WIFo1WwFtlXBUvbFATWkCByhWNtMxjWRLx6c5FOU8uBeC7Zh7+bpT\";\n  b +=\n    \"ibltN5/Nbm6WlgYwXBJVrWKcxNNz261dlpHVPpdceoiyU7Q+3bXAyYbBcDJltUu/9wUN+5GZkEB\";\n  b +=\n    \"Rs6c7sL6dvqp8A7NJ8ytk24CWTqAlS5jLcI8dGvkpnajwsqG4gNT6R94Zmg1wfXqVXwHH+UlBcG\";\n  b +=\n    \"IBKs8q8kkktxuv2QbzZnfRbh0vuBzOJbIqp42v2Q2PuZhDosykV9uWemTpQ2OPG0wZG7Z6CerX5\";\n  b +=\n    \"YGogC2HfViHgUy2fePDNz3ctH+KTzjzaEbyUKdMRBPTHrejLJ1F1Sv0myfHkOYyvTIqge3NoQ9c\";\n  b +=\n    \"iFN4AjE7AZI9okYquYdrEWL+OQVaNUJmWdXHYMcxgSOXpZAl6hoiqHlgQftQhM5L8qw7meYruco\";\n  b +=\n    \"jSeh00poaS+/MCWL2Q6fgfyTBmYF7r1crxjJ5LOkN0Wr5/AC3bd5ZhucdYswe2JdW8qsonxN5GH\";\n  b +=\n    \"amZm9pnoxh2uYEwL5n/+RreWydrJ82/cgY3ZTqyeWo5NY1h+usmDxt3yv8coXbdzx44dNKnp7in\";\n  b +=\n    \"haMw2rhTprKjbgH5tA3ARemLK/W4kzf+0wWlgOilSGyoG5IZhdwcTb8T1f++dOE9z08ru8F3yKQ\";\n  b +=\n    \"xPNG5095BA6QeMzK4AO77+Rk9vXgztaL2nep+sHwMXy7Eh++l2QlYe4XQ2cxWU/luyaoqFAK5Im\";\n  b +=\n    \"bbYp/9PkWmTf6Hpe+gyar0fsbQfbS94gQR4aDjCOgXbBrrELqWv8l92awdjYvdl0yy6bFLlYNNc\";\n  b +=\n    \"WjtqnmnHSAbCppNNnCOWTTNk5oy5YdcwzE+5ToshMbkK5l96jRHC2eQKy+Cak/MvF75Gnp15P3t\";\n  b +=\n    \"t6wM/+iZSTlNpFtztTqMNIW20Wu8dbcRNM0O+jVbLTdaOGvFttFruiG0kR50lbcRjRtFGcsTzpY\";\n  b +=\n    \"24PyaZuvdKaSPu/VNoI9n7fGkj7t3p8bKt/9e0t5fHT4jZC6OjfNKtlM+cDyVedFSPuVXmi9guy\";\n  b +=\n    \"bCssOHHEoeFr43j4HnIYglMlci/wXnQ3Z7PP5uYI5O1bpaxFCzLpsNP9yL6fOgDok+IJgjtLfqQ\";\n  b +=\n    \"aH7QgOInzI+dX/YSAjTnb4W9JWKa3zJdAwbRxyLNTzvmFx71C3N+4UG/cNQvHPEL6yfl9zJdX6e\";\n  b +=\n    \"/l8ivsybrdemj2CKNDOhj3K2unC7t1DT9HKY35Sbb060PWZsEhKUABBMisNnI7mE8et9h9nqpTt\";\n  b +=\n    \"voiYADBFA53dhVTTZLk3dUmIXiSofBim846DAgZ0DMZMJWT7iJuGT0f8ScJ6FzGxIdCxICgANA8\";\n  b +=\n    \"sJIzZuFzNNACgzDWzFVOh9HDAcQYGeZj5XtMoF6sMH7hWVo2uIjQJamFb9tIKePyv2fFbaZSKxU\";\n  b +=\n    \"DcJ+tUay+7+PGEsU/IEEhvezewjVofga69KwkXrsxAdHr25940luPEmX3OGmm3rUR9n/HF45vN5\";\n  b +=\n    \"U/zI5maV9Qhom9xL7frDbKM0W9tpE0ALEiaEBSwcmxrcxoH8XIwYWkGWqUTRkRgsYeAIFqky+s0\";\n  b +=\n    \"Y5/jq8fQmJ19sEdEAuu8VJo+T/IVvphLO0kV8ndmrCyelox1aSkpZdN72TioRhArykrQNAgc+V2\";\n  b +=\n    \"c2qTy7hM/1ycfJWNV1dLfbgD94Yu8xzbI1d5ie1Ob6ywH+w8F9QZM+chZekjWamePFdvz8L7kAo\";\n  b +=\n    \"l9PHIq5eyrDf5jbln7fntTPZ9Ym9btezF911xu/alF0f6NvV1Hd9bK/u2oC/5G7Z8c4mVnHk21F\";\n  b +=\n    \"w1qIX2euPBE9C+a93wmLBkVz9B6wOYZVEvcew+nys6rc6i4LGouc9eqecF16zdyY1r0Mt3SCWt0\";\n  b +=\n    \"ykChZ9y6DOklBJB3h/Lh2Y2GOf9S2Lw1sWCzICb1kc3rJY37LYv2Vx7S2Lw1sW+7csWfiWedXMU\";\n  b +=\n    \"Xqew1sW19+yZOm3TLn7/8WYZm32qiA4n75sMCVtahqy+lkafta6ubDTJAFLMG2Vfay6XKhLuqB4\";\n  b +=\n    \"mshzTmnHdEaLXLBYQ51xSM42mpxtNDlbp39e7JRMCpqcLZFPTc6OfHL2KT9jlhkbWVunMVsiI+l\";\n  b +=\n    \"Np38HkjN5B9pn9gok/hVo/6S+AW+tdDO+r04XbtSfnyrAci8tgcSM03e66Zaf0D73TT7/1vgQNm\";\n  b +=\n    \"ZEUf7viS5qQY1fKV9W31TOfg9zJ2EC1lhoIsgKTw7s9nLng3cxRPjFcMS3luhrzgipfGRqDvrZm\";\n  b +=\n    \"RRG0/QUuy8vqm2M9OszYmAusmm6E/V/gZy+XSAJIhVl7+4QFiC1XqI+2e09UX6/mAlTkH3XvBzk\";\n  b +=\n    \"V/lNZnDTDWGTHdx0fY9W8MVRXN+iCf+JAj9/orTfv21MWleZcY/1VIP0NZGQOAv3CGkSFd2Uf8b\";\n  b +=\n    \"ynUe3xuTpkGRuJA5Z9GrMi3X9BoJHBfXqprcgbFDNlw0Sfy56zEtxHxKuYQaUsc2AMrYZUMY2lb\";\n  b +=\n    \"42z1TTmnYV7rWEuU0+jJtO10kkZ9ZJPBP39xJ28V4i8b2E/UntJThrpxe1YMZi8BZk3SRQ0sCv+\";\n  b +=\n    \"2WxYzqaASG8QcyztmKnbO8pSYYVReyxXj91EUmma8RF9IYuoC0SYFYHowxYcEVXJunh7AnZxJxZ\";\n  b +=\n    \"pZHATtDrBlRbOT4lcth/2SxcsFlj7AR8EoRW4jUngcuOKoIo2DP6xW6yIjV+cZQn/Fnh0/3wQns\";\n  b +=\n    \"mmDiQXHFEzD8biwpmKjCuCAmpbbud4fU0/+0Ybz0qzbzt0rsNvCMh/7OEWIH8be5b5QuTfyoto1\";\n  b +=\n    \"ZVp6Wvz5puCBK7dK+3WwizJOL4XyCo2VbVTmmFG9ltqSSyV34NmrBBLTboyAaF2aA9G1Rpg15tU\";\n  b +=\n    \"LINareUue1XlNLUNCSjeTFIyEfUVmx9Ja6vJPWVtL7SqK80/Yrmss37udUsSpfzDcu/as5rvVex\";\n  b +=\n    \"Rwd9QA99QhMgWUn2tprkbTXJu+E5z+90HQlhyPTsxZTPa28UGVWlKXf9jtAtEfoLcG+T4F5GCgW\";\n  b +=\n    \"5Sb+Vz9uidaBQYb5JhSHqlxGdeTDGg8uPXJzpRvhA01eMCLeygC+tZOffDeCrEkCssQdhZOxHin\";\n  b +=\n    \"Mo2oe+/aBV8GHZLvcCngmmv/LuG0Va1uM1ffPsMf3N83hbcrSt5mZbzc0OzbOXzfN4+0yahwhyb\";\n  b +=\n    \"Z4n2s/ePCfaVfPMt6V5DrafrXl2G2mevabePHswvbnd1JtnN2kqzZk0z4eqIaZ5AWSysh46hOY4\";\n  b +=\n    \"KfUTkUFIsN4msbOoJCQlAS/NYhh+tmaRYazOhK2rCXfjB1KBCy0V9U806p/IO94ohhg4/LOkS7q\";\n  b +=\n    \"+pjClfoMXHpMRponlVSSmxrLrAaDwmFzq5hrxBl437+UfZ9ebXBoFD2OTo8fylh4Pz184+tLoov\";\n  b +=\n    \"KvvkTcZROD4M1zbvnRL3i0qqoUH/mCttXufmeaho3FGaDwgrHy8Tfe60ziKvgO+JE6qLD5LxfZD\";\n  b +=\n    \"HCS9f5QtzYUJkiD9v4+pLc569pd214cAU5mlYyAMxNIeCIFkEgo6yNqscZ7L46GNoj0A8BgI9wR\";\n  b +=\n    \"VdoLtBReon74V0u2/v4iW1u4UhldEcz7j2jLFH6iwu4csoVVQDwR1FMakFKJzrzWqD1JAmej84Y\";\n  b +=\n    \"iXRansTXujX3YPYX/Vh5/2AOwmRHG2GVPI8TZUhFiVXkWNwaRdyL3W5gJS+5beWoZFZDKo18mR8\";\n  b +=\n    \"L+R7wq9ZMP8wW4/ZFw6YBJScq5OcluTwSQkpRH5yS7nZldex/20vODQWKOXB8LtvAeU+lCdJRBU\";\n  b +=\n    \"DQZoH8muoJM/peyv08XSdsPEVzVxZCQPBJk5C2imz/OeYZuimmT+xMhn+bXEdFxgzNmKKjnOAAc\";\n  b +=\n    \"RLymbgKZUjgTc5ExTf6Xc44KgDHHNy4QCTK9iwgEWAjyzzXzUZJCiaDDBVcx6u71HwraC3o6Br8\";\n  b +=\n    \"G9/cCEO+A9sM3UyFvce12s7rnQt52uYvJa9+lEpig/ONe/rFEcouPBpA95x3gTYfppZB27B/5rI\";\n  b +=\n    \"AYVBlSmD9Vnc0V5h9N/Lkkz4yXrEFbBXavYQ7OpbQaNyceKM8M6Q0eKf8g8J4VGD5TnPypd3vEd\";\n  b +=\n    \"9hrV1zt5s4o++30mPkP9uPIjOJY3FvpMWQyuaKe3TcSVb0GiarqOWNWLCNipPrvAtcguYlwMA4I\";\n  b +=\n    \"p1NCupx9yFXjheWTD1VazhVS6/aHqPy85yFVfnaHkpIC0mI7vjgLUbCDX3wWkWntlXk+9soHH9J\";\n  b +=\n    \"7xoNdelyJdFyJ/NyJX9s7bF3t3qdPJ2WM4TzpqNqY13jEy335SgFi1tF4AufRnHZtnYEOJ0xQI8\";\n  b +=\n    \"wqABb2fcjeL9fUviG0oEG/RIBmtZI20TCpJM6Ly8h75LrKa7ZtqkyukKwrSTzIFALKDFLrSSDlt\";\n  b +=\n    \"G5/j1FyA2wcJOa/Bh+k9OtQSj6AvMNVBDRiPeb6mABBMc5yfVSUFN16yvVcmHnceuOA5C2iLlhv\";\n  b +=\n    \"HpBER/KHuvXsgGRGRliJuBLdUCO/e66/dyGddLpoTheNaYDQkukinoa3MbpiqvW0QVPcrn5QpNj\";\n  b +=\n    \"Lwm1+YZdfuNkv7PQLO/zCjF942ujCKb/wpF846Ree8Asn/MJxvzDvFx7zC8f8wqN+Yc4vPOgXjv\";\n  b +=\n    \"qFI8ZHomfNEhK3A8pPbySo2XgeewFdaR4LJrSM0YF7oJOQ4kcokQ62JYQbdTyAm8K0L3Dz04774\";\n  b +=\n    \"nePuElrEa/EsfmvuheVDKScprhejZgBDNqFwRWuElZLUl0SzIyOQz+zKueSqFdhVycDjyg2u6qc\";\n  b +=\n    \"aKvkgmoNk800kxG0lgw2GlK38/D6tyVx7Fna4NZzF2+D+bEl2mDXuWiDo+c6u+bM2uDWc8+gDcR\";\n  b +=\n    \"IWrwNdp/7A7fBzT4jPxZRHyuuMlsjyAU+5W0ZfUDzcc/PUB6L9axukqOlpaTlN0DA4LrGE0wi2Q\";\n  b +=\n    \"DHE7gQYpmTPRiLJXMUgYKD5KRysyI3Dm5AA1wcHVS+Ek3h38MseLCjcAiuZcx7EgJfAjqMmNl0m\";\n  b +=\n    \"iLPPejbAUbvT4x63S+O/tC67h9agLSPqcssFFitZ4yMAbN2MX7sp+Kl+bEPAvdCePo+5v28J/U0\";\n  b +=\n    \"IUqRvd8szpH9R/0c2XQz+dnGoozXcwsYrzlBogKzP/D7YLMWTkbvZS90ENRhkMOCuICI8pBBMBV\";\n  b +=\n    \"mFvdYV2ooBeNRKtYvDUFx0Fgd/6wf/3J10FCpWMbI2j7MrZExkjaR9ypx/4VuJe9D+idLT5E/fk\";\n  b +=\n    \"zTUTnXGh0kOjbKF8rMx0+l4iiZiYPT6G+NIMc0AJCeCSlx2kdKnGjcC4+5UUGKkx+PY2jWLOIY+\";\n  b +=\n    \"q3zcJ+0yWa8pLLoKQtApJajccIMJGnMm0WzNI7B0XGIznAQhH46lbQzKcy/nkq5FJbjnqHObfrj\";\n  b +=\n    \"FOYiGC6vSIQJCnYqhLacFZs76x52nzMm0X8SPhLlo62Fx+rrbiv6uxkrsVRrxJTyzlClG/LkQ/X\";\n  b +=\n    \"vHBSrElnw37lIDHi2oUTZhuDfB9/Q1SNWCF1JezoKqIy+k48I06urO181OP2VY4jf0pjCjcOJ3c\";\n  b +=\n    \"TlarkF31GA+/cl7Cty5PC2a57awa95rPY18yX+rnH2o91Ww8+CACQW8xZhrshuY06NlSRaEIt10\";\n  b +=\n    \"zLbqLo1ZaYWY5mVtwecb1pe1xP3fYN4M7qTmL+SdZvAJDcHMcnNPkxysx+T3Kxhkps1THIzYJKb\";\n  b +=\n    \"HpOMG7gO1D9X4zlPYFDmiWZ3vjPrZBPWexqKbEfrG6YO0fBS2BpDClkcRrM4jGZxmCqL4znBk5j\";\n  b +=\n    \"FYWpZHKfBGQ0Ckb4PLFMrf7vxXpW3Dzr5x3q+T5JO2RLrlxfSUeb3pkpwrx2vQN6jPuhKWtreMp\";\n  b +=\n    \"saZpsRI385leeiV44k5YMfd7bKWHnoUGXWzUWS5+Ah+mIcQoZanCqe957Y1lti/3XcEks03bqzl\";\n  b +=\n    \"0fd+cpu+YQ/bfn0IQLkd3/CXweDj9u3y1lSnL+p0WqFqU6h/Jh87/dbamEHm7fc+Xf3GyHkw5LY\";\n  b +=\n    \"Q64BL42aav7a9eWut94bAVYfT2z/74msFvGEuZ4hFjCKmfKb95H3dc+9XpCOZ9Nu9jTpVzvvraV\";\n  b +=\n    \"f7bpX06+qo8uizICOFIt6QpCZRRXhRMZdTHFJ6gLkPi6I/vr7zoHiRQHDvAUv0AL0kianJLbycN\";\n  b +=\n    \"3zSGWdJior6aHA4oqMR+yAcSpmqKRKpv6YQBURJqo6IkNqW3S/+04brG5gPMzlMtnYMGI85kRG+\";\n  b +=\n    \"b4zCRf4kltNuKkHq5viHLZ124CXsmqPNmLiaUkhgY0rfSrI6Zx9TzxSc/Y9+Yh39iUMpErcVBQX\";\n  b +=\n    \"jAxDEnQOrk5GI9XVGSoSL4utjbwXIA6pMRIxtu0qXzgWPr2G+gHo53SmPdvYttzXaVuS1+It/4S\";\n  b +=\n    \"W/6KuyHdqq6zWZEQis3XSNtrnAbEmEmgoVQKrDBvrOxJ4qbdfziHG9Se2nLuX/cnckT43ERrjAk\";\n  b +=\n    \"3b5JsMyZ9DR2b5Obg3GZBcQzIHeAoNYUjwTKIJy9kjwa8qrROFxCHjk1hJs3Crin9EIcGpHkk0f\";\n  b +=\n    \"qJqNDywIGnneP8oM4B6/V9liHkHvjdGzkUd7/Nmeauae0TB1tTs9LZv7khQGpKyLj+r5KeQnwvk\";\n  b +=\n    \"Z1x+LpKf1fJzifysk5/L5Ect6ZfKz5Xy83L5uVp+XiU/18jPL8mPSpD9ivy8Vn5eJz+vl58t8nO\";\n  b +=\n    \"d/FwvPzNGfnfo7079vdm0dlbjrpI5UNLFNYb/UEV+haEohEQ6SWgeD6x25vzmnnyl8nGIn08/mT\";\n  b +=\n    \"bNkehKYWCfLA2+lkhYFOsMuq7Pn713NgoJzuh1D93rSXSTXnnw8KzYKdyP7lb/1Z24t+rToyBhA\";\n  b +=\n    \"4i5mmOcJrsuIwoRIg2XqEpMwY/ARwdtlfSXjWgYVbE2UDFRxTbR+0g2noZleKznh4k1NuSI1xIY\";\n  b +=\n    \"DJcyTXWoMxBfUGcgLjwDcdHLH/cKpd8fAfHXf9C7/NcfxV1KqKV+m3/zg93mv2iPtssbhHjcTzU\";\n  b +=\n    \"1uwQ6D4F0D91ieQRhhj9tBMr9jAypNCyw0x51gAivfjKdv0GkNkQxfF/F9oHZaPQWiw8el4LLNY\";\n  b +=\n    \"rWRC8Gh75lENdgnhiFC62frNhBdgAKMB69eI2IPF8azVjxva9bE71BiZt4XP61ZAID74RpiRm7i\";\n  b +=\n    \"9bhd/SmZ5LaTZ8KN/3l/puej8pHw10ftHrX76rd9UHr79ptrt+1CA/Am6XxJd72UzH6JFzs6Vhu\";\n  b +=\n    \"G41zKu6/bbkShDj8seWTMe97Mtz3yVju+7Vron+K/X27A/O3Ddz3DGm//tjYhjMQhQYk0fRK8j2\";\n  b +=\n    \"evwXOG+jXFPDDHwjEg9ff0B2+qxtvLobhX++mU0W8GYcWQyyVdSoYbSFdupmaBi9Ag8q/nBeard\";\n  b +=\n    \"Mk123iA2kqiWS4VHrghgG1G54LJ3Gv+/m/MY2QRFoDQMZ9IEhnqxLQWDSo+J0SuZhWSEgw1E9Jc\";\n  b +=\n    \"t/AdkAaRexKPKoGOwrCJ96yVfwqVnni/abYbSrzKbdVyPLQSwpF7feHYPym3tpJ65PBQOZsckPv\";\n  b +=\n    \"sOtgZi2R3yLc0I05XiAZDEPLwT9QPUSVAWMHlArhK4yfhPqvMfomKi6R830jAIAYf7JN9HtYmXi\";\n  b +=\n    \"LZQhf7uZLVUimmyiHRiFashJf1z7sWJ96xVgv/56+fUmdMcNnkQlL6T8bL6ybB2djP3VxQv9gIj\";\n  b +=\n    \"pvtBJpzJLJVGHSWZ+xa3wojBA5+vMbEBl395936Nlvd5tFA7OvdCSWTOW2wExychPztO20Vc58x\";\n  b +=\n    \"Q2PF5b7v+KHx5QgOcF6e8NHJ9r5+6AE+qvqmIlqELas5pHhTOobxufRHGxVXU2//Ef+F5h47VNV\";\n  b +=\n    \"ELR72OgKw9b8A9a3N9Y+C9fa0UQ7ow8YafGjCTyn29DRDWHTHB08PB8HoJMNuJvD+bFq8ts53+B\";\n  b +=\n    \"P/gkqOg31ZGFumAvar7i9y1nqF02YtGhoz3KwhRv9e/UrBpq2QilcXGdDn03+i5wTX9aTJ0mXRN\";\n  b +=\n    \"mU2X68FpP7cu+dIiNsynu4dKVb6mDyJ7xrGCoMpifrBV4LWwBkLSSiMSKUvCZSjc6xtW5enEsSI\";\n  b +=\n    \"ukDXDNdKr3mhdHQ2sgLNcPFSWmkCQkX3NVx9ngLHJTCyuJ6qYniTUW0wxkDueYxHjOelA4E3IQe\";\n  b +=\n    \"A72ZulVOm2aMauqgexH3rzIPb1ei7fQuUF9bUl9bUF/DBzOx/BpOB6EOILYiuy85YCLZOXiM23U\";\n  b +=\n    \"beqB0YsZNgtOJbGeHLy1ea3Jlt/pFBGKQZVNBQOrIGUM/P/a8PsX1PXlX4ZoY50C1rif0OfTj7G\";\n  b +=\n    \"/KsJcT183ZSr4v7cYbgoLPhfH4XexeZPLvwSZjPNdYTyAlOFFtoOVp7kq7GkCTjGrNF428vyMLm\";\n  b +=\n    \"thq9A+qe40Fr6nfEKusF9idwnsq1r6QbAkqV1HDTGJNaT6rKe8n1DTq73ZL+U0COKIB8Cz7Hzkc\";\n  b +=\n    \"8A4T29dKwqpC5iJ4iQWLtTR0oZ8IB/bQhsJMe1KOBRYs2S+8Df+Qoa6eDHJBwcH18tdLQjp8+dd\";\n  b +=\n    \"3GwQTF+mrDoAa81UHrufAkVVqjeNwRnCScJ3C/5WIyVKioSJiEgaIQMQ0IdT91l+f3yWuXzuuwc\";\n  b +=\n    \"rcIFVouCqkrAIFG/qr0Wo9Dpd+4tFR6tPPd/3/1F0HYBVF+t/2CrwAi6KEJpvISUBKQAREBDZ06\";\n  b +=\n    \"QYU1BNC8oCEkEAS2omAEIqKSD0DoqAiTVBUsKIERMUKCipiQ0XFdkZFRUX5z1dmd98moYne/b3j\";\n  b +=\n    \"ZWd3dtrOfPPNV34f4VbaR+4sRnEe41VDzCm+E5D4mfYhvhOkOwc4GUIoMVgSFr99RLBt/BpwcJQ\";\n  b +=\n    \"fLJ5GyAAAEF3uYIAu8B4rN3R7kbTD1NH+UqfLIpW8CziqD8IrKlzOfcBmkCXTgZg+koLmPZWiUs\";\n  b +=\n    \"ke6kR3PT006I6nhwFW2rgdtghH3+K3oYf8WonsLLpuj5C8OveQwgVqbg817CHbJS6TndWwhxr3U\";\n  b +=\n    \"HN6qMkeSlut96GHaLBf4jDfK9Ba6yoZ7hXPEboMHIgrfi8WvkbnUBYyoAXufU+iaFCRrAE/szlK\";\n  b +=\n    \"ygF8c5MOhyw5dKSRWk/3DI432EBbqcO47VZJg663cvTmeCXGyMX/koTHoDisyOQYsd3b7RyoUHV\";\n  b +=\n    \"mzlO9/TugxvTvMI7xIRlVQsaWwP4tNGL7R89sJwoMvq96+3cES/ta9fXvoAr9G3163SN429eJpH\";\n  b +=\n    \"hpgozfQjRBUgdBENQYgqCUogex9MglCicmSeUXJRtyCnTlbdWR69COQEye2Om0KXTU19krRuwq5\";\n  b +=\n    \"pJQos624TrbhkvvFvJRoRiLoM3eAt4wASxJHAkTdFGc6xmjECQDDnmcl3VEow3S+rmycsrLBh1u\";\n  b +=\n    \"Xo54Wy0LcuOhRvWIcE+tY3dwxxbUoI6hXX7ZHXvqv9yx17ljgksJsI0siWPiEoOsTMasiSHyjWk\";\n  b +=\n    \"d44oFgbq8rlgBkLV4XLEC7IplWQH0qzkj3kAh0cBgWfBQAWJL9rFAojhOavXCnuB1Ym+qSMNDIT\";\n  b +=\n    \"qLIPIY3DN/lSDPLiTzEZl1L2Q9hClxz1wVRJBMcaOltqgCXotyBJkGr6PdGO1nHpYr7pp3q451r\";\n  b +=\n    \"JFlTkFzkhQV9GSFa9Ac+vBqV42iowje4PpFBeaTUHVxXFb5PXNiizo9w678f+rZp9Az6fuP2jNF\";\n  b +=\n    \"EP8IGTsyNBwhKBNeGBrTeuDg4Im0H6VA0+XDwSnmm0aVE2UDG4nd2gmziTaZ3wROmA0Q3rYakcg\";\n  b +=\n    \"CV+4NEQHVhCDyqpJhhQB/pE+2p37xPNsSw2jKRFZCENRvU1ERizo/eASmQyRUDdlKNzB96wFcbQ\";\n  b +=\n    \"C8NOJBUAHCkgBqbuyVXJNmT+kpOGVIko846sogaa/nLLoxxV5D1xCPAJU9VUHuwwsyjKsUrTbEb\";\n  b +=\n    \"VmyqCfCXQ/aag/gowUDq0Q8ih5LJSEI8PhK5C369GhU81sI/SdkIFQn7fghO3cc6BbnjgPa4txx\";\n  b +=\n    \"kFqcOyukYMC5QwFEd3vuTEXbc/Hr3NmIdzZ67hwg+3TPHQjxpcKvuINos2BE4TGQLN9Ekswj2Tj\";\n  b +=\n    \"SYDBQoHNsFQnm0/AtyzB5xEMiW1cbZZk86sc3eVTJ5NHxFWFpk4FiDXJtoBTHxUBgW/vr6bi2D0\";\n  b +=\n    \"zltX2ijkp7WLejG+P8HQUTWLejpexby+pojH2rfnz71uN0VPpwuB3dFFdORz9kCeMKjc09eecnF\";\n  b +=\n    \"z8WmYFWKlGlvZ9bejCe45YaEjSDUf8Jq4p83gLoB50YGEn42BrGIdHdsUe/NhZ76/yBcC5ns9Vi\";\n  b +=\n    \"EOtU2PJTxpAK0V6/QpOQrxF7UbmuarKD81R/B8FJz9dB4Nq4g5viYjoIQ0rb7XE7CAFpdHfM/R1\";\n  b +=\n    \"Ew0wVI9I4Hfw4TnbQiTjFHZynnkwH3wI9FKF5v06iEfA6iZPuDK8DOWd1504xSyISsxpcRSyIm2\";\n  b +=\n    \"JpPXAuk3El+HkjvofWizW8FEh7JExS8wkDSxMNJygQgNsIQrhQLC4x2AfRpNHfwS4pklHVRKoHa\";\n  b +=\n    \"b28pQWwNLjIgqZVobemLuG3nmUuToaskmLtRaulWFvGNL0aT7toQskiUJ0YrSSLjr0QujwQG6QK\";\n  b +=\n    \"9kKSLoEXizqOjE9wi8hCxaxGgcemUEganQTmOvrBkezf8MTq5EVPMbkJt53cz3erPhc3jy8+ExO\";\n  b +=\n    \"/Hz4L39ECXcM2xLPZA3Lo1TgSi9j4HEd7M0J+9dAOZF1NMLXG3ZW97I3yvOwRqM04OYd6ZK7fUN\";\n  b +=\n    \"EZsC78nAc/deCnNvzUgp+a8FMDfuLhpzr8nAs/58BPNfg5G37Ogp+q8GPCTxX4qQw/leAnDn4Qk\";\n  b +=\n    \"Loi/FRArHr4CcFPEH4CCFcNP/hVNPhR8fvkHf8/kLLWHQc7Hgjzv9fyIt/4rDYsdQPJpFMIIM7+\";\n  b +=\n    \"CvwvK8T6X9YqpIMzK3EOQ5YIOVwe+lLM4Ts1F+fIPkYF4NPZ07fD00RE21YJGCpAiOngIKkmqJV\";\n  b +=\n    \"4KioOAj95VS5nUa23GQkStz/enl+G02WC6hhBqtL/8jnVsekmAUR8liNrjWc3QkTfSNRZBQTKEg\";\n  b +=\n    \"bpwG0lQC6D4INHFEuXimOxrKZRtDZQKo1DeACMYaBwuHlnWSFgMy0rdOnHZaXTstIxA8WHUlysC\";\n  b +=\n    \"0EKwTGODA1gbXkMLtixlg+ZbOlFUHWkaoW2AYe9PiaYXIQir5g3GY7qjZHXyfHRQgkxEm7zPYN0\";\n  b +=\n    \"B0pKGK0AYbgAGYOATKBDmiPQp/UEgaoVdvADoBQQSBYbwCgQEL1YqQ8GpeGEAQdXnIcb64xMrAC\";\n  b +=\n    \"At2RAX4FUaxVIe4h+vl3tYAF8gwoWBu+0BWFHSEkD3KrNOonQCqsCEjcwZrQqwEyyIHhFBbtEfO\";\n  b +=\n    \"4KqNoRv2fBF7tUXJlZYPREj81FOKngZumcUKwoKw/lPtSmiKg9ANfmzWqtBLy9sQ7ZgpypLjX+3\";\n  b +=\n    \"+nSE8BRoJ0oyt/1MRhCURAVvQ8K7CaNSQg5widgqi3dCfYDFNpBk/Xc1Mq6qftv8hwCG55EzQqR\";\n  b +=\n    \"vCBAHKK/Kt6SghQ+jsLWRl6JWfl0QEGdMZwR3iomkmhPscNmKpzJLAr2SFxngBXlCOUPApGCPAp\";\n  b +=\n    \"C71WCyxZ4n+syxLOvhtPWiksC8AnIUtGc/YDiUG4ZmjoJSCvHkEa9hBT9wTZdtJr1C0Z/dGudAJ\";\n  b +=\n    \"A6YqrJABF7YwJEdII4NKu2KRTAfDdakQGjsQ8CRPSlABEDccen0OZugIjWMQEikn0BIuxDolAzI\";\n  b +=\n    \"kW3yRxDTGGJ6gGM+vAWfzIZMAz9sQLkj2XE+GPBiaHEcJQLXxtZ0gj6gOHxxwI+lPyxjmDITOmP\";\n  b +=\n    \"dcggL533DHKC2GdQPGELyt0nCGcnAomR/lis0ka53OMy5hcz6cxMlOVZxeG/Ii8zYUiWYh8rK4U\";\n  b +=\n    \"lYvHOlSmvUsi3Cj+A5fg+qeYnGkl8Xg5XIpUeMWUGfz4d9TpgSSjjvyThHXN+0HGcCLdCYw0Oxl\";\n  b +=\n    \"XDBXnCdFUX5AnTFRhIF9MO5NKLjhrfOh1rMNiAbjYI4yfomE5awVaacgpGYWymNFPn9XFK9l5zp\";\n  b +=\n    \"L3XGejKL/oZ6sqsP9eVXcAg/E1o38mov5SB0lQIlIZaacHfrzhajKIeAqAj8HQdWXXKRjG/6PAz\";\n  b +=\n    \"fVtMVogwptB+KLJGnvIobBGBnQY6UU9RZxbSOmk/G88hbiB7IoQuGYQ3HTK4/jhkMMWBoJG1aaT\";\n  b +=\n    \"C8bwnuLtJifoNLNLuvwE4QqlGiW1GJPKMexRid3qLENK7V6IlSxJGQYwMtGXUxGlIfA34IuI0pM\";\n  b +=\n    \"ELuO7jnbWtwtagczg60wFqNPEgSc4t35OLovQzDMvwRCoBLiiEO41AVqrrBy9RYHSefOYxcR59J\";\n  b +=\n    \"pbd7EBR4fUy28/gG77THPqpOe3XqP2at/0atx+/LLdfc9qveduvedqvedqve9qvedv/tOqG/NPr\";\n  b +=\n    \"OX6KvInAK13ZsgpZF1RJm78FKdg8evg7Kot5eMOj3ZiNNzzqDQWvpmpSlk7q7alalrkUfTbQQ5p\";\n  b +=\n    \"ALKQbL0V2t2DCc6AM3r0o5IpkXXY7EQuLxaaze902xQHGg11op/cGGFsWx+SQiTUaBorDSKoqhZ\";\n  b +=\n    \"lW0WxqBszvnXDsYO5B7MtdMLIl23UmwCoAnzy02kEbmiMqCUM0zp6oIBCG7nshQkJZ5CEfcxkxR\";\n  b +=\n    \"/dWm6xN4gk0z0D8QfMnnUDyghRzxCT1FcZkSwiAiRoiqnvRs2RJKIug4sK+4uIodHqYGpUQijgh\";\n  b +=\n    \"U6VfuOBego5vrPf4f9IN//nkG864Vsdt+M9/tuHbVUL0inVkNhhH1kLZLQBwJRgSVghiAiYGOyN\";\n  b +=\n    \"oYogyBMwoCE0wGJEVNO8PJYZwbgQdsYlBYpMwYb7KLUu3l62iLUunLUu3F62iLQvXADwl/xQpzk\";\n  b +=\n    \"UZIHQv7PFj26I6TjeO+RWZTKHXC9FUsHAqNtjYCg2kXEsr0znduuEB4uVLywy/aVW4tGmVeRzTq\";\n  b +=\n    \"nC5plXJp9T6ktNp/fb/ldYvCJxG6x8I/o+0fq9+Gq3/+a8fe1XSfoaANj/VcUenMKKo9X481kcd\";\n  b +=\n    \"IRi8PuqMxODdpshHfYUqzzEU8Rn8ApYaTtJ0YRTYfl7PAiGXInM4EZOfkWJ3NvElm5iTozx6DOX\";\n  b +=\n    \"RmfKEy6A84bIpT7gcynP0BR/lOfyCh/LA05OgPK+584cN6yg4sIFQyQoF/TSXM7oCO221wLGhkN\";\n  b +=\n    \"wYX5qCcGPcFBywlhxMBb1+W8oQK4zPwJFX0C2+pQzIAqnaLWWcFkhZLWX4FkjVaymjukAqiVLvU\";\n  b +=\n    \"aqRB0j7gBqL7YQRDY9Q0BsYd7i0p8CIHuVIOLh1QUKw4se0RJXdNFnxrLJZ25SelVR6mQvjJ6r4\";\n  b +=\n    \"hh5zYwjZMg09d4kR3NDKg9IiD/AcF2zj9m2infS1Dj8nrot3cIhEwYOAb6/9gbi3TdybIXhBxwj\";\n  b +=\n    \"5ARW9eEWbqqAiR0ZiFAMy0tbHiDMOaCfpCep7VCk1AjcNQlJD4F5BMexJmB9RRHobjMVg3zitMJ\";\n  b +=\n    \"yNrhYBYtUCsPzBh4A1IPoY1BrTO8APEWMZU5PGmG2R53mV0Bchh98gHzUTGDpTY4t9YFQDWLNBy\";\n  b +=\n    \"A4PEANpcExjRzbm+AuX/LtYopyxfSXjZIUl6Irjckt36WwrShvFB1gPl1H2+2zR/yrTqtIiNpVl\";\n  b +=\n    \"X+YsVfpjOjf+57CzpYxtpxqLJuAESIKhNLyAcUjM+5KDreF6fHqQBTTp36g4zr9e/8ae5MeI/o2\";\n  b +=\n    \"ax79RZb9HGmwjy17zRDHZCdnrn5DuiwxCsOWJGPfFvhL6wlIjq119IkTTS8b5o/uQ0jUUW7LTSC\";\n  b +=\n    \"xSuu+RFynd98iDlO55EouULg5DHxcTNr0bMpxo00MxDaVpVpshEgTx+d0AtRx5lIqxBiE0EEwSw\";\n  b +=\n    \"wRADENQmGRzBnIlkHglGrwfkMgLDZoxCFRtyHSQNFWWi4ejYzxbNrwzXDcixdYIKg/QEhxyuhY8\";\n  b +=\n    \"HvTJIPK4GL7uhkReuvqGyYmhFLBZrzL9hsQwX8HXhJxh+DGsMDl4EdRbcLIVEulJiUHOPOmGxBB\";\n  b +=\n    \"nCMID6QaWKChTYMwGkbGdxvQClxFSLF60IqsVmrQapNZjCNUycr+0N1MdC3+xcy1BZz2vzpSs/q\";\n  b +=\n    \"o5Ua9gtMC6kWVVBulN9XgEGkcNEeNQIbB7cpa5WUvhEWMod0IVx7MO6pMSHfs91Xmf/fEMQvp3G\";\n  b +=\n    \"rtb8zZ26Z9uLJtSuI3ddLzGgllGouOSpDrvO40lPucB2VgpjIeCX4BoL2orPVlaMot7ryA9CEuh\";\n  b +=\n    \"RussS3PbjpbIceIF+0Gwt7PIkn3FWnFdskYiXXIA5SRfAGUrNoCyJ+CyN9qyjKe8Q42NJYng5aC\";\n  b +=\n    \"UBRxchYEiQDUrQXqLQL8aKg3Sq7pqWsy3APIFywDzBfF0FTkQVaQ/NUY0BxmfZs+FN3VzvorIvB\";\n  b +=\n    \"6dLgQnYxTdRAVwilmnq0RW8KhzXHddAlHvDDlr3ST7VBSIgfQelc66A5GsECFoHROdGha2d3B17\";\n  b +=\n    \"2CHvZEQJO6dwrwZwdjTPom2qw+6vBaPM5vgdGYtQgoVQ16KOkeRVekDMBIRvWCH+7AYTCIRialq\";\n  b +=\n    \"71xezEhEuoNEZEgkIpwYOArUcMEEy7qUlBtfUsxtQceMXcIbPBR7WFJZcyvBiN2GeWPulRFxT/V\";\n  b +=\n    \"F3CtD1F1mxD3dF3FPd30lvaHwdE8ovPVqLPgAaeJJ1R1GFTep5P839Nz3gQ2JuQxFn9fCz0D46Q\";\n  b +=\n    \"8/yED0hJ9u8NMJftD6oS38tIafFhhg8QwFiiwfETMvstIlEOjEB4RI/JjrUU136P5tCursxCSEa\";\n  b +=\n    \"DJgQYmPxKmwFH/4OCGSKYhmJpXDhLyNUdbBv8z8TgdUMwVRzcTYGBRw+FYjUqoMZG6Z4ZynSlBo\";\n  b +=\n    \"yTrbJnH3OHE1sh5UwGIryAJJsTwmCI6gksJxiYKIcCbmWELIVdmEWhGIHVnMe2BuVZJ1Z4FNFYn\";\n  b +=\n    \"4Wb0sW/QwywhNxoYBsldb8nnkRaeR3FvMyC6JRi1RoUa8PHGFeZUo1o5ivk9RRQlbTaUoy2w5hV\";\n  b +=\n    \"ialEWaXyFcMKGl+eqS1YDhrqxGHhGwzUtdnwFaQLBekYMxr0a1KVIdy5GHxHsAshUM0Ymr32RpC\";\n  b +=\n    \"imuzPsD6ENhyLWKkG1AgMnoU+MAF4bcrqR3sCO/RwL6sIpxLj224Y5FOVuHA3UsxzAcTF7INry8\";\n  b +=\n    \"TMT7sWV4eZkYDprswsvLRHoQtAp/3CX6NAfgHKATJJguOX6FNboMBIQHaHJ6UnqLczTz9CuedHl\";\n  b +=\n    \"6ABYjiHp5slEIwocRguIkhE9cuRA+cRLCh8/XflgxOdr/+X802s+UIc5wxEwyji8bDqI2g/zaDU\";\n  b +=\n    \"fqAyaCrFSC+PWae2AkJZFGtgFxhMP5XcAjX2chHkm9yGmefcTs3U+j0/zuZySE24Fn8MacrQ6EG\";\n  b +=\n    \"62+O1y/4uNR2gRD7o3J0jtEB69vOoKfDIntVRaFHRQpVQKTM1x+kh1YEZBMuEIMMIdt3qWSMTLH\";\n  b +=\n    \"fA643DXc1M2dQG+L0ROfAUooqZsL4bRYYhC3BSnRNnMH4DColAfKFkc6cOYPUHlwycbP3AgFHP/\";\n  b +=\n    \"Bs3cHZkHjijtBmEIzh4IDQKcKEkNolIwGzAqdFskMOtgLZaniWWKYjJfB2NdSQLevFZgPiCaHLI\";\n  b +=\n    \"kW7tgx65bCUPxo0PwAmX2Qx3TEfcrQmxbZIoG983GadzDe37wFNWTzxLOTbB7akesWnVxwsMpsH\";\n  b +=\n    \"j5l/yGneQtqRFb7TCDQ+DQhEIOKAipOVEdpZGamun5s4CaLil22ZgDffVg+4MCCWwPEu9XZtVM3\";\n  b +=\n    \"P1HJcFdMfTHtxLIhR7qulaTVoiGyoI43znINn1E48/c29HbthA29XSu7oQ95joYO2GqclGlo5ss\";\n  b +=\n    \"6Q/Wimh5jULVR6ovnEg5CRziIGngJQTgaiTtb7iQ4CB1gIjqhhQ+BQMBV/SzAh9CRXrVEqNakLP\";\n  b +=\n    \"uVOz3hNRpo1TzIHLWz2NNQ59PhWtnkyk54waAn8IPq3ABtwEPAFW2MQ325mzHLOTKzk85G9AgQj\";\n  b +=\n    \"807wToCAtq7BfJT5xUohfJQ0ct0pxwoYQUkd1eGpi5Xlf9pTjpyL9itaJO91l5JGHPPPRDpPAkt\";\n  b +=\n    \"qYoR3NPmkLS9SkD21ATtL0VHky9p8iXPGxaarIm3Zlhk9A+X5r4QCzckIosj4mIZ1hog81KgiWp\";\n  b +=\n    \"q9KrpjR4NvMvBTUFFXOxFFE8TEjUfaNVKGuyraPcs9pb7Q+DCg7dgX8UNF5QAeiWnUICUR9Fngg\";\n  b +=\n    \"O2yAcrW0mQgUE9MNWRdSBt0zwx4tFfme1tDGdxq87ZE4Ql5o94BqwNxzZ2AiqRTkBs8e0e8XUpT\";\n  b +=\n    \"GGgAFQGOm7XKG8jky6FpDWOwt0jx6FRPb22Hv6vtPXfPlGKC8pOXkOKuUiXx38dFVpo3Y8KgTZK\";\n  b +=\n    \"Mr3QiETVSY7FYQspfUnKMh/RKb6o7kCUkJAmnnxVMM8t5NhqPhSUDMgit12Or6HBzi/QqsVOq1i\";\n  b +=\n    \"YZmQ5UaGSKXsjYuiSHBFFCx5qbhUbr1peKZxslcat0rhVfCp5JlbRMcUX5ZrQUL1WexvX+az2pt\";\n  b +=\n    \"5Pikg6XJmzA4RYcJw33lvnf0M9wRtr/G84mo1H/KdUNPolK1BUWvAZkpyCyM7MTNToIKngeVUvd\";\n  b +=\n    \"V69lT6FA1puzgzK+6AkpOCbDoPpOab2TNTdY2pPi2DsSx9TN7g+xf8fziWLVW8oUjsZVY1GWfbk\";\n  b +=\n    \"HkWJQfbkx31+g9/e3KuCIQ2LUYaGhYOCPswc/YGgA0bFzLTKTLwGaFeqw9V7dnEN+GyV+XnnCfD\";\n  b +=\n    \"q92h8X3GzkGMuloVJhOWSu7xIQkb3RZW4e0zEMAKizUvc7Un8j66m2CqSUqWbDN2GIjc6xmmVDN\";\n  b +=\n    \"iMbNhbyJIT471DBDcyW1PFPhRBjGkEn4IJShuWxr56tOGpLiYDBEKOSMmjux9tdC07nYBSYUc/6\";\n  b +=\n    \"NX1qbyIkH7RuR1UVyTQ7FyJ0cLDKGIikCSEyH78eQmS5H2+6Hn5vOh5CbpU9vtrPO9bbEyItMvx\";\n  b +=\n    \"G0hZ9cOx79fcNr9Y7BsDRXLzWy/PfOfpJz9ZMKWV3lekH7xpxucL3zs8d1ArvZtI3vTbxm+mL77\";\n  b +=\n    \"1M5EEsPxjx/Z8/OuxrW+GWumtRXLdm6C5+nZrDqo9kPSI491MQ1LZZMZuETdNuqeCF4A2OYVxe3\";\n  b +=\n    \"auxgPvg2GM0KfRY8/B10FtJBeBpRKtUnW9IIrhpJmIPgpeRYhE60lybxAYTGv3xk7FJ6pGMZXel\";\n  b +=\n    \"66sVvoQukoGrBi5daPqGkCAiiUyDSKIRW6SjtTSpzgEkmRBL/AsD8c99mUQpy8wkmUjQSskGCCw\";\n  b +=\n    \"dyHhA1uMqiBnxrga4jV7ChxgugpeT+sOlsJqF0JaFEd41IDqbkh1nLC+pohjb0xT4GD8tzVlvAS\";\n  b +=\n    \"I8wpswOswaXJiAPSbUG9gdaLUhjNAHTCORiXUKqONB9r1SsQMiI+MN+xwguHwlg4QPm4fE8qrd5\";\n  b +=\n    \"7611Z8q8/bg2wtUBVEIj+dzKlV0lfHw/brskcK6bDwXACHJNBXA69ExhIylwkHAbKBhrPALSHbo\";\n  b +=\n    \"7G21YhHX/0YRjFDi2HQVJsqSY9j0TQ1FysmBjgTAE1DErEZdkG0YgBmliHiwiNxQgRGomEQ4mri\";\n  b +=\n    \"vMC4cVZYbCFvBSIcZlrPskKOZxhCP5dqT5K2Q0skjiFyoxOGBkQfYg+My0sMUKgvKyBj0Ot8Q6c\";\n  b +=\n    \"bWh6qxgxwYaAHmhN7Xgd3B9/tPJzlBpgMUNx5cG6DHzrM/c1NSC6jCdP+3ibMU8towwa/E201hw\";\n  b +=\n    \"klXzGTmFCg+o/jDbDOM8jSUvChgjAkkXudTX4AFBxXkN9V29hIh9l8Kg4K3oWA6YTVyCoIBEs0u\";\n  b +=\n    \"cxEZBtRDZqgsxEWq9yO09yStb7mHlpbZnPjy2zukbW+5lJxf7K5C1ig7QBoUrQOQiNGqMpjCmNl\";\n  b +=\n    \"agB7aSDspZHl8ckXa8c2xuFXrNKDnHSmgm0YYF+ijsELbFkGEmYWmsq5YJiR+SfZplZ/X5PeZZw\";\n  b +=\n    \"Z1T60hQzcglXDSspP7982d9WytX98rVyBTBfefGjhrgd/fve1Wan9IKLmJrFP7+CACAoF1LB87/\";\n  b +=\n    \"arhS4aiHdIpccWU8smfJGj4qHYBBaGqpQuzZO7rMK8lcWWdlvIUQpIoSGJ1Fy1ALBv4pLVr46So\";\n  b +=\n    \"CZZz8jHjjp9p+LY8JoPeXUFcCQxd6qkLGCVwEw1Uion6wRIPFgUaxD7J9uW5DbtkZNu2iOlmoZ7\";\n  b +=\n    \"21y/LuXI6lNQn2hSfUKw36A+wXjSpD4xQX2iofqEwiBDgyKRUiV41Sdz/MvGARWPWcaKf81wBDx\";\n  b +=\n    \"xvwfs6uMSFCLCsGIUXjFKuStGc1eM5l0xt5xEa1r9XY0ZV1prh4JlOD7oY/DAhI6LMcyY4TJjxv\";\n  b +=\n    \"GYMaNcZmxs+dW251oDBWecBVzqyos42jdIXAQNxcDu8ey5RhgnNnHauC0ZZNGEsCZ/aOj+Y6u90\";\n  b +=\n    \"PnUkPHlOXQL+BmVI5IwZOiWMqPZ3OBwp6jgs+tJ3yGLQlRTpBLDfnYpB/SRnknm2+iXFMY4lwZa\";\n  b +=\n    \"sbveUFBTI0uRZnaNssynVWwzRkSORqQ44j6ekyCO4NAhLI7QCH1b86gXdRede4ULCU65pMSBn0M\";\n  b +=\n    \"S1YI6iSR0ukd43hrIGnQqhcQOWmmlIgo7NJZA3ELYs9pkPKgqrCoGWzmLBtugyAGKeb+RqHFIPM\";\n  b +=\n    \"FVQMw2lNMhpsro6SlqYcT7HKO/HQ1NTzBSxGdPmQq4NCnAAcsXIoS5DZKTQKFlFFp6IYyZY8bpn\";\n  b +=\n    \"HkRnkkjf+VitbO0usajMAGu4ZFZqmHRv9ZDtIEyu6Sazg5lk3XFT9aVGLIOlIEMOJf5bSJZdmtx\";\n  b +=\n    \"dBalFXBI9o6FjGkUT5ZjaAr2VJATEgHbHC8o88YFYn9sReYoRYvE9aaF0ioSIczDyNuVIctFbk2\";\n  b +=\n    \"Q6d8DjgXkLa7g5m9EUEEzmF2GzywsUuhEZJwnaTO5+UzmXYu8fGb7vXym+r18jihlevmMdkH4Cb\";\n  b +=\n    \"bZXGoATr0RYadW+cF0Oa9I7bdR9bmZQpCSGDdTiGRStptpkcpupo+rrpsp+NWuNBDjklBwNDGfk\";\n  b +=\n    \"uWgJxC3hz6jKgp+cSaBTUSXyF0MZsamlGj0jAJFtlWy8NgYZ96hk09wsLQHhNHSE/gQCHTYEeyr\";\n  b +=\n    \"ZOKh0l0FtGgj7cBYSgS8RoeeQDRSJ0CBoWBCkRaakC0xWoMM3UkWtqprXovCQZIYN1YqIAQSmdJ\";\n  b +=\n    \"WYpvXeHsl2796bWkrqTUj9PS+Mp5GElWxCiIu3NFMXoMlUvnMlMAzh0hK5plDuxVy3nV1THjVjc\";\n  b +=\n    \"QO4PePsUwJXwLCmOrkq8ScHAKdYaYZBk02CJmmxkpfvKgWDAUW6mV0YKtUAgbUy7V11UrZuoIBn\";\n  b +=\n    \"3mbTnIcgB1cjTDwcNb6TYtxrtPQSpf35f9is9b9bzbr5+M066+aTK+GT2IyrXQn00yfQ6elOpoO\";\n  b +=\n    \"c4SdzLANGnlTx8SncULXqKVC11DcGnx0Q+mAN8CW6HCMVYn3TfZuIRvlPgzufAqQatbTdhhp3hW\";\n  b +=\n    \"UNu8mBYzCfQP3EHNDiKHOSGmhd3UsrJEnJ7i9BxFB3H5Q0FnVfDlE1kGiyV1ZaLARKKSNUkZNRu\";\n  b +=\n    \"umxgB2vQJ4wNwaIPvLvc3ZcxrN2Uoy/a1aOc3ByNk2UsMyTfN/RQuXsMfapUIbpa543kJCW4Akp\";\n  b +=\n    \"p64sXdZMcbH0MH0pS3OEAq0AVd1s+jwZmXZR5fFGLbEeQxbqrmIJXgcWxCjtnXkOBT9mEdJ0PRN\";\n  b +=\n    \"5Ns1BU2+bQkNUS0RNEqKPftuMdWOwuraQ7yBeBTxhzN3/Enk6vAbCzqq2JNs01PHbdP6Ff+NNm0\";\n  b +=\n    \"5bpsOLz+jbZqlKggb68KygDFcouPjZzgyvbBzFedcmc5VNW+oQL5ydeiWEzy2AhABgrihCOHI6L\";\n  b +=\n    \"2sRu51xfmlqc9f5MtIV1ZLxaKrei2VenSV1FJJoqtGLZVGDmmaEatzUJiPZ+bdZeohUMY9Didfr\";\n  b +=\n    \"kRGkxIZxYwnyQidL8yzI6XyeeUxRSyjI6AaQY67EJyjkaigFkq3K/aqpNrLpoG3k71lmrSVffdG\";\n  b +=\n    \"cSPZnjPNCzcO6gSCjEVMIwaZZZf5GHtL2DcCEl6DDuKGJd49AJFgMTDB8Vu2oMbptAzQerlliO8\";\n  b +=\n    \"rW+Y1tXRbVlTD27J5NahlB+Ij08GizZ6jkkgeeH66KJQXU+XFUYUvjsiLw/KiRF58LS8OyYuDfJ\";\n  b +=\n    \"GkDSnfam2F3/2jGuHlSPW7BP2prCkq4JlQME50yUZLUwJ3J8WQ2DXB2ClCGLJoVuSAsz23jWIUw\";\n  b +=\n    \"DJqrJjmcl1hf1fOjOaPZeXynd+YNbIkgoNqvkHgPow75I2MFntGM78IsMes4fXCskQRKyDgEkIN\";\n  b +=\n    \"qOYXesTBFLLXLEbDrKLFPAtO2JjXT7Yxh8ptzN2exnx5vMbcgP6ornUPxtWuwpEN+VBSJcvmLyR\";\n  b +=\n    \"mr8MrkqyPDzvSe7+ZUiUlPBPiJRK7CTG/EsTpMSEAgokgW+eAVXKhFSiMFKihKdI8J4wDwBitiJ\";\n  b +=\n    \"gFkUjB+dgegkKuIQgHrhPYr7gRgxpEaMqgGhW7RjDRAE8bFfGVVRlH1FJHii0pErkdz154bDKxB\";\n  b +=\n    \"6YLXI4dJrcI6JOljabNTO9ViY6OyP6VEbNdI8cfwxWZicHe/ZoY7Evs4tccK34I0LlLpKYjQPUu\";\n  b +=\n    \"/BbLdvHjW6V4y+MXivJGhErTHeMcTUJKAJfr3GSTCUSNNiegDik5y5ymye3IyYkYbChA9N5E8DQ\";\n  b +=\n    \"dcNaktcR4wkUgOAAKqDklyw4BihcBdBkSjAQu4TyqyzC3KFdMYm9jUGHojImn07wGgIuaZJMXxc\";\n  b +=\n    \"0+jFEAKT3LIwrCKUnCH9Ur/FHJbZCEPwpFsJsVcKU+ahlSH5WkPjFR7jQnyh16xZDUhyPWRXLBD\";\n  b +=\n    \"EIxP9bQA57B8QLARiCBk56HyDskaU7PkWobeVksjRI1ENVEY8ggnCRIVQvDCT9IRC0jTwpXBV0I\";\n  b +=\n    \"1qMxRl9NIPq481cNQVgFQRGCcogx0IIVZJoQBANkFTDKgxRe7t0A3IsH29ggh/OWAmeNYjQw7Nn\";\n  b +=\n    \"csALqai2GjzNdsGOT/bqY8UjUzS0BEm0RnwKUS6c9USoJVDwB1EUyUZf5f16eLjY/7AOeeMizYh\";\n  b +=\n    \"yN5fmVGTm9DFIHZle6tDldYTAEHPOWhPQWdo+UDrtoS5APYrfIE1f3OLaOYrM3xWlIIzG9ld4YN\";\n  b +=\n    \"fRGxCPR2VNZSjrBk/OJsIT3wROFIz11MQE83KyLXMq1sYT2BLUVq7K2Z2Jr49i2x6mNJK2FPnNO\";\n  b +=\n    \"outx7C5muBFCcXInSL2H4bFVNe8J0IbLmBjskeyG6I7xJiNFCXmTOfaZk7nPHLqMhOSGYxeLcMV\";\n  b +=\n    \"wji5BFwEAIFbNS9FLORHPuAxTjG7LpXIRm8YwxTRrIiTSr0eezmDiROahop8vqt3FBNsp5tRIgo\";\n  b +=\n    \"VAVI3uADZEYZiyGPgFsLdxXud7cIN5TmMIXXAUhQOALkqzixxUf9DWYgrDEjwuruwk+wDcAKo/0\";\n  b +=\n    \"xHnuqjq5hKDvc89M5pmcQIHKjYS6YBl6e1QTi6hEsWZGGAfKLJFHEM1mi/orve5Z86rnjl/3MWn\";\n  b +=\n    \"lrX45MJ7Eht7Covvr2rIM/8rDbn9zDZkRllTpOjPThGM8+7MkEUnbsaoWHgCUh6KLfMHHdc3Lns\";\n  b +=\n    \"6+CVpHsB/9INMBD1wBJWZU8CBVaXBVCQLyU6nyA5QbRP98rKdKKJCgVk82SlkkcTMZD3Q3hDLq2\";\n  b +=\n    \"RAVZZShUlKFcdSKlRz4OlFLG3AYAXffa90bKJfOHbEFY5hzUekcEzWvOdP1iwFYeNiZJXslharT\";\n  b +=\n    \"wKTP8VBapCQRLB7AfKcvgFcEVTiRpKy7DBsuxrFlxOjOx+3yGpA1syvAo4AYHop7CIE0iHtrE7B\";\n  b +=\n    \"NHTbQvickVAR2qegQbL3IGir+SPRWw1couAxYmeASyxwCgai8ICDEm73dt0xBUBnxwjiWHfMuDz\";\n  b +=\n    \"BlmuamORaB/vArB2smf6wTS+D8GOR2f6wDQWPOdDG3lTIXDToLdvYK2XSPihexh8HUwzLAwlQlg\";\n  b +=\n    \"3WAiL7aIlWrBXYB5ZtV7Mu1khE5KTEsaWQgkDqkesdtkwiurmgISBpx6Wuy7h7gg1hwCFakzAOc\";\n  b +=\n    \"uXrfrlVDCRItVhIEBRknWLdy/+Ldd99Jutu5VBewaPYlmAfXwihbzZeI5avuO1hZZmtmOpa70lJ\";\n  b +=\n    \"sj1XTwyYX+P0C9MsjEMI+Lk6Te8goSMbMLGD4m4PdKI14UXzvQDN4QBNXgNMEYj/mBd0dX2Gp+U\";\n  b +=\n    \"zS9n4g5OMiwPms/KXIGHSsl+NscxHAC88yxx6qizL/r1Pyef7nnIt+y0P+fz7GaxIVDUA4EpjWC\";\n  b +=\n    \"rgVeWlMRk4LPHImp2oTUb8ZxWug5MnJYqLmZNozUmQbM0KTk5RJoEyqj9GD4fMhZME1QwLBlJif\";\n  b +=\n    \"6lSI2/QDAFbQ03KEZBDs7LkJKnN1jMqkm46/ukt2VsTbBQxYjk8SSKGNp7+hOlwOD2IR2/kX/8L\";\n  b +=\n    \"1Rc61efGbMWqd6MgQYYqTmgkbI+jPSiMSEloyK93sBFoUa0prfO9gDQK4NsaAA9iGc5mHCU7Yj4\";\n  b +=\n    \"DGydzBjZO+QwMa0fnYHKgidckKCoLW4CH0uVxBJy5FE3OPmC6yQW7dPw3B6hFczUFJKWnNnsfkt\";\n  b +=\n    \"fBmWmHP+Deqbfjep+bJW3EFPdcJ/ZKtxs5nt9tCduUHL8BCG/2IkY0BcfvFhb5VEqXSzNLuoDHk\";\n  b +=\n    \"aYMGJmNhlR/5XM4GnXkScFlLQ2UAZfF8FcsZz8e/hWyXpEMlU1rEuFds0RDiC04bSLeuSgFruoR\";\n  b +=\n    \"Ne2M6K+d8yTUlGAdUdSM7KUkeBIjS8bhjEZkxw7oJ9exY+pxOlasn6hjB3ToWM4ZXq6iJ6sCaKV\";\n  b +=\n    \"KaKO+1TrGa7fo+KCHE42RwP6PtAPjEgPd8WwLweX2Boj8GEyyyBecNzXsLAnYA4RfQYJelDI+oU\";\n  b +=\n    \"tt/zifm5i0JkvQQNTaWBkibcySycSMZZWOUdgBJYtRV8tTPUW8uicpOble8QisSF0AMdH4wJVYt\";\n  b +=\n    \"iwCBZdPOv6ttuoLmgF6iRjX2H0vb3ODZsx7ZRtpkKe6SmsInhwgpIYAkeuYuKuCw5WLNACL9DBW\";\n  b +=\n    \"FKBVGrCLvqb6AvYPCizTAEZWhmUawNDIsEwDGG4VlmkAbSSxBWN4ufDX1fnrzlNzEg36vGJqmK/\";\n  b +=\n    \"x59XRpb4rS+lI98TQsDxXVUKuNchtC/Bh4QU31nJYbDtl1ijm0xmo0Cpd32igw3As/DlIhVC1OA\";\n  b +=\n    \"2JNGN4QLA5DrggtxskyK0TDw29XDBUGi5NMNF21X/QDvG9IlDhKL+6tnwH8iSfA7lF2Wt7jPvwk\";\n  b +=\n    \"6HuFcjYJt1jBYa7eBYOJ8aT4ADsGOvDiWylQQwsf2AsDWJglb6p+29S8CuK4hgRWwlUBS2rR5sM\";\n  b +=\n    \"qIlVJ2i45cbDQBTpeLqqBlZw1Tj8L3h2mezNyl6PMpDqyESVLHhFF0faxrhEPOBbSo9aYhpHJiF\";\n  b +=\n    \"OFAbxQ5zI8i3dEv0IkRzIrzSSpBfysZRRm+ExahuNp0r3SKBgyI1EgyH7XK2P/K6C5IpjaUrSJM\";\n  b +=\n    \"a9xQ9/NfQTkRJSrEk48xCjVgMIW42V2Bad4UfSFJqnujAOgHai+Q0yNb9BpuY3yNRcg0xpiEPWm\";\n  b +=\n    \"ITejJt0bKQYhSO495Eww2Gy9or3WV6ZPsOrcJl2V2TmJTYN3fxMkz2MrKJgYqKhc4oZK7pqGBkl\";\n  b +=\n    \"Cy8czsjnXaPHOtZschxrdG9G1ll+DD4yVKD7mnz4iXho79uMyrNFm6SynW+slDdGx6gzYGKRtBb\";\n  b +=\n    \"XBiz6MYl6GyWEegsv+Y/Pslc8Wqw4Qc0QuvJRGTYpxOYsc0idLyhTQBqdjPedlzXizwDbEN03yY\";\n  b +=\n    \"i/M5kyIU4lSFWYmaOTNNjtc4wdYMmlqZ65X+SLlFLf8AfJcdUHfFBnS27dDZ0tdREEYJFomBUJX\";\n  b +=\n    \"4Mu0DIPr+apdKWQOS0/080PdcLwF9VdyRG7aWc1SRFFUTk5NBieDDAytqAaJ8uWTfBZESGVqZNl\";\n  b +=\n    \"fm54MXDJFoapq0mkrra983n49PTtDsP1im2OqTec9lXGtcXsRmzQn8hAF82GHErUMRYj4Ons3IE\";\n  b +=\n    \"aXtSAgRhCTBgC4Pb4d9hh3lo83HterPRYUDpFKvqRuSvDdoDj9N6tx9qNq64zhkce62rzZ0tt/i\";\n  b +=\n    \"lUeXdslfecbpW+Mwp8go13FCseUmOv8aYFC7XCmy7yJuCkbM4LS5Six1W6B4rp17BFcHdtQJ5RM\";\n  b +=\n    \"mOWuBSXemSlJstKydw8BqpVGnY7AVlJQno/jYNHQoqT5FpkRGAFgNsEBgnDaEcq7tlghqA60Y7g\";\n  b +=\n    \"TAcOEwkKm59B3kQJ/R6THUFfxVej02YjwvFPIhT/egkEcVEPOWZnl+1Au3hrDhvhWN4mE/Z+IxJ\";\n  b +=\n    \"HJZFwql7ZW3JbsXFQlR2oyrZUZWuusnVslf2pyp4yzoRTZyeqswPV2ZbqbF12nX0FG4DMnGK+Dv\";\n  b +=\n    \"x92FwXAmQ6zdwVFiO1EwNGWBpWqNi7IclB5QSVyAOZYRjfSdDsanQh5hZd4CQVxWAEcvEpR2aha\";\n  b +=\n    \"vhriC4xdepUlRajx6uXYAvwrS1aJUVyEDQI8TG7wewvfIeBnV/QYYCjsTyoMowLlpXgmNoIfrLA\";\n  b +=\n    \"4SXJsGbnkmJ2MSheUqxIgZCULjTiw7sKxwKwRTi0kAF57ArwIXE4LDQHsTikjIpiImjFRkMKhob\";\n  b +=\n    \"7lPh/Gt64HCeUtjGopaq50yC5iCZPtyieDTsYKBwzhU6LWcwisYJFnvrIJlolFQ+EoEGcjEMSJw\";\n  b +=\n    \"OZFnHb/EmNMZO2k127ZPvgKrJO0iD2Gm6OhPhhuFWhvp5NnlXS6jyuMXNl71S9tYn75mdqjBW0e\";\n  b +=\n    \"N1T3WGnuqkG+XUoLuiQB3oIlOchVdONQDCEYq9XgFuJM+9FPsd+ClJVZWolpKrL1K0xqZ82eVOf\";\n  b +=\n    \"QcqUqT2QOlumdkCqikhFhnscBBz5A38vXW61pL9TOSYlgiM6JrFiXVNEVoCMQAYjUJBl7nNE3yx\";\n  b +=\n    \"2GID4yuQJD8xr98RALYq2EMRoC5axwQpumJwIYQzAiQBUkSKHaoVX2+q4rMSQYFxpGw15ttEsWr\";\n  b +=\n    \"mljKKSAfmILKPQ3AkAQHWMrEPGUZh2AY3wfzrG4JFWUh7bqQNs8IOHJHAULBWjErD7ASHZjUY5V\";\n  b +=\n    \"ffd2Oi/ccB/Y54RE6ayp1hEYk8hPH0bIrzURC8nVngptg5OtCo70YIbAnyoPiQampKFByO9R62I\";\n  b +=\n    \"uC6gwqbqZ6awYT4yEi+h6Hyw7CYzYgAo6Nh6g5ITaIoDJag7yh8J5MxUZJQP7ESNMeWs7Ug2BXE\";\n  b +=\n    \"MOZJNYKr3fbmNw5yEgDgSv0DqHF0KOI0s8ghAlziQl5x2bXu/K782rCaJ6j0ztR3+W2tb8/1p1H\";\n  b +=\n    \"ZV7NmKt09dbp/xHPVSQhWaHPRSzh2FneJ0uYfK+RBbruKUqzjlqr5yy4yKW6rcUx8dnUZn/Q+nM\";\n  b +=\n    \"c/SvP7bJO0yyGKbXZw1txOGs2hkBBKNO2HY854uRjVKlrxCdNm52pmrYYVTwwpfDcN9x7GNjxLz\";\n  b +=\n    \"Ih1yT/pbiFehaPS54CvBa295TOyb1BPH5JU8yl3qHsSQaUDIgxwyDWk+pUFtISh3AP9HodXwXcN\";\n  b +=\n    \"5ZDBR9/ekePu20+3JgR3buCd8JXpy4NVtSpkj9t6zp13Pbqee3U49c3ZxPRl+tXzMXI799rrv2+\";\n  b +=\n    \"vOt9ftI4KEUpgovoJK3uBKro7tDMMUG6fUCyj53/zBPWtxcKyzAAXAwNORToYugBMsOFa2lgF1f\";\n  b +=\n    \"SJYmm9IUScB7lutSXyEQ59z8fo2I0GTbofiNHW14Bdcm3LNY1Nul0yWoc+y2aRPHBR/C0gTEzht\";\n  b +=\n    \"loCrH53LHMtxTVqOn6FR4SAmMaNyhope+fpfVvTGb0sXfZW/6DM0R6Ttl6OjU+xXVIKJCV6q7gZ\";\n  b +=\n    \"zy9li3r+islnKfTpqClM49rzpXIXlFf0RjAMKtfZJyT8kFXMpmINs1M9Uj8oaqWup3BVqjHwr2X\";\n  b +=\n    \"xKc634wh71ouZG04yxy4uLtctboXoOOX+VDAatFMzZmhS7/JNVw1pMX8Sx6snjdYZcmo7XmY14Y\";\n  b +=\n    \"rvOa/pDQh2N4zCg9YyODggcg/CU41hEslEZwUGruFQp/quso4Gzffj1YjDRLdzj+G1J8006wKNn\";\n  b +=\n    \"DdkDgAqaDRerROyde0goLV+81rUjJxlAMh6w6VyhOecPVfpkwCg4N3ErpP0QNji81MwcEujWg63\";\n  b +=\n    \"TxRJGdFtF1dhDkrvHLjwUEaaoBiospkiFBekHxMpQW3FAaPahxCgtoGM51RoOxZ1yDYPJDHuKWw\";\n  b +=\n    \"f5iJ0AfZcp+vGwdyNobt5RmnmrZE8PBvOAUUmgrqKdGl66clw1QYvEitkj1/jkOMk08+qxD7IK3\";\n  b +=\n    \"asGCtMFxWgSrwKv2Ai5mKQsKbOJyyKhHMxCc3ZAimuu9ZV9QDmDhQ+MVWbi7krKLJQASPGkxiuY\";\n  b +=\n    \"1D8SyJpMRylsESkRWWtpK5HUWBaEJMg3GeSLFx9jRsESJZIYvE/cmWjk2wb9fTAotRh/vsxPSpU\";\n  b +=\n    \"5CLN5o7V59G8KEXEzJlqbq31z4OpUCruGzwVxIX3qNXBoNwhCxw4gReJQk6p9fVZlTVPxjD1RTH\";\n  b +=\n    \"MQNtqEuwADjskAzTIvwJKLEjygjM92Jr4ZSrBZzCP9VzUaReCGpLDa0rjDvnIskGXoXV1TJiXSm\";\n  b +=\n    \"80BwrJACDcEahMoyXEd68wSUpdaaujtBWJwyD5B1II66isd8x8OYkvBUHlta9KTROyrXxoRVwV1\";\n  b +=\n    \"Is1ShmvwQ0cMBI1CZgJwnNilpiYfHYqWIgkHACtbMWcHbQ4igwhuD6lOTJliGcaSLHxWlorpONW\";\n  b +=\n    \"AwBpayne79qxY/OPuLwMEgTxtx/5nF9y2d24FgkB+cvPdj+/d+fPOXgiBnPLhb198//Ats59bNQ\";\n  b +=\n    \"W+qpby7Yxfv970xJZFkLZE+oF7l+5Z+NyHaxMwIl5KSdGWZz+/9albzkVJTMqn3+385KFlc+f2A\";\n  b +=\n    \"VZEkVDuhYaDY3QFj3AHitKssfmZoNioWVDt4Dg0tD6m9yK/dHB2bIBzof2YDRhNFI1lwnbR1m1k\";\n  b +=\n    \"cC2LTC6ryGRPkdrxiwyWLtIqq0jLU6R6/CINt8hBrjUsEVrECTM36wg6f0SlTZVkc7Q7KyCxUzl\";\n  b +=\n    \"KMojw+AZiiZnXEfa4GNKeyE/YfWGpgMlBxT4GpJdPycJkAJtor6Ukqoa6Z9lgRrGVcwS71xIUOw\";\n  b +=\n    \"LXyFmV75UkvmMP2LDQJ8kyYP6dwNkItRRrZGogNRXZClFxcra9b902APA34/gwRVclzhXpj4Ojx\";\n  b +=\n    \"UU2IBysF9nNQaQIEw9mP4TpSD9pFlTWBzPcD9a+lzQGcj+Z53up7vfq7SiZzTOhXD45ygJuqE8E\";\n  b +=\n    \"ToGyDKI1bzqm3mjK21iJwzB8ZjF5EkOaQhOUzaU6/nFPulxqG6dktiXYwMYquDUKKo/Af35zAJL\";\n  b +=\n    \"C++QQ8T6rE9NndBIu0+aEQMVeDcvzSz9Rql2bMBVVbDBaBqFvblj8cYK0O1auHlwO3HdwcxM8cm\";\n  b +=\n    \"1GY/RsHqUnTdg/aU44Y/ATx7hlU3gaVnMIkkVtpyh4OmEc8c67goVbCrcR9PmylYoToZtUxY6Fr\";\n  b +=\n    \"up0zGANF5vCqWQ+ZSAoWIwOtBrye2LuvBRAb0tbQ6MG8y7djTTOnyM24AtZvnVgMHD400GM5A9w\";\n  b +=\n    \"2rjALtnLp41Tbase21bd19YrSDqzUJc0g0KvKa5VCSVRCgO/lCTSUCyTJZgswaQssshbZFFskUW\";\n  b +=\n    \"xRRbFFlkUW2SRfsqdNmI7bfg63dehFDqxLMiKUmxAZaSF0OQ6ro3HENASHZjRfF6hgxoyBWjLB3\";\n  b +=\n    \"psJdK9FI/kMF1o2ctcplYGlymZLpVM+PpKS7YyzIjZiFgq7wx3GRocw8mrtmN9XX883omsO8gHR\";\n  b +=\n    \"SUFP4Q+xCVHHCJyMRgYKxEOV+ajQVqpeHzvZKmxqcjVCls0ciRUgrVRHVgb1YG1UR1YG9WBtVEd\";\n  b +=\n    \"WBvVgbVRCdYm4itakeYBSQqjLoirMNOeJCWOloq4MmlyiKtq0phRcUwcldotNVH0tTwUZMxEuL4\";\n  b +=\n    \"kplB5EMAGyOjgOLtIuEDJ81JjKin2V89uA/5xx7PbpOwgcrmPmBN42qcax8VieCv26UcfIB1NbM\";\n  b +=\n    \"nPSWfLGzyfll3Uu3+uKJZ04Un4Pc3xKO3CHqVOUZqnKO3ERX105oparf+porxj9dGZG/b3TqeoL\";\n  b +=\n    \"ix/ijWhppgHuNObb7n20zLygSQsaLkIwQ/KaRGO06m2qFvpITcPnM63K6ugD06nIMthYYhZp/Wd\";\n  b +=\n    \"BN73xI10JGgSOFrq5NAGCn/4E0DSBdJ8RQr1WSJFCDFg0wQjq5fZ2qf1M9TtZ0+noC4K98miLQm\";\n  b +=\n    \"M6Sdy87mnZJ7juc+CNoUCUoLgULSHoEXFaZsGwygfj0XiDMXgsSgUNDrSA00IAX9m6g4FwM5VUs\";\n  b +=\n    \"SqUjMLmCQaoYyK8bUJ/AxVteg44jXL7hb7SZkJJhZRIw6YsEhi/Bs37XEiG+1h/0eQ6AG6v7k5S\";\n  b +=\n    \"BJZDJmNAMhWKyD0xJECn0jYGZMdrjQe/lyq1Il09oeJsw+8CYYe9opF28AyrYZEhBTXw0lg+xY2\";\n  b +=\n    \"BG6kyrhuVyhyi9OUGPQf3OI0Z4vTnC1Oc7Y4rZrf1B73oY4KSkt1V24VJuP8GLlVvE9uZXo5+Eg\";\n  b +=\n    \"nbK8GJ+XTFn55PhdJ4yQQns4GcSZBLxqkf6xN+keyGYgn1FDWhXf3nUaqsWDTiaGx7EsZBeMHGQ\";\n  b +=\n    \"UjNgQGYB1ASS3lIZPkzsQ4iYHbGGcXVbIPiUGuJeHCaf2TVKm81w7E2ztr2EU1ynmtNwkMGGHZb\";\n  b +=\n    \"1oP9l8eI/sIswpoKy8dS8wPEAyVDPUv858UzZ8CBCiBRIFmD51zkVLUxAOmPA32UEoZk3lC2YGM\";\n  b +=\n    \"5y4ZaA5gRP+jV3Gf7PMmNqiRtlL/IbjMDqI55ksg2Lo9eFLn6D5lNEQRLXHrftdb3TSRsOfsRGX\";\n  b +=\n    \"Kphe9yhR4emcgYmNjRP2PBWQ8OUrA6otDsYO9czPIKFQUO0yFvRCvDtBVpO2fEPFGLvJyfeTA63\";\n  b +=\n    \"4CV1bJ6qIIzpIURmmMw8WdxQcynBDiJ4tPIEnEGxqMj6Yx7VVgbUTa+TYM1V5TLOhORfPOoIOaQ\";\n  b +=\n    \"YCUm8R98yWtpmjFYodt78InXdfY0j3cCiItT64yYrkqo9BteW6b55QbaQuYIpMozCIFr7hQZxse\";\n  b +=\n    \"ji+sUmhWErmY/0KPDFjXt6uRS+DDqQ5EnFSnhdmIVSElu/dMLWXGMP/sjZ8+j/WCuX1ojNHBPBq\";\n  b +=\n    \"01Xyv6gXVhuTbJPZ1sSd0hZepWtsc14GUgnTGASN3sUdNGgN7YpdEtRZLHmDACixIKpFkReKgIZ\";\n  b +=\n    \"wWxMcNjhRHv5C4DIkTYg/xGhIAcUetZbY41RcuiSST8aA4w2JEdTUGqxw9EFyscsQoHxljQqugn\";\n  b +=\n    \"QN8QD5BzHlum7tgCBxPPlrmPMJvHCbRk/OpnZ2eRFprDJjpMfSHDC0c/bXKFlmwEmcEHRmUctqw\";\n  b +=\n    \"/h0cqq+wHZeUA83ZTfbUCtlTi0W/ext/RYg/uJudK9v7MWXbKPHkX1eNlghYK8/BrSPOsdJmlPW\";\n  b +=\n    \"jYmDKb4A06HYacPB7TwNeWc/4wK1glCpmi49mH9KyLZAN2yuWaBS+RFzYm2ZJABJR5rwdYFYgpm\";\n  b +=\n    \"ukRSlCv5YoAYdIc9LeYKWlX1rne2ld6ZcuhoVkeha+6S58hYVGMR8a0pFGvJcpnd3YBUjpVGb7q\";\n  b +=\n    \"pB61tyvR2S7QH0dEg0L2RquBF4V5m8wq0PidnKWeYEVYrX0xW68CXrJKPslEPakiL/kVdSSWag4\";\n  b +=\n    \"O268wzGFMcGMlIEJ5q8UTHhfC3lfC3lfC3lfC/leC3tfC3tfC3tfC/teM72vmd7XTO9r5nhJ780\";\n  b +=\n    \"7QuBLhMCvKOs7EM9ntnuBVd6kZUlhJEDOatI5U1+j0etL+PWP4+j1jXH8+kp4faXqfX2F6rxepE\";\n  b +=\n    \"YuPtFM3uGfyeLoQOSPoClsuWsIImwHC6iahgQeAuZmXWoBC3SRK2JnwRFHBWTBPYctZOdxkmg1c\";\n  b +=\n    \"XgRFah8HNgqC2LaRomjgJIKnh/C4Dz7qji8NVccHaP5fgh9RM0PQuxXYxaGSRJlzjb4YpYRaR67\";\n  b +=\n    \"1ZJWeVpIwitrimuIIrfX49eyM1hGLY1jXOJOxETVJzUMC90cxCwx0iAIFlkIKyvS1NED0zpSy1h\";\n  b +=\n    \"HtoIrD9X9zU5mtYoXUpyl2oTf8BolKdI4igdrNbAiB3CNtip/ZJopZNT+KIvxzWlyeG40IvUVdr\";\n  b +=\n    \"aZqbEyx3wjbB4LkVrH4kgwaqSF9D/GFse49bZRwo5E19I7t1EqSElcEzfMgMcYiZ1G2AwLHUZKv\";\n  b +=\n    \"F3eHWuHtVP1ZkePj93Y5calNTy426IVMCOGznd2zAsVyquQYaNd+LRgfSPmO0E6x4m8u3VkSlnD\";\n  b +=\n    \"40b3AO/oSoqPLxJDJRgjHCWx/2EoYlhLpao5LFhru0LZ1TT3ykyB7VWYYQ63oiEFg3wSvQIKqhI\";\n  b +=\n    \"f8b2iSEfgBkqY1coNFBP0zXgV30qPj5zUqL7ujqq/AweArSlnnBrKtWSDX2aereUxNcqyyZkC+V\";\n  b +=\n    \"dEImqKQWMMpnElDYjElTSw93oo3Jq1z6vEWkaakA0JZS9milis2Yc92Yv2xGZP5tIP6JT9gG4vm\";\n  b +=\n    \"u1m3/emk70p2fNw/uIQFx+yN3nyP/7OCYs/7Mm+4iMnezLTHAh8BTGsCWoKbGcfoaQ0j70TzWM1\";\n  b +=\n    \"FKppHdxwVDIEoQbHHKBL5WVIyj5BhoAsIaGcDOIowDnaSThRlE85iKKqvWcteyuhBOg5SFWWqcc\";\n  b +=\n    \"hVQk8mRqXzcY6SL4uG7s9SENkxxGHhJx1nOSQZHQCad5JEgh6oRq9AAwSXjPYmFh5JhsMEukR9B\";\n  b +=\n    \"pfIJ4/ET2exA6ZyPYDGnv8qGTXh1u1CpNCiqJATnUipVW5Qx6XfYIhX6HJHEC1bR3wKUhKNtVwc\";\n  b +=\n    \"NjiHdWZPEkJPrkILc0E6StvNR30rybgFxqVs5YKZ/vWkpO5jKm+0r+SIHPj8tbRDv86Ol7RhTf5\";\n  b +=\n    \"VhFkrh9jaio+VyvcqpFh8Z6Emvh3Abb2RcnknEfBUggPabaKaPPIY3u3SMYtcHiHWYbDREQuLHO\";\n  b +=\n    \"HsUPENRx9hD1FzU1iQjdkcQlGlhT8IHu/rVRddSri8oiJ1uBk4ziI3RnnIotPUhzBiauPxKuIY7\";\n  b +=\n    \"mwAQEf16eok+Di8kSlFvblUY0qPdCGB72NvaPQHXQJrkjCB6gUTGUgY0V77+yYfEcOPC/zXeD22\";\n  b +=\n    \"HH18/QVfsStSFKpbMvV0vmWq5HzFDccgVwtJIArh8IRdZEmvtger9oFMX90i32E0APoc9GPf8R0\";\n  b +=\n    \"72AZ3YMYB/VjkUJIFISyw0TF/MUg6iGmX11HFFF27xPc5+V0m2taoXlrkgEM/6OS7K3eCVr0iOZ\";\n  b +=\n    \"tkWqRdgHls2SJRBqLmwIKt8jWy9+rz2dfZMOePEYeL1QnO3988cYGpFkmxVGMx17GKBZqFUbwgG\";\n  b +=\n    \"/RYFv2Xs+cK7p5O2jlYbukwHCUKdk+7Mn0uJvpApy/Cs9fxV40w812yM3WECXs4qNyMNPZADPvy\";\n  b +=\n    \"brzltisRTfJrHBl7/VmXThN9VZ+iCnnIcGFeCuftUP1dsTp7aKZbqbdN8dmcnq7yZOpxM2EFRYZ\";\n  b +=\n    \"3DLD3uvJtuKWcio87Mn0+G3lVLjIs0PsczPVEbMrxqTWa2EKzVEJSt4GylW42imDztLkDBE5n5e\";\n  b +=\n    \"6tKGPM/vHTHmRjvxD5tHlXlzoWRc2yDALVSeXSzQK/YS0EJhuCIYBkEFivqa0n5WoT7L0GeJyyg\";\n  b +=\n    \"AieueJrotGI4Y+KWhRYAhi1KpViWy6w3fQPzthG0qMGbzCGb652ViOr2dmrvTPTMiUVMa83OGfl\";\n  b +=\n    \"05G36w86J+VTrWeOVk40zcnneY7PVzpn5Gle7jDPx+dqjyz8aB/NpauqnCWby6WrmqlfyZCFitW\";\n  b +=\n    \"Ba+NtNTuDinbG4gcP8MekaE2U9wyZ995TPyscqYdNHD33bz/IhaePfUejyRVsB9DxGqwp35Bh0G\";\n  b +=\n    \"QxduFlOhcJYL3UUloq9iQUpMPp14d5TgPax/vYdzxHgou5Bwm5Bppl+MgCogYEtYIsF0iSlccF4\";\n  b +=\n    \"q6CkUjYMG+6gSvYF1ENT7i6QUs9YG9lgbZLt4Hqtda4OwESlitluCyLsUdxk4Wn+MdlRS0HxcrT\";\n  b +=\n    \"mgtVIOfI3d3iRsnMhfg9GAUJnFALRHDHjDHE14CJAxzfKRm6c5j11UlchaVyVp16rcSA6QWY74X\";\n  b +=\n    \"qUO0S5RG8zjGzhArQgkIGDICD8mqBrNxzCNHAxGyws4j+ib4VtmP5G2rglXRV2BMXXXKr6tO+XX\";\n  b +=\n    \"VKb+uOpGq9DVLfUr/IFE6Eu8fb5XsCpAbAd1u2DmPobUdDr9YB/gETmeY71BcefnwiZNvZ43y8u\";\n  b +=\n    \"ETJ19RufmKZL4aTCbMREAUVAPSOjmCXZIeXSg2hZkJbPk5CktNFQKHV+yGXWpFzlVc4RZB0IHQU\";\n  b +=\n    \"Mw2MeY1ELRhpPit6+QsxSnVJrmZvfsLMYcr+xDxapTHOzmvfTZtu1gHvteqK37EWqqrOq9l/31u\";\n  b +=\n    \"GlhKoDkFGUvgUMDtUuuzhnd9kswYahYlmQrxjFMgDrw6ckykksvgzlC5IofAsAVG5GzOlOVpE93\";\n  b +=\n    \"jGHUqnWOqIbko5t/utUA6gQvbO5vNlnjLnmrhj8glDtSlc7XhxjTQwmx0wnOaK+4wstQAoRdT2F\";\n  b +=\n    \"VaY9YkzTlqIJWqgmNckIgHy5F5+GqKQhgsm1ZxFCQ5ULw8YbArO2dlRPGoTDBuMmlKwyINjchTY\";\n  b +=\n    \"9+Pc2+o0oneGVTvF+V7qvfeOYqHk4ohwU4AK+euU6ZnXVSTggv/PKCbGlq8RyooLEaWV8uC1GTv\";\n  b +=\n    \"PKzsFTtlRbxiqix8SB3MMt8MyCSNx3BvMi42GTZrxD6t4XbDCehYGSif6gCVGiCxkn1AbgI+bVX\";\n  b +=\n    \"i5DwNNpFYeG64TdYLvB0wRApfL/a/bmk8p+SE8iv7nUEx1wDKOAWSNmxtjKAtUIK31eP5sTjmjr\";\n  b +=\n    \"GNcU7KGmMHxjlrkb5InPMtzXbexHk0hWnvxg27Cq0I2MMx7VnTv6ve1B+qW1BYsFNxHl6L80lWy\";\n  b +=\n    \"vTOTnO9/8ZBVdaKMxUKi82w2f/G5/IGz21zlixC5sj1pSe5aZzLE9wSMb3caQNOkzinDXw2iemG\";\n  b +=\n    \"vFHV8wZGCo1URBe6Ajuch0PgatrjXDlPTTk6pPzggROPHgx3lgkLE1zEVA3fqkhUxlLGRCI8L/Q\";\n  b +=\n    \"xzht4hncmIUyQLM9suh9mEydr6h0E60jJizWpD3K+n7kr6JmHIj1fxWQD3claUWYdGAmBREbwV3\";\n  b +=\n    \"FOVe9rRM823SNGpRqsLffZWt2TeC0sEva7N22HYRHsfkUWzk3J4go2mLt0Kmv2/aKsUGxZs0NuO\";\n  b +=\n    \"/7pXnZzLy/EdhM7qpofqThsZFysurkucC+T3cvW7mV9KobWiDnXU8xcTzEp7u1Fntuj8bZtIQdM\";\n  b +=\n    \"nVn48jZQA8V05i2Vu2/YE8Y4l6q8jIu5HCdZwRWkhhLbz1viRq2qiqJ4yvxY9SQe1zyJLZrb2Od\";\n  b +=\n    \"19/oBz/3Fnn7uD0hCPl2NhOmqprw11bk1CmaDat4XoL8rnbdedK72OJmHyou+8tlKZ7soUuXVAi\";\n  b +=\n    \"e/LS8ayGeznWfXyVsLnVtN5UV3eVFJZrrZKf1X6iOt5xyZ8TL5eJrToG9oKImUfE+3U5CB4Heul\";\n  b +=\n    \"jlv1HBJCLaI/47Ev4JnoL8TYHLLuDe0eu5V6W8RvWpu5fSN/Pd5vn8H/12rRYLwdzAl7wlGAiDF\";\n  b +=\n    \"Fb/mXqDQHphe0WoXlhcevf5A0Y4l0x/+uXAKpOb+9O1779z8/I4HpoiicJ3AX5jo8HeTGBUouiQ\";\n  b +=\n    \"eijk094/D+/c/tq8SJO564Y5dP27+cntSRFdU/Bf59me1sRhJwapFNl/QNG9sfkF60/SL01s2S0\";\n  b +=\n    \"5Ly0hOS27WPO2S5s1bR9OHtr4oPb3ZJdFWrZo1a5Z2cfNmLZKbZmcOzUvLm9g0LTs7N71pfp54N\";\n  b +=\n    \"Tc7O5pekJmbk990aEFeNNo0J21c5vC0gmiTvHwxz01lsPg9pipKU0Vx0u01RblS/P1L6s/NgLrT\";\n  b +=\n    \"8vOjeXDfGpaWmR3NaGNFM4ZHm4yIZg4fUWBddpmVH80eJpONrWbKVNG2a0Sbpoi2VRB/SxeQmTH\";\n  b +=\n    \"Bamt1tPvaHbv3HyTzTy83f1kVYus8tSpOvct1KkemexmKcq4nfTOnS9cjxqFJdjQnqQHUkpFfQA\";\n  b +=\n    \"n53ktBRQmIv+li0KIZ1pA+o+HlNm3G5ozPSxud1GCIJYpKs4b0zs2JDrHGpWWPjcLAiqGmL1hdM\";\n  b +=\n    \"5WK4u/PGn1Dmf7Fl75cofbLdF9feoD4V9mTvtr3fLDveYbveabveY7veb7v+QTf8xt8z2f6nt/i\";\n  b +=\n    \"ez7P93yx7/lS3/Plvucrfc/X+p4/4Hv+iO/5477nT/ue7/A9f8WX3uNL7/elP/KlD/nS3/rSP/n\";\n  b +=\n    \"Sv/vShhqbruhLV1Fj23+O73ltX/oCX7qBCkE83XQjkY73pLv58vfw5R8g0jU86SEi3cSTHibSyZ\";\n  b +=\n    \"70LN/z20S6uSe9wFf/Ml/9y331rxLpDp70OpGu60mv97Vvs0i39M4Hka7pST/rK+81kU7xpN/xP\";\n  b +=\n    \"f/A9/wjX31f+tLf+PKX+Pr7m698oPGXe9KaoA91POkKvnRTke7iSTfXYvt7qUhX8qQvE+m2nnQH\";\n  b +=\n    \"kb7Uk+6sxdbfTYttbx8ttn9XiHQL7/zQYsd3kC99jUh38qSv89G/dF96rEhf4klP8bVvlq/+W3z\";\n  b +=\n    \"t+7cWO5+W+MZrhRY7/vdosfNzpS//Gl99z4l0qie9y9e+d33lfyTSjTzpT7m98J8K31/898c1fx\";\n  b +=\n    \"zTVj6dGth3d4Xwvksu6nbDnQ1SV3+Tr3K+MP89hb1IZr0imj82u8CfNcca0jkvj7NSOwz+J5qn6\";\n  b +=\n    \"J72wb0AX8O/IOylVsHY0dlRK3eYlZ/5r6ilVDDFrqlg/+L4nQhfV8L8nTLzR2enTbQyR4n3RkVz\";\n  b +=\n    \"CtJwK86LFozNyxHtFC2K5uXl5lljc6ITRgvOJJqRPfHPszn5BXmZOcNxQx4u2tgD9ssKRE/l2Gb\";\n  b +=\n    \"miEHIzKChaGM1smT9ltgbxDtV4JuKvxFPXsEoDC8YYSlHfM8re8atyl/Fp3n4xKSKxBcuEv/qiX\";\n  b +=\n    \"8yDXtg/VObL6Nzsyfm5I7KTMu2MqLDRUVWQW6uNUIwXE1H5I6KNk0fkZcpmpCdX1BALYMXoA3fi\";\n  b +=\n    \"DrPg31ATBzgy2R6uEZtkOlXfc9f4+cnsw7k/Dc98xROg2eJf2djP0enpWcWTLRyx0XzhmXnjgc+\";\n  b +=\n    \"JGJinj//DcZFxV8xJwYPy8sdNTizIJo3OCeaL2YIzqv1op7rFKKpZ53Z+qITCqI5UEvtOFPpL8p\";\n  b +=\n    \"uxetJjkfvsaOGRvOs3LEF+ZkZuBxH52WOilrDMqPZGU2uxLnquWNFae01WSXKAxpdjcuC8TwH2l\";\n  b +=\n    \"72p3Z42n3iPdiLpoh/HT3pqZxO6Zk6OLV718Hib7PmF7Vu1rX54IG9OrVJ7WY3bn5xy8GpqVcNG\";\n  b +=\n    \"HxFn8G9B/Qc7Lx7p0L7m0xXVmPTi9XYum5XiR7LdEPm/+G/PyBsBtCwbrry62OFA3/ss+Xrb/vM\";\n  b +=\n    \"WZIbeG79oIfqxZ9onnWKpudNxLWSOiIt79Ro6Lk+mlndM1dhP+2Cpw6xqqz0vKhYv1ZeWk5G7ih\";\n  b +=\n    \"rSF+xkIa0sVpUBvlbud9ALjfl2sq0fs4TFSUcr9yUzHFpeVg4TAxe1G2sOeJ94M+eFH+B1svyWj\";\n  b +=\n    \"DfcCbGsaZnLGoBj+pJwzfLiIqzmCA1Yu/IsIZOLIjmWxm5OfULrGhOujjoCdI0PC937Gg5X71D0\";\n  b +=\n    \"iQ9LW94btO86PBMQdwn4tgMzywYMXZok/TcUY2bRdPTWza/5JKMoZdE01s3v6jp0EwssnGzJhc1\";\n  b +=\n    \"uQhzZ0TF22m4eHOrmMpAWEe8rkSJY9MLLBg0a7wo1GommyDmWxVaM+f51gy/0zF31KjMAsjqezP\";\n  b +=\n    \"OpO9KO6bMnTl6hDiNigVOuS+SufOVFiJ/fU9bxg7NzkzvEZ2YGi0o1aYMkTdRIX5Yjq/l2adiVr\";\n  b +=\n    \"3YbEfniYHnvfev2JtGpY1uKsrPg5m6Q7RtCMxPPg+I9ZKWlydYADEZef9scQr7U3fuEvIbbfBPv\";\n  b +=\n    \"jVKdEF0ssDKhOxj8VlSMqyFBkp+VRO/6dSqNEb3iL9y3nYU7+WOUvC+XKPni3+p0TFjxRSM9hLP\";\n  b +=\n    \"u6WNi/bEdqaKYntmiq/byZ22ds7E3rkFqWNHj84VnzGDW9c/bXhnmG6C58D9WJb9D/GPs3QUhEX\";\n  b +=\n    \"m4VspubnZzmvKBZ736rvvDSgY1trJlOTJ0wDy5Ao66Ll34RnZh/LSxg8We5H4lv3zMonE5Is1mD\";\n  b +=\n    \"MSrtKsbLEQxeYj996Ss0zs80rxt6f4ez+f6wyHh7V3rCpWIvOanmiX6XQ2UfZVzEXJdHU1Np2n0\";\n  b +=\n    \"e4vObk/QyZGp2UCp9g4uUmzlk2SY9uzTNQHUpg05nBPYdaOys0Ymz0238rMFxQNqHOeVTBCrISx\";\n  b +=\n    \"LVu0adPLHljOUGTmFOQKbkNU36eaiVT+LObwTkR5G3k48MaesemE5L9/bm43wdF1EqQoM120pjO\";\n  b +=\n    \"sVTGPO+fkjh0+Ave8/P4jonKzEK2WTKA1LBeaHrXSc6PDhmWmZwKtgnkwVGTLyYhOQEJOSxBW+8\";\n  b +=\n    \"ei3bBrp2YOz0kTPL6gfFi6eF/QH1yuGbIVGVSCknyOiTNXNEhsBNAiscxjX1cyRJ5a7qooQ9gIR\";\n  b +=\n    \"VltSWqYhxt3fpO0/MF50WFJDUjC92fmCWyug9Nz86JiplzcpBnmHyoWzEigeOfQbrKKJTwyvZcp\";\n  b +=\n    \"tEy/5UsX80r/8+0akSb+L1rWvElzekMwhjSHrz3XVAaJv/O5rvvX4Sx64tix1If+OHb/efV+2vj\";\n  b +=\n    \"TijeSh289a8YPhT3GZ7y9vkfHR1fX6rH0symXfFlVrXkKc/5/6psMrB77TWR6cxkc75ke893VY8\";\n  b +=\n    \"f8/+sYLouPHUOZ/jvGsFqN0x7DP8U1Clos2nNRk1aerWD8iDTxX3vlftGmfjAWKnGNMt1bxYinT\";\n  b +=\n    \"nqALz2I84vTUf/BKXanwakd7Z72FZjs22Nw99TB3Xt36d67e/9BeOvKzld07zJocBe7e09M2127\";\n  b +=\n    \"XjG4/6C+nQf36p7ay+7fsRu92ad77/6De/fpL94e3PWKPgP6+m736T2444ArruzsVNu5d8c+nbr\";\n  b +=\n    \"37oo3Ugd07Ng5NfUUxtXZ0Zt4OGGQ4IEUuJnnXnMSWeXk5ALvmT42Lz9zXFRw1mnpY8ZmCpI+aq\";\n  b +=\n    \"xggOGdWnzyOU2OJb8gg4Q9E/Objk/LH9W0SZOmY3PyJW/WFOsR3+/aWsSRVlfK0zzlWO0us5L/f\";\n  b +=\n    \"Dty0puOGp2P4qdo2iiYyQdF3SA1vJUlF2Voo6Jia8xokpk/OEeMdZJg6+Q708p9Z3RBnpUgWuzm\";\n  b +=\n    \"vV1xT8Py3nK+J9Pryy2vIVIXwQOPjYp1IYZwVDRvcFpGRibkEmQmvyCalp3fZHi0IKkBDpVT5o9\";\n  b +=\n    \"MC2TaUqkOmf4Xz32Zvt6Xns3p0m0S84aqcvLO8b27kusSXFM0LyctmySJbQQPIdJiUo/NEV9BEJ\";\n  b +=\n    \"ih2cC+ZETle5tZMwCHBHnvOTV2rJ7n9BknJqLMI3WILvwWIAnrRaBd4fUDEo6LPRw9SPgzMvPTx\";\n  b +=\n    \"BcQZ/rM/NycztBJlAjJPK0VkpzLdBuWSsk0aAEu86zPdmWOd1JDwZ9lN2iCa92djmduUcDPYJpj\";\n  b +=\n    \"efm/nGcqV4FWoNw5mdQwRxyTPe3JF18Cloci3x3M7/4V32hZ3dhv1J75NRjDDp796GRERLbnlJ5\";\n  b +=\n    \"yRuidQ2eAOUaJRk+L5i2cVxK4PnlvMEs5ZHoIp/uPyMQTSpo1Mid3fI41dOxwOFADt38FHLDzC8\";\n  b +=\n    \"QmnZaXYXEDmlip4nAwoqBgdH6bpp5Rxf40zk7LGY5XTTPz88dG85tedMlFLVvsFXVmeOr+TSlvv\";\n  b +=\n    \"RMNlvniVKIrIMXJyRffEgQZl7WzoqNGF0wEbXWCic9l/hYif9JxaFtpCua+e7lT18nREfne1Sqt\";\n  b +=\n    \"3aFpGVYOS2SHWSJjTk40O9/Kjg4rsGonmigFk+8UqHSmk+kb1BPTeJn3XqZJMr2dNawy/fpJ0FK\";\n  b +=\n    \"Z981y8zbMzc4Aw4hka9IkJ9G4maeej7nNQD/lvRJf277zpb/n9Kmsm44emtXpvyDZ2H0+STYKz4\";\n  b +=\n    \"+VbJzsPDmDpDMXFnmLeiZaibTXaY3LdEudNI0yPcb3fLovXWSQpEimF/rStxpUXmo0JwN3m1NgE\";\n  b +=\n    \"v/+sYErotl9/0E0ewxr5GR6LO8TMj3N93wmS+pkGjQRDctcG8PHCnLYZOhYQU8y/xUFSkLLJCkj\";\n  b +=\n    \"mpaRnZnj2aesCy6wEsbnjowOHjt6cNowUB6NTxP8VM7wBrKeejyfZLo30zCnndwOmS5SSRYk04s\";\n  b +=\n    \"5v+K5t9pX5poT9IX244wo/hWcnocNdcpYq5bHN1MZgtVPj4q092X57jpfe55W2SqroABIOaov0r\";\n  b +=\n    \"LTx2aDBgN2nrzoqDQ48+aR0DvNysgcJ9geJK3/iublesp6RiUtg0xvVV3ty1+pNe/soUtgMZAv1\";\n  b +=\n    \"on4rlSqKDN/hDj4FIxIK6gv9tZs0DlMtED8DhlqJ5m4ts7c/OcKxRLom0TaQuCNzi2Hp8LNMCOt\";\n  b +=\n    \"II22wpgPLt8fxHv0ya5l+V6WQhYOMj2MeVOZfobbJdPrmVcZO3p4XhqOYNpw8e2VaxuQdl3me9n\";\n  b +=\n    \"33lGWi8r0ET6DynQNnmOa594lvv3ntGQxgiX9C/njfC9/XKMh8bjTyuWXyueP5bv3K65mT5z5G6\";\n  b +=\n    \"d279q4R+dBXTv3bpxq9+zfmOx+I7uNEwmXRy37/od5Xyx58fxrF8x6+ZvsC2+7pH/ev6vtCVQ9N\";\n  b +=\n    \"mj5O+90C50bl/r7vFmPXPvjsXFLhh+tPmHb3ZdWe2Fxn3O6fr77h1ezHijpcPjdhFdyXvtm7G+R\";\n  b +=\n    \"u+zx6lljEj+Pe3Ph+ifn/h4/sWZ64pzX/hG66uzBg95f1K9D3wYD1/crHqRsaD+nduWse8J9j7b\";\n  b +=\n    \"bEvn9GHzKCuM0JW5HRDn81ZMDX0i9qqjb4M5XXTE6deBr40d9feU9t9cMXbvw4NRfn73up3NOtT\";\n  b +=\n    \"1tZsf/0DD7imOjtUtbH1x204IBu9cuvzX/7Zsabut07zU/vHRW9dQe/x5X61jb5E7jv/jmjU6VT\";\n  b +=\n    \"7U9ZsVF2j23ff9jzX9vmnXBbz8+MvXThu02L1xz9xcPtK1555JFRSNbpsenPzY89+0tfTsumH9j\";\n  b +=\n    \"IPjT+XeNLV5737NDXt1y53Mr1gUnzPw4fvJDlw5/xJ7xyqM1a3Wdcc73lb95dPsP3wzJr9BwQdX\";\n  b +=\n    \"Le3YfcqRifs+rl7W8ru6vkwZdnV5xXfaMzz4f3L1Szhebv33qnn98WzJ27Z7Qp/unTp77+3Tlnx\";\n  b +=\n    \"szPlxwtHjDe2nVLqxYf138iq8OXpq1fsPMNvde9mLva7tP/Oaltiv7Dqz++fe1Pki/e/uFpzz+Y\";\n  b +=\n    \"mLtFxOrRP2rO5523aPLQz/eMuq+9DqpHwaaPvfiglU9W/S6fMrgF8fPuGPxrDUtZl17RYc/unbc\";\n  b +=\n    \"HDn25DXVbqjR+9el1ii9Xdz5d7WfeXifGiys+MqTLS+YfqAwt2vDlt82/uqLjyovj/YxMla/dPe\";\n  b +=\n    \"b3fq8WfnUOw4m95GMU5Wy/37s6LHTqOtjUdc2rUv1FrVb1P3w8HfG6xVWfTau4puPLu6Z3fXTW4\";\n  b +=\n    \"un37lw7eyvhjdeXGPzjHYTl6775KUFn95WVLWo6c0p8zu1GrPrt+LN9727+Ytrtl95yXdVvxu0c\";\n  b +=\n    \"lr7BW9eV/v+onWhfeo10896Zkazes/eEDeg4J/P5P3x0AdTVwffu6Pguzu2bcu84+DMrs98+/yd\";\n  b +=\n    \"26q8cndcvdxGXzReV1hw+XtrN167f/Yv467o165o1PPN1uysr298YcqgrT9EDjzfdf7qN/ulvxQ\";\n  b +=\n    \"c3qBBtRkVH6vfOqFWk6OjGvU6u1Lr1P75FaNPVcwa1+TF7TfOaJS34O5DW+/pMazmmtG39Nh+b7\";\n  b +=\n    \"/sF2ocWvB6veCSt2ZcXPnw6BVZ5rnbVtYIZ7c6r+f4bvU3b9nY4pG42pdcvm5f7z4vLbvmh9wmI\";\n  b +=\n    \"/4z7baC3PT7JlSbsLMwrL0w59djz8z7Krvvyp/v/eWZ7yeMeb5b846N+1zZ+YrU7ld3btwpFejg\";\n  b +=\n    \"7oNAB6v/cAxUaPXXVVRaHG2uvJI6ZWrFkf/64raub9d78rNnJu95qOn9E7Zemv/i3MkfTL+sX+e\";\n  b +=\n    \"3KowpGTPz4Iv6q2/c92rdLon3/3NxrRl7HkwZPfCul59Un6n86Nw3+u6ennPDL7o9K71/1CqJ77\";\n  b +=\n    \"fux6WV10WbPntu4XmNe3aZ+XGzpx+b/+m1j0/q/f3m+bU/qn9x/NGR+3NaJc2oE/r02QH9z7laq\";\n  b +=\n    \"Rj9bsCSm9t+sWvB649Ei+wdP7Sr8s2eB1J2LLjshyb/bnvPoj5vv9v6YOI5L07of8GW9cZ7x0CZ\";\n  b +=\n    \"nT27jjIv+VZldJVnkwZ+U73e8PEdqr/X8Yvz19+ZcM7Zy2q1H9D30KMVn2k6Zk6o7uCEPS+N2dx\";\n  b +=\n    \"xe+PRtb8dsumViHl7nz6zGxdc2Pre1s3bNXp39m2vtb+7fZWDx+5ZUPTgPfnKgbsT/xiTueS33M\";\n  b +=\n    \"YF1zzSbu3SHc8t+eDsIV3njPk04Z5n67ebNXvfFVcf3Jz30sjWN9tpHaYFa5+tPPjDo/G95nz8x\";\n  b +=\n    \"8LbE36t8UCNKV2+m5HU3njk2Pctvnzv/P5K8bE3Bl7z+uFnrIrWM2dXuOXpd69tPeOmm9YNe+eF\";\n  b +=\n    \"tgcntm1z/quHF350+zkbzh/W67xvW828flqlN/7T+OGqGwpnLXnu+gqhHsMi3doMTLnv+RGfXlC\";\n  b +=\n    \"cOeboqs37ejf79p5rPi/R+hXP73/NRKXhDaOX5HxYb8CQt887pzBk1/95dFJC7+4JySufbvrpHf\";\n  b +=\n    \"df1vOTRROv+vGCIU9/2/DQH3caN13RN2nC+/ujX9VUv2y2d2Hlzr1Wv9Vj/H/mzXhoq31z7f3/y\";\n  b +=\n    \"jj8j0dSb6pZ5dqpB2sl1Otp3vavL2vsuWT+uT9dmDp3Q+XvKzx2QcvDHy98f9TTb79y99JG3e57\";\n  b +=\n    \"+vD0+PTOzau9Wzz551cWVWyyvNuVlbs1TtrY4KaWm17eejj+98YdUl8see78L/q8NjDzWMd/pX9\";\n  b +=\n    \"4X+PLKl3SqMrbv3xUdO2Hu29/OO++zKJ9x/449I+mLxwbf9aqNcEq3UsOT7zx9+SpaxYdmWFm3P\";\n  b +=\n    \"JQ/+T9Z0UrzQ5Ep9z38XfKwSHfF6x4Kml3wk8Thz4Wjmx8c8KTnfM+G5sRX3fpk1cWbrr0kc9+2\";\n  b +=\n    \"jp7wsszq9z7xIxzPv7PHwO+fW/ZqsD6+z5c+v6SzyqExvy49apnP630sFlz5AObKlW89dVHHhn+\";\n  b +=\n    \"1JUf93n4zt5XXbn35on2730Hz+9ojE2/5YOfe8yp8EKDd26YnLbxs7H5qSl7W+X8cVe3f529/4M\";\n  b +=\n    \"H63w1aVz7Da9/e3DXR1WmDNvX7/La0+ps7fFhn8D1426N9m34bt6bj1x1z6/zt97c9f6MVtPfyv\";\n  b +=\n    \"ziqwpmw2qj7S5Nn0l+d53a56F/jumQOyPrgfjOv2z8ffyKoU+sOHv/t1UK1q7q9Nxb7eZc2Wtbu\";\n  b +=\n    \"7NvmXf9s+03nTtvUIMX20SWDa66YWH2uqj6zrbgfZcurX9+VvXoooov7VpwrGRAq4cub3DpwgdG\";\n  b +=\n    \"9629f1TVztbXPRckd/7mte9u/Oat6ReFj369vNOq7TOKSi4av+eV/hdenrKt9azfl++v/vuvjzS\";\n  b +=\n    \"vv/q3FWeN6PFpyz4tj318fmBY220NqtglE6ZVfaX7J78ZzZveljhrb99+Hywt/MeeFz/cfs6yty\";\n  b +=\n    \"5c2/Hg9faWThMa1Y7rFDpc2E876/rAy1kPRKcMrGt16Nf8207Vuu8ffdbni3/5LSWrY96Q4P5XH\";\n  b +=\n    \"h4ZX6XPvHDBOcU/fZPe9omzrRrVXk2cOf+3Te+/1C4lo+flF/z2c/0G538V2X5ZmyM/9folefYP\";\n  b +=\n    \"U9+ut/ebB756atGbjTu8Eryt/cP9qo6ru/eRGld1jNZb2/yJRs/PPtTycMbB56/6+e61oz+8see\";\n  b +=\n    \"ga26996LM4LBNrfKm5Mb9vHPchIJw28ySqbt+icx4MbHetr5P7B8zb+75D15f+62hW246f9Kb+/\";\n  b +=\n    \"d9PHJL4t3V1s3KnF/993PPXtbx2Ce1Vn84ZmybetElN77649AGP/38Qu2Wi35Yuu755ofrb/8o/\";\n  b +=\n    \"j/bn2rxVLPnnmxkxoW2rr/+xWrjlhQvmP9EXvqRtGfbX1zt6OI51zTtPqthdvDCl6rOytx6zW3V\";\n  b +=\n    \"zz104HDJ2++tOmt43vSPf5hy5YXDVw984qq7etXJz3/a+PI27bUP92RHKt7b7JWFF2ROWxV//Q2\";\n  b +=\n    \"m3nBvp1BypfbdU+4bPGD7kglHCroJ6vzHzUNuv+2WISX/3Nn9wkDz1geqrXzzhsWrLkgfPaCzvf\";\n  b +=\n    \"2dDbdWbPPTtQ0XpLxz9g3nXZDzyUWTL741fGXhpHsCu0r6Pvl5nacV5YO6c5qmvrB7eqDB1lt+i\";\n  b +=\n    \"Px89lNPP7h18e9XXRuq3v+6VYPuTRoVafnTptemX5I6avIvPy3/6MGfL6zRt/NtXcTsveXOg68+\";\n  b +=\n    \"Gmnf7+ZjLwyNDPr9tZfyPunZo5my5vFFrzX/duTgy8YsXlH44aj5CUUbe772Zcats2tF2ybM1N/\";\n  b +=\n    \"fUqtqs4rN7pt2U7X9PxZffvcXb5zf/8VlG35ZfbBd0uLinHWh+bWbaHWv2bWw+uxvrv7wd7XvO6\";\n  b +=\n    \"vf3ph3X7RGm67Tb2x87cdP3zDr5c+/Orp9401Lx2XveTjw2105h2r9+6wn637w4bYGtb4K1Xt1x\";\n  b +=\n    \"895iw8snN934rh5C3q33NzvwRGTu2TOqNLix0sWrblhZUavg9Omzv/18MSrMz+798I3K/YfXKl3\";\n  b +=\n    \"YYNq8y96eGS/e/u13z0sJ7XDlZMHXjatxeq1974x89dWA775bsObldcuzL8uq/myZdVqLjir7cZ\";\n  b +=\n    \"nLuxS/fL6FX/9cel733zV8tDTcwcs7fJAn5rfHbkrY+h7bS+MfqTc+PL++duHPj00/oJG39300u\";\n  b +=\n    \"MvBvqsf2JtlXMXqY1+nTji6ssysu78qMvs968ZVm3rT+0fTK1U56lPh9708LMfvXBW9XY3R+Ztv\";\n  b +=\n    \"W7zDnVBza/Hv/fH4V41vzTfDdXtNajmjn++/lul+amXX/R918WtV44ZeG7RcluzjnYOKQ+eu+nH\";\n  b +=\n    \"3avOu7PdlXOvCLYZV73duEnfPnXXOSVzO6tnP/Xvuil/dJn+Rr1Plk27vnGlc7q81XrzyAoL20y\";\n  b +=\n    \"rs7jGBQ1zV/bpN+jLR4bd1rTCz0arz9J//PWd73tmn90jr/vW3bt2Dco0uqR2yOlxa8GXt72pNV\";\n  b +=\n    \"oW+mL+oDtGLYp2D9r/+eipN75rNnxFrfb3Dv/49iOhwZUTalRoUN28vW/RDdtWNZzV8MqMs85Nf\";\n  b +=\n    \"eU/Wt8fj/3rkwdDrUf8X3PfAdZE1rY9LZXQpEmTqKiAlAQCCYgKigougopYEQgkYAQSTKFYg2Av\";\n  b +=\n    \"2HtB7Ih17Ypd7F3XhmvDtYtddyn5z5mZKMv6vvvm/b79rj9cFzP3mXOeU+fU57nn0JO8Wbp+G85\";\n  b +=\n    \"PvWvns+/EPhvXXVcmZVm5tH/SY3lg5svkXqlWU5Nqmo8dsnxyyYg/7rW2qTtZNaKTWpFgvgcZ8L\";\n  b +=\n    \"Hvu9k51S0WTePW7guMjw0dLrW+fXe+Bk9S3ZEnPD4ZnfR+YNvK1Q33e3fKYfVvvbYqYHinhoxRX\";\n  b +=\n    \"2o2Wy5jZH/M2v28fZf0a6sHHS11F3vxrow8NNS61+QnvvKeqbs/Ot3au2NaAxG+rKF/6fpj6MTV\";\n  b +=\n    \"ug41X0e978w6k6MNmjYlKcZveoZvpDuTbd3wy4EHp6dGCHPGHd02qOJwx2k3RuPWlW/SS31nnxI\";\n  b +=\n    \"iey4kuagOu26vn7j/caz5tTWlzw8V990SumTzxuFLfzu/vXaeT+qBuV2JZ6d2van5rKyMP6C+N+\";\n  b +=\n    \"WY+yLXRY7vrq7ZPuK8I6e27Gislce6LrfR+1EW19X+uZyQTM7Hms1JL60PLnnrMWAyd22Vf7RGY\";\n  b +=\n    \"ade7Vb7M1P+YkTKnhMz1RcXx69Pu/56d3SS7HoBb0j1tCEW7xaHC/KfbZ9fLbtjqA5Y2tAp8Fyl\";\n  b +=\n    \"u6zMvXbFCrm2NXdYwIy3TG10JywvwHztNe2rOVt2jl0oKl9ZtjP8+KScWSum4L8NeVmRsP787cP\";\n  b +=\n    \"43D8yNgZ6RvffVf9oRMDxDxa+5Z+jrrs9HysYGbgvoeLGE71NhuPa6SG5rS/HOKhX1V/evCVnvW\";\n  b +=\n    \"XivkzD6Fe8NTdamTtOqJ8w50G7L6OmOAg2xC+v2jIvj1FxK0r39dasjlLHIgduFIgq8XndihOd3\";\n  b +=\n    \"28xpBPOSZLRw1fkHMVdjrwwn3swf9fj160Hn5L268ZrnbBiPF95Ic4rt4XlzPGGUc2i1tcMt+Ye\";\n  b +=\n    \"jWh32MrFqp9weAhjxrsD2Oe2b1d8eFUS16dqQdRypO4au+IGB0P2hd7k9ahOWtH8auKAVZn9Ksb\";\n  b +=\n    \"GO7NdFw0eU93y7PXdbXbvGHCeP6EVsX/Vtg/jrI4VTtEs+qVgef6Ju/dsAqMKg31XCjktE7ZVeM\";\n  b +=\n    \"9fgc+VfSndmLs/Pl3Grrz/mKj31eaN8S2cX2uRuPV8zLHfLR6sir6dUR75+uvm9XiLwiThPc9Eq\";\n  b +=\n    \"Vdg3BKpQ4s5iTFHRB491PLA683a9Bqqm50sWsc1db5tqn8wsa8DE3vB8W46ME83n3Jj7QT/uFYf\";\n  b +=\n    \"vLzHLhWksSf3dreaPHa6s3npsFl3H8W+rbYNmSCz65z1xBYJ31YPw3Xpa4MjSMiTCdjXXy15bLT\";\n  b +=\n    \"ic9jjuysmP0WZwrZ9xH3MNkWcchiw6Bcsvd+L/Oc7+c2Q8FkNUNORUAx8VWcwnLieXz/k6psPq1\";\n  b +=\n    \"3TDSqbkwEbxlXw+l0IsG07yHtYUfsky26RAXPmH0aGPmAlxP8O1osvJ/1hKL7zxKCSXw251m2u9\";\n  b +=\n    \"rLlxxw5M/W3Prev6Z+Hd3Ty/NWcaBgTnWbH3lIGxBs+da039Hj93rDHX7H8eWlUyDPWyAP+hcIP\";\n  b +=\n    \"G14pjnwsaTHDtoaJGTq1/ZlLvFz0ySOhGJXb32711oHAfjulKPSw0fj/orLrsXPma58Ut5Jj6jd\";\n  b +=\n    \"eXk+qDQVFtc0WsVdK97aY8FLbhug/p1n+89K7M1c95WycX53+ZW+3gg6lPvezDlsIPcRDL9kf/R\";\n  b +=\n    \"iUEnHI+gF7wss+e8eWaecuSv5Q38/Ft9L+aaXfuNPrG1a41W5xRxMmRjxLPfR1x+APYwfnjtvJ5\";\n  b +=\n    \"n6ZXljR3qba0Tu3sFxxE+3me0z7/JeOGwwztuU+PT7z4Oqhl3yJY4FHDvdmj3vuGcwytSKubrsF\";\n  b +=\n    \"CnTKxg9/7Flz72mPDhcb7redmt7bMNJxw5J0j+gdAy+zBxxqMXVWmnv7cej+I5Y7ln8FLetFqzV\";\n  b +=\n    \"cyYj7/qeVynW7OobNc1bu18xbHxd6WCfieocr1l7reCW2Spt4N6GZqf5BQxx/FKwwMVMX+VeWJK\";\n  b +=\n    \"wdOtCvU2HB0YkdW87r4i9OmXY6wkPSvJOVY73X5jn73o4uj43Jdz2dOH5M3ZwbZncsVw8uXX9p1\";\n  b +=\n    \"Oixc7yO/upQ9e5QTMatGWy/9de1dybxz15xPXhxQdqgUp+rk+oPvB7b3uKf9p+S+MDl1IjPPToF\";\n  b +=\n    \"M5uxBtxjlo6o/+B1QT865XLmihd4AfFZfPl0uX23k+Ev+Jz4Yr2Nqf5BwU4ABXsEvTwiOj4+/kn\";\n  b +=\n    \"S6rLhre8ZOk9q/rtyh2P3jOHdoiaxiyYfa3ly03Rs/YUgj4rB9eutAk5xj48YBPzzuFvKVrhZIb\";\n  b +=\n    \"y7C/PzXef51W53UYbXdGEtuPaxP+PYozBkT4fggifSvOW2zyTrysrK3m/tE79r9hvDyq7TR4tv8\";\n  b +=\n    \"1YH7ipd05XoEvFw1qP47gXX0pznJW5uiJu8OJXxus2pES6nysJmPi4aGR/PcTy+KbyYy3C4tV01\";\n  b +=\n    \"7vT1CbJbgy5P+Jq/U6m4iun9tU4zHZHwt5OOwi2zhZtswKsd4tbJsNpVWjfkPXuHo+TcAPHZ5q+\";\n  b +=\n    \"mq4LayTpN2TY/+fSohXjfjcGdty//TPjGQ/W4nAg+Etl1CbK3atA0Zc+Lz8eqKodsPLJHgG/f06\";\n  b +=\n    \"9Fbd32MOnDnWbjOIcK8DHxt4D8ybr7BjOlzPAh/OzwLuVXn23/8nX3Xf8LTtqf3Qb6RO77dOf5X\";\n  b +=\n    \"qF2/4O4cfaHcusqij7fWvDoclqHj9WCXfV9F4gNk3s2f0g8++NV63MDNr5cvXnF46uWx2+cFCYy\";\n  b +=\n    \"TrNN9Q/6zKlkDTJ3zgZVzz1cL8mZdjU+q9ebwfykmb+PX36juZPrqNKRpRNnzr26Y8dxbJyeY9b\";\n  b +=\n    \"FZgxP6xIHavD3mxvK7kR+MVxq2f3Q0syJV5YM7nO1JdayNDvyndfqI4qfzXtu7W/wPHF+OyaeWQ\";\n  b +=\n    \"5qkPGof3z+MBZSVXdPbDfVCV3AU4alvkvdyHT5rWDD+OiP5ujLYr1l226xDgkf0v1WVWSvabOzX\";\n  b +=\n    \"cAjScORGelvK99fvnbGd9HgIXPPxLvI0rVvHx353K7frDIPZeJoayRcPx1kJPn+4Jw/DIYUVFdb\";\n  b +=\n    \"iES+GFVsHfR8UKtQ5/43dKc3Hl350Do5Jwip6zTibB/rO+EdSypxU/2DApsB4inBTmId6g2GbUP\";\n  b +=\n    \"3178c2PqTzU0n+14bpKx1iT1PrItZrfM+sNT6aMtBmkru59ryCpvbjy1OGqBi0PY0AfJK9hSxPc\";\n  b +=\n    \"e8sla1K7HT+o2chhKbM0VTbMZtzqvlPrTuWzy7k8XyLozfyk6AltIr7pIhPdrBsDDOtY3ZpJea9\";\n  b +=\n    \"4ftOJP6jhj//s5xnxVn9y8LCY4c8OaPu9pDtvLrjj/3nc9m2RRyd81JUlQWt3K4cj702cI3nlU7\";\n  b +=\n    \"zm4ZsrrXxbKhL+Y+dnmZVrvNstV7dvdfnkRvHv55x6vRUXUZJV0Gzru2uM31+ZGXLj/bELZ/mfP\";\n  b +=\n    \"RKb+WPDlnI/HdOq5o8p0aC+uQ/TPynYNqX3kPnjh77z3k6Mw77Vu/Kz5i0bLH2XeVoUdvEAmjDv\";\n  b +=\n    \"fwatVjUJLLk6J3VigS/qAYVsg/3YeCV3cWjMfU3cBnsqkgP+8EXoMvjt10b++HL7l2lSFnN9gvx\";\n  b +=\n    \"eq1X/2GH1O6ZCen7QkKSpY6u29a48wAs5I5IJ5ZJg8ipk5/TM2IqbORgfGg3Rq+XKo3rJz6yZD0\";\n  b +=\n    \"ib990i7W/InBtfM9lrVL2N/6QNpQpx0d7w28KjKc61PMvozRlmn1e+oMjMhR67nbutpYbdOkzfo\";\n  b +=\n    \"jJG5dzN2nSPiRhaBgCi3/J4pgWoUy3ycDuEozfPx9BbRCMqUPduQnSvFZglKmqEbcC6UUJf56OP\";\n  b +=\n    \"eNVYQf2vE734gxXF9a+caIoWIPvxGGiiYujfARlFJQMOLTtAmg0chjvJ66TqWuevIPXKfpvymek\";\n  b +=\n    \"XcFtDuH9jeVDj+ZvnKo59DYhbxOo/E0WtlnCh0Op68YfaWj0XPpGzq83hgf7UFvTAebdqdN3XKk\";\n  b +=\n    \"aoUUmrVl97IiFTMok7lvzsjkXpRJl1Keq83P/v6kpBd1UKxTKr5J2Qvc4CpBrtRlnQf38JA+S5q\";\n  b +=\n    \"N3AL3OHlYT5l6VQPMbiSTSguCfKTTQB0QUyfBvBhKJh0PqQTAj6HM+qEVI2XghiAi2o2yPgcjMs\";\n  b +=\n    \"AseOg8TKqWpkIjoOTkgTGUyXhqDGWWlpapkkKtEH62SqHU8pO1MZRJvfE5PISHSklQaW8ecOM0e\";\n  b +=\n    \"paiUmXKoXYCuN/W5Nn/slFUSqZG6J8UIBH6kepTefxUlUotUyih2oZHqsCziYPQ83wMZR79nEEp\";\n  b +=\n    \"iRvxiyaYwaTMfI2YSWP4M3W9Z5RhSytt/tP0CdGNFEF6/Z+WOYKE9abNz2nlLyPujVMKqvD3T5/\";\n  b +=\n    \"Lm1o/xjTmYlT9mDqQ/YPGSybVe0yTeqd6M0Txj9U/pf+HhPWlaB4G06aeRpxEG2IYcfp/aez1Xy\";\n  b +=\n    \"hOCaAhR0AcZVIeBq7h59eBsZjDp4sIA7Mw6DAXt6L5RUw9rjY1E6bORkxthGnf7O7TFJmZ/Nxho\";\n  b +=\n    \"A/mp+jS0uRqxKMfZaXY5n9Bw0uh8oOkKaQ9VO9+FIdJO1rz1ojjUIpv5XuactUK0AE3TtTBfpQG\";\n  b +=\n    \"MtSMg7VV3Y+qrLfgGl63sUllzSoDDs8wY2X9nebP32kOmVq4plbeP13ZpitymKrEcWvz/83aYdF\";\n  b +=\n    \"WGI+p6TM1XSA/22A8pqbP9HJ7tv3of7Wze3oHDGd6vjb8DMOZ2t6Q8Mk7YTjT6+sZGc70NS/8XL\";\n  b +=\n    \"WZwPTy3LAbri3R//8W8c/2kAn7p1fxptfQhn1kwjIru7znHm8rzm7YfaXsqNfoUtuf9teywko8b\";\n  b +=\n    \"UVp/qP71GS0uhoj3z8fufdl4vlX2Y+xztUHzT+F3hpfjC6/H9epoLTgoTx07dm3lfMbes/oe6mN\";\n  b +=\n    \"LmNq/sferyf0rHjzNbO+xNXB9Cb3bD+ZMFOrxtSq/y/eoYNkwkytGlOr3vRO4VkFSNgSO1OrxtS\";\n  b +=\n    \"q/5/MD9PSwNSwCUVFZJIVEktTrUCF6L6NjP7ijAa6/6CR9sEkykj7NE0VF6PSRim7Q+4ZhFS6Nq\";\n  b +=\n    \"YFGqXpNBRtnFYWEqIdBpXiQ0JSdWq1XAktshQaPrQWzlZpNAqoVk4aTJD2AJTfdhp+pioVcpRJt\";\n  b +=\n    \"VL+MKmGnyKXK/kyOciHKl8uazp5okIZ582lyRRxCKT8a/2n6VK6XClXwyUrWNqP0Blj40dFhPBT\";\n  b +=\n    \"FFpNtjRVzpfnDZPqIO0XchnIgYaXRnlWBDUdM2J7gja2oJX+U1RqtSoXBCStaDIUShmlnG+k1IN\";\n  b +=\n    \"7OVlyjUaaLifdjWsKWKY/Ad+xGqheT4UxliWc+w9pRPaRADX+/gPjmBIpRSjyCqXWBsa9I1JJ/r\";\n  b +=\n    \"thqQlT/x+YYSeBZpSlUtLFn6RQpqlg7PYpViRdjT1t7No4P0Ob4MQf5CdbqlSkZlCEftkp1HS2O\";\n  b +=\n    \"0aRaRhxD4yiaGpcNkm0bGO5JtNkLkY6uRS41mniBxorymk3o9FmmomGa+mN5A2D7f+7UTppStE4\";\n  b +=\n    \"v5Cm10hL1NgdGlNkwLIgw0O6lHSVGvJmxYK3Qh2r08am9ZJnqdT58d+IE7up0qKgiYZalw1QuDp\";\n  b +=\n    \"dB+mfosG73k+lilZ94x3qDlq/UpoFWWF6SZX50QplhqarGrx6ck2EPEeRCi9SGSSB6JYnT9Vpoa\";\n  b +=\n    \"EHDNNFp8kH2Vfp1KnkPXSDkqHVHLwHDUArz+qjU2ml3fJS5SCzMsiVJJdnQAlxWpUaNPTuuszMA\";\n  b +=\n    \"XCRMliuVvVTZIEM6bR0wiLAy03fRimzddo4rTRTHiPX5oKXB0YQCfqjzEZRRatU2X1BUmOVmfnf\";\n  b +=\n    \"XSMUalAcKorgBpqLRmnCG7t9BwNUukxZF5jRcOqN7ZYHCkvTRa3KkCt7K7KNcUeocpXhMpkaBs4\";\n  b +=\n    \"BfQfMDsRRyniNHDh2VSmVZA3QN+DNCU8hq5sWEP/dYiZSpdE2gt9DgJKVaxvDNNBlynrL1VkK0C\";\n  b +=\n    \"mqlBFypYIs0O4qnVLWV56aQ76wqmzYgcGtSo0uFVSdJg00T8j8B/vTb6yboOWqoGUv6GezM6XaN\";\n  b +=\n    \"JU6C+4Zyq3Ipep/SqgA5cL3+QEI50cbl5B7jiqlLEeq5kMDNzLeb0EQhJ9G0af9p3HQsshOKwKE\";\n  b +=\n    \"9W9E3PB3nBKT0yhCCVMJIraBcIJG8fx9z5YtVWfI1X7k8KEge9i3QEYAbdDUtqnhMvQOzam1ckS\";\n  b +=\n    \"UbkXGY/TvR8f73QtpQZxO2ll9p0RFZCCcW6Nw3oiR/KBRPFR4hRIEhfKWpVN9ozFMGm04ZcRamp\";\n  b +=\n    \"Cocb+T1Sj/PzKc/RHlJm8YRbn5lo6PSe/vSSF7VJZUS+5va9WwdfwdD+xfo07LgrZtSAaIozlNO\";\n  b +=\n    \"+xC05k3plxVNsoDNBLMpg1Bf0QzL88EkwhoD22MDRLgkJEpdVl+MkV+ErkrT7bB28OocTOabhtG\";\n  b +=\n    \"HENjlCYHg+PGMxyMLWBwLZmIImFdLBH9gkUI8vATAzm7BLIzk7SbcK50mQXPDxAkzBxH9EVg1PI\";\n  b +=\n    \"Rosixl2bIvEBQnEdV7ye2JvNWUFM+YUh4ls8bMKmffg1MUW1Qt+GHZa8lytcL19/5+Hvn53gsmF\";\n  b +=\n    \"Zvg4/aop3m+3IW38frJXaWftXa1q8+XbrGriJO3Nl24aDjuIB1eFu35zEYEv4V+l7DRUf7Lhoy6\";\n  b +=\n    \"doh9crbtyb52TWr7P1rRray5yXLW/NvKEfsaLstrXKze5Cd6+BrXUIt+hlSj2jizzvU/C5/73Ew\";\n  b +=\n    \"/supKn3Va+XHizVVSV/iGMgPizEtU+svk5NcKHDwyveTge5fpfzhpwZkvllS0Hw78QVIxHCqb9H\";\n  b +=\n    \"Rc8ofelYodRrSN/LNf86/8Z+dSXk3+s39d7JBQnxTh8lTM+QySIHiQQX3bGxhZ5ST95/K0ehSPO\";\n  b +=\n    \"hkNxZklJP/L+VAU2PqHBE0117hA0mW1YioHlH94hrlfSQd3oiP0m3TiH9HqPm4Ef9B991GjNJEB\";\n  b +=\n    \"kYMqegbyzNrgnlNsHkTbNEE/0RTtxuxHP1z/CNQqs/8Vpfon9NbSKcP/u53c+qIX3L67Wjt+QaI\";\n  b +=\n    \"z1YuOeXQkL2pqvY6iWOrDh6q255r+FxbRWLeLxnhNbP7H7KuqyZxaN24WZvdLs/wrntF4sIl8UK\";\n  b +=\n    \"PhD7Xutd9JPGuM+s2F5ePWC6tqyPxuWlvWue2WvZiVB1hgDgrLi9sdtT5LQvqeCQecHH30Pxmoe\";\n  b +=\n    \"O319mSWNy/tlfQPKtj5+pcSBy7KFKierFg1m917iQ+FTK+zbkJ2ptIvTeJPy48vPDCpYklzvUiE\";\n  b +=\n    \"j8p93JYxBXVBNaHknjmjkCv2nTJjt71ESTu0Lny6v3rp4sy6qNJvP/CNad2EfdOTqjvR+IFZ9oc\";\n  b +=\n    \"uLgyY25JfQKJi9amjHHPLL+7v15G4s93kswHpm1afaM+k8Rt3x3/de7XRx9q6rUk3qs3lG3YvGs\";\n  b +=\n    \"Xt2E0iaf1HJ3JSEqZ1KahiMRxgqOiZMPBM50bppM4vu3+2dMnxCwY3DCPxBVjPbPdc3+/r21YRu\";\n  b +=\n    \"LivU/2rqy4v664YQ2J543RTr6UtPHrxoZyEl9auqF4bnbEvhMNO0mcYWd5+Otb9tT7DQdJvFsol\";\n  b +=\n    \"Me32Xbh94YTJC4fN+py5aPOi20N50nM7NDe64RVQrWv4TqJr83RKBa7u5dFGapIbHEWKXy/a1J9\";\n  b +=\n    \"qqGaxC+drOfI2E8OjjW8IvH5yb1VnPMHpy82fCSxt9zx0UCHPVd+NtQZkPB1v4LOkhG27KIBdME\";\n  b +=\n    \"7IbjZ3mrt9WfPyJMv+EspP/kybzNO9u2gtDnzvuYFdy5oQVPf/mzHOjPq4sIjEtJwH4xKCS9GXf\";\n  b +=\n    \"QfWxxHjt9gdaB/vmmN5OqNLJL4B0G6tVri0LZd7MrJJGkPWKnVnrguLE19XUoSYCDIhs2np0vkv\";\n  b +=\n    \"26rIMcjBLkr3+Q0k32q8Bb5viDIEtcRXX53HXriPbkuBCvMp87rvBW95pijMhK/mJHtJHuD3mmH\";\n  b +=\n    \"ZpK4Z27NksWrs0q7oFoST8gYs3NUHud9AjqaxLnN7+Wvqu63MxctIvGxk0uHzJk4ZOIcdDqJOw5\";\n  b +=\n    \"dcPpkXODpcnQeld+ShX8k7PSafwpdRuLHSSWLK1Z2//UhuobEbaYH3xUdW7q2Di0nccLKRavVSy\";\n  b +=\n    \"o/22M7SXzx0PN+cYer9gixgyR+FN7qvcOHusnR2AkSr81LuLb0Iv98Gnae6g3iWo76MNh+UQF2n\";\n  b +=\n    \"cQhAreFVbtKHi3Fqki84OfHCXFXbm/YjVWTODRi/Zrbo5fWXsZeUcTiEWvWR0fnHHiJfSSx07Kw\";\n  b +=\n    \"3TUzN01j4nUk9i4asM6qxu0yHyeNpBFP4eznT9ZYLe2A80i8nLdsVe1Sq6fxuC31/GOHlNt8j/J\";\n  b +=\n    \"s3IXEEy6tH5n4U4R+Gu5OYp975XhYdcvDa3FvEhcbIhL9lqXPPIKLSBy+d/qy5Q4B1+/goSTe6P\";\n  b +=\n    \"x455y7jis+4REkvp17f7/y8IKXlkQ0if+zkTddrdDoyNnMkREUCfQYmrbLiDfSI4gRlzXBm5rg8\";\n  b +=\n    \"iZ4cxO85W9GRn5747AcyvcQ8kND+UFCz0bhtzaRZ2akyflOGwF5IWRySD5K00IY/VrQpv5G7EB/\";\n  b +=\n    \"mMOIuzZ53pN+/te0toTDLxiuSdIhj8bpe4D+Tf4aZcsY5iH65zw9aoLbYVQejdgL+3M6k5vgIwD\";\n  b +=\n    \"3aIRvAvxTI/yYfv5v2wi9Q1atsSJ3xg7+u5nIEMFQMItKSWgnSIA7SMYwFf8yDFiDaDXf5y+i72\";\n  b +=\n    \"EO0WEEvr4+8CRboFCmxUhj/mYClCXNA/dGGeNo4nJfkNkTWupQswu549ZLpzV1M4uezRlXFHBGN\";\n  b +=\n    \"llrRX8oAjJwqnRauH+ZAhffmhByaxKkBW5cgjRqSUx5BC4I4q6jVqIR4NqMlm1cnYxsgkeRGkpa\";\n  b +=\n    \"MFfUtOzYseNfyyDZg6SS4qvhV7A8k7l8kloKuCd7cylHeB8C45sL4oMUHOV0vId0lObSWR2l/ZT\";\n  b +=\n    \"8b/y81VGaQ1CQMe+2OVS55jXaVRtN9x9jId0f+P2lfYEVm1+KTpEpk6vhRnFEDk3zSK+OjVhAr0\";\n  b +=\n    \"b5o7jeXG8+fxTf15c7xhv8548hAbiM8eB6eHv+ubzG/ahNwzhBu4ZteW8OdQgvp1dcgjyBQCAU+\";\n  b +=\n    \"AsCBCJBoCBIIBZIBMFCgVAo9BcGCEXCQGGQUCyUCIP9Bf5Cf3//AH+Rf6B/kL/YX+IfHCAIEAb4\";\n  b +=\n    \"BwQEiAICA4ICxAGSgGCRQCQU+YsCRCJRoChIJBZJRMGBgkBhoH9gQKAoMDAwKFAcKAkMDhIECYP\";\n  b +=\n    \"8gwKCREGBQUFB4iBJULBYIBaK/cUBYpE4UBwkFosl4mCJQCKU+EsCJCJJoCRIIpZIJMHBIInBIP\";\n  b +=\n    \"pgIDoYBAsGTn8uB6h0UkBThPywPOh3+3QuVR4CJrVDKvgf/ozyvJgU1bRWrZOnSTM1sLyNzyayq\";\n  b +=\n    \"biMeAab2v39Szo1mYpUuV+WPCt1GNzzyc6j2sYQun9Qw50QuK2h1tKvl/FFpJ5AdmpSRCN2+ZI8\";\n  b +=\n    \"ql3vyKMI4CmfciVNN82vzqM07IzPqfDUMzImDV+qpd5qEIgECJFvRabfKZ/SRKTHIeoQgQ5KitF\";\n  b +=\n    \"lQxfQUSmydFkULbYkn6L8oTZOaX90WkG/JlPJqcMPsg8gjzSgihe5o/cnr5n5FOVdQT5Fl702h3\";\n  b +=\n    \"pfh/j6+g4l1RDpEgI90J96K3gHXvwz+ZTm4XU6L8b3PUWerlBCPVVYRB7wxpOfO0xORQ93bkBYY\";\n  b +=\n    \"iSlFdlsJKVRaT+SKkOjDOMBjhRuXqmpeEE9d+DDLR8NSBj5nRK+B/XNB08yRcb0RAJZcPWnHElp\";\n  b +=\n    \"ZOaAK7OR7L+2Ga3a2LbXjKTa1yf6AxN/8atTKki6sWy1QkluZNMUzSOpnU8u/ZEKI3aiKTcRFGc\";\n  b +=\n    \"wmEyMxWSzONZcFzNHnpO5lYW5JWGFN2tmw7FHHYjmqCPuxHJGXTA3ez7eHvcx80UFuBDzR9djG7\";\n  b +=\n    \"EyYhP7D6yWUY814AbO5rz8aTNKBQMGTps+y+WeheVP0bV1vn6dE4YmPSqaMXP2nI3b9x84WXnm7\";\n  b +=\n    \"K/VTwwIYd3MUygSh3ToGNVzaNFM8HDn/gOVZy9eqn6CEOYW5NOQDt26R/VMlMmLZi9dfubiJXNr\";\n  b +=\n    \"T+AUNWBIQmKSTD5j9kYQ5OSZ+9VP3ppbd4uSyfVFOw4eOnzj5tt3hROmrVl36PDJUxcv3bkbuaj\";\n  b +=\n    \"iQuXFS1ExsQMGJSZNmVm8ffeew0crT920tncYkvD5S4NBnzXi1/sWbkqVi2vSmLFbto47cNDeoY\";\n  b +=\n    \"Vb9x4xsQMHJySOHbfr5PUbVW/ffVJrirW6BW19/dZv3XP41KWb95eELVwkKHa7ev2iISZ28BAW2\";\n  b +=\n    \"9Kqnd+bGqVK3LFzl26zZsel606fuXzl1u2nDQaEn9Rq/H1ifATbmWBaF5Rb6Dcx3DgFzrgjGyX8\";\n  b +=\n    \"CBHBwlEWk2XN7W3ZjBXPwgkXLgdn4ywcw3GcRzBwMyZqYceIYTmzBrAwpr15b6Ir7oOjhDXTkhd\";\n  b +=\n    \"CuLZJ4mcRw9voTzPGb8OdmOPr8UEse05zji3PljecyWU6MQex2jO6c70JHoHiQjNvwolphuvLwS\";\n  b +=\n    \"M/YS9cv4YdilvioSwJuz1jvMG6OdvP2gdvadnSUj+dGL/Q0cxu8jyGH6MDC7NoztEfaqXl6X9x4\";\n  b +=\n    \"jH0Bob+Pu/9clzMKUiw1e9l688xuM074FymhN2dzWNqzVrgg4lBHH1hcxeuPSea0E9lblrDcyCE\";\n  b +=\n    \"q4iCO21ZPAZDv86q4BML5XsxwdMZhP4Q7oxbmiNMFAWZwxgsFsZmczAuwwyzIKxQa6wZw8baFrX\";\n  b +=\n    \"DHDBHcxeGK9sdHU5kYFvxg9gl7Ap2nXeD8wt2E7uDPmA8xJ4Sz7A3/LfEVww0VJTXrkOnmNjiFS\";\n  b +=\n    \"tWjpo2d0Hpjv0TtzNZnKCOnfp/uHyFsG0eJO4/YFzZlq0VgQ+aTZoyc8W3lggbYkysTJ6we4+zC\";\n  b +=\n    \"4vNNbN1CAoO2bDx1m2OeNbsDSxuh05piuI5qqTDb2oGp3ysMyxZ6uvXziN+ecmq1WvWb9i8/+AJ\";\n  b +=\n    \"phnPzjWkc7c+69afv1DCcnRq1aZT56evagwnKwl+6zZtPQIkIZE9o3vHxfeHjS45VZ6WockbM27\";\n  b +=\n    \"qmrKt245c3rJVqZqb2GoUAyd88DQc9fPVj3fFhZYuhDunBaM9I4Kw8NKXMd0Jd8KDLTKL6Vog5t\";\n  b +=\n    \"hz2c07dAvGU9kcgT2jJe7MQMMkxE8MP4LL4rDC+O0IHicID2E4sQgeq3eUOMA8gOXL5ha07Rvjw\";\n  b +=\n    \"fayd2rrYuvAiQERRJg7srjMSHY7js6sc7gXswODy+zDRBlWOEM/LaVFJJurX5fYqpsZl2luE8Lk\";\n  b +=\n    \"BnkTDvp9obI4XiSH272bcyQ7zjyqgNWd64r3iBLjFmwuM5jFLQhy1O9BLf3NC5em6cz0J6ZGp5o\";\n  b +=\n    \"X+RVfGd9j1b7xwSwvIoHZltud68GwGb9tiPwnIphlHQbbwMKv7KJfvDilTwsCfHBrgl0wfQqRwT\";\n  b +=\n    \"DHOSyrOck9ONpQ/Weuhp1t112/xJY3gOOon1TQA5/QxdKuqLeb/mF7/Q0f3InACsLcrEMYaNED/\";\n  b +=\n    \"RfPaIJLYIXWEdEd9cdCmSgRz3AWYQUW3oSM15+r3yJxNfcmOKDdM/VLCm+BTJvjWt4gFniLLHmE\";\n  b +=\n    \"BGTGg90qpqAfzw5n4CyOK27GYHK5TDboVfXn2nCLmP+yw6avSSRXHdlnF+itSLpDuMbxaISNdHd\";\n  b +=\n    \"G3JemOP7huidFkU5PE5EqPfUBJPghSfTHlLQq6gT/B6s8RbpCCxevIsFfH6rgCS3cb45TZcnhGo\";\n  b +=\n    \"NcjJAfcoE35PkmZIXUqsgjjyQwwDee1xUilPJlIcFHZjOSkaE2JUgzB74bj5/sVuNd0t5LwPdWr\";\n  b +=\n    \"XvgjW1I9mlRm+yLNPCDVhiSg+rRh0Eot6XY3fyheJOFNNiv+apggcvDHh9atIx+O/xhbKyqZe/l\";\n  b +=\n    \"B1f1Ri5J+8ivrOqD3GnZF3nwME7wUBq/5dGq/pefPezPR5QD3qKGAUg2wkJ8UBTFwB8aaSaws0L\";\n  b +=\n    \"loGPFMJRojbZwHmIWwuGgzQmUA/ohRns8lO3VHOWLQQCCDTpQFhdzRUNgcIINvHAxJxTDgkGHRW\";\n  b +=\n    \"Cgw0ZbYDhqBjEDeEBtMXvQnYXAuIBvFs7FWqAdQFgeCOkBxAOpoPGgBAszI6XCJIFIMYhdsGDse\";\n  b +=\n    \"yyuaCRKoEA4ykb7oBiLx05BMY4ZsyfmjMKf2AIFMTLMUHcOmkagTJAozBEjcCvCHNwyUUsUlDvu\";\n  b +=\n    \"irUAf2EYymKjmBkHBcMIqsNaoTk4gXFQJn4XFAJILQtKxNhMLoYK3ISEAGAG6sHhYXyQSRSXoGR\";\n  b +=\n    \"C8BA2hi3CUXOUBSPEscowBD3eEsFnoMl8hKnAEALl8rHeGAI7dNQRY6ALMadm5mhbtqOZLy5AYZ\";\n  b +=\n    \"G1Q7uCkscwHsiXHxoApGIYA+TbC2Ojb2CxoaABW1nBpRr6CJ3PQHCQS8IDJ9C1QD6CLTYTEqPQI\";\n  b +=\n    \"EtPkEsuLgQSWWhH3J2BsjuhPEzEAW84moTDgmSiJSjOtiNLFUXtUQsWzjjOhhlxgCXKhJUEK+Al\";\n  b +=\n    \"SBcTXJ2xeDZ0GY6SgVE5DiqUgXBQ7BOoD9Aa0FkgNgLlcz2YZC0xMdwXFDbCAoWB9rUHCQFSRjJ\";\n  b +=\n    \"xKBWUYCSMCgX5AGMpgnYm+sB7X8wBAXkmGGw2xmpBzMMRMeHPRi1QewZqCSRZk1IYoMWiHQmElc\";\n  b +=\n    \"VCkvVvkdRMlQZ+QEahzFFlgIl641NjsGr4pjpkpOiEhqjHEDMQ+xOUk61WyXSpYP2KsSGvtU6aL\";\n  b +=\n    \"scISIqN4F3BOowHnsOzdrnMJyWfYJCa3m2EvkECX4GPEi7IQRwe3zS/+WBd6e8j8PcRijwZqVBe\";\n  b +=\n    \"f6HIF/jle/yATDszM4f65wMiGS5P1fLBQlOSKhP5pwZIAuViYUpQgDxQJhXLRcH+YCmZmpYWJBU\";\n  b +=\n    \"Hy8QpnsxckBedhinwFQb7CnjwyNsnBSwK0uXKZlB/Syzie/iLU8VSkUwQ5Im0stRC1Q1tUpqc/N\";\n  b += \"aOBm1vmUWpe/ikZ6pSwJru/wGcYyJi\";\n\n  var input = pako.inflate(base64ToUint8Array(b));\n  return init(input);\n}\n","import {\n  fromString as uint8arrayFromString,\n  toString as uint8arrayToString,\n} from \"uint8arrays\";\n\n/**\n * Convert a file to a data URL, which could then be embedded in a LIT.  A data URL is a string representation of a file.\n * @param {File} file The file to turn into a data url\n * @returns {string} The data URL.  This is a string representation that can be used anywhere the original file would be used.\n */\nexport function fileToDataUrl(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\n/**\n * Download a file in memory to the user's computer\n * @param {Object} params\n * @param {string} params.filename The name of the file\n * @param {Uint8Array} params.data The actual file itself as a Uint8Array\n * @param {string} params.mimetype The mime type of the file\n * @returns {string} The data URL.  This is a string representation that can be used anywhere the original file would be used.\n */\nexport function downloadFile({ filename, data, mimetype }) {\n  var element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:\" + mimetype + \";base64,\" + uint8arrayToString(data, \"base64\")\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\n/**\n * Inject an iFrame into the current page that will display a LIT.  This function safely sandboxes the content in the iFrame so that the LIT cannot see cookies or localStorage of the parent website.\n * @param {Object} params\n * @param {Object} params.destinationId The DOM ID of the element to inject the iFrame into\n * @param {string} params.title The title of the content being displayed\n * @param {string} params.fileUrl The URL of the content that will be shown in the iFrame\n * @param {string} params.className An optional DOM class name to add to the iFrame for styling\n */\nexport function injectViewerIFrame({\n  destinationId,\n  title,\n  fileUrl,\n  className,\n}) {\n  if (fileUrl.includes(\"data:\")) {\n    // data urls are not safe, refuse to do this\n    throw new Error(\n      \"You can not inject an iFrame with a data url.  Try a regular https URL.\"\n    );\n  }\n\n  const url = new URL(fileUrl);\n  if (url.host.toLowerCase() === window.location.host.toLowerCase()) {\n    throw new Error(\n      \"You cannot host a LIT on the same domain as the parent webpage.  This is because iFrames with the same origin have access to localstorage and cookies in the parent webpage which is unsafe\"\n    );\n  }\n\n  const iframe = document.createElement(\"iframe\");\n  iframe.src = fileUrl;\n  iframe.title = title;\n  iframe.sandbox =\n    \"allow-forms allow-scripts allow-popups  allow-modals allow-popups-to-escape-sandbox allow-same-origin\";\n  iframe.loading = \"lazy\";\n  iframe.allow =\n    \"accelerometer; ambient-light-sensor; autoplay; battery; camera; display-capture; encrypted-media; fullscreen; geolocation; gyroscope; layout-animations; legacy-image-formats; magnetometer; microphone; midi; payment; picture-in-picture; publickey-credentials-get; sync-xhr; usb; vr; screen-wake-lock; web-share; xr-spatial-tracking\";\n  if (className) {\n    iframe.className = className;\n  }\n  document.getElementById(destinationId).appendChild(iframe);\n}\n","import JSZip from \"jszip\";\nimport {\n  fromString as uint8arrayFromString,\n  toString as uint8arrayToString,\n} from \"uint8arrays\";\nimport { formatEther, formatUnits } from \"@ethersproject/units\";\nimport { throwError, log } from \"../lib/utils\";\n\nimport {\n  importSymmetricKey,\n  generateSymmetricKey,\n  encryptWithSymmetricKey,\n  decryptWithSymmetricKey,\n  canonicalAccessControlConditionFormatter,\n  canonicalEVMContractConditionFormatter,\n  canonicalSolRpcConditionFormatter,\n  canonicalUnifiedAccessControlConditionFormatter,\n} from \"./crypto\";\n\nimport { checkAndSignEVMAuthMessage, decimalPlaces } from \"./eth\";\nimport { checkAndSignSolAuthMessage } from \"./sol\";\nimport { checkAndSignCosmosAuthMessage } from \"./cosmos\";\n\nimport { wasmBlsSdkHelpers } from \"../lib/bls-sdk\";\n\nimport { fileToDataUrl } from \"./browser\";\nimport { ALL_LIT_CHAINS, NETWORK_PUB_KEY } from \"../lib/constants\";\n\nconst PACKAGE_CACHE = {};\n\n/**\n * Check for an existing cryptographic authentication signature and create one of it does not exist.  This is used to prove ownership of a given crypto wallet address to the Lit nodes.  The result is stored in LocalStorage so the user doesn't have to sign every time they perform an operation.\n * @param {Object} params\n * @param {string} params.chain The chain you want to use.  Find the supported list of chains here: https://developer.litprotocol.com/docs/supportedChains\n * @param {Array<string>} params.resources Optional and only used with EVM chains.  A list of resources to be passed to Sign In with Ethereum.  These resources will be part of the Sign in with Ethereum signed message presented to the user.\n * @returns {AuthSig} The AuthSig created or retrieved\n */\nexport async function checkAndSignAuthMessage({ chain, resources }) {\n  const chainInfo = ALL_LIT_CHAINS[chain];\n  if (!chainInfo) {\n    throwError({\n      message: `Unsupported chain selected.  Please select one of: ${Object.keys(\n        ALL_LIT_CHAINS\n      )}`,\n      name: \"UnsupportedChainException\",\n      errorCode: \"unsupported_chain\",\n    });\n  }\n\n  if (chainInfo.vmType === \"EVM\") {\n    return checkAndSignEVMAuthMessage({ chain, resources });\n  } else if (chainInfo.vmType === \"SVM\") {\n    return checkAndSignSolAuthMessage({ chain });\n  } else if (chainInfo.vmType === \"CVM\") {\n    return checkAndSignCosmosAuthMessage({ chain });\n  } else {\n    throwError({\n      message: `vmType not found for this chain: ${chain}.  This should not happen.  Unsupported chain selected.  Please select one of: ${Object.keys(\n        ALL_LIT_CHAINS\n      )}`,\n      name: \"UnsupportedChainException\",\n      errorCode: \"unsupported_chain\",\n    });\n  }\n}\n\n/**\n * Encrypt a string.  This is used to encrypt any string that is to be locked via the Lit Protocol.\n * @param {string} str The string to encrypt\n * @returns {Promise<Object>} A promise containing the encryptedString as a Blob and the symmetricKey used to encrypt it, as a Uint8Array.\n */\nexport async function encryptString(str) {\n  const encodedString = uint8arrayFromString(str, \"utf8\");\n\n  const symmKey = await generateSymmetricKey();\n  const encryptedString = await encryptWithSymmetricKey(\n    symmKey,\n    encodedString.buffer\n  );\n\n  const exportedSymmKey = new Uint8Array(\n    await crypto.subtle.exportKey(\"raw\", symmKey)\n  );\n\n  return {\n    symmetricKey: exportedSymmKey,\n    encryptedString,\n  };\n}\n\n/**\n * Decrypt a string that was encrypted with the encryptString function.\n * @param {Blob} encryptedStringBlob The encrypted string as a Blob\n * @param {Uint8Array} symmKey The symmetric key used that will be used to decrypt this.\n * @returns {Promise<string>} A promise containing the decrypted string\n */\nexport async function decryptString(encryptedStringBlob, symmKey) {\n  // import the decrypted symm key\n  const importedSymmKey = await importSymmetricKey(symmKey);\n\n  const decryptedStringArrayBuffer = await decryptWithSymmetricKey(\n    encryptedStringBlob,\n    importedSymmKey\n  );\n\n  return uint8arrayToString(new Uint8Array(decryptedStringArrayBuffer), \"utf8\");\n}\n\n/**\n * Zip and encrypt a string.  This is used to encrypt any string that is to be locked via the Lit Protocol.\n * @param {string} string The string to zip and encrypt\n * @returns {Promise<Object>} A promise containing the encryptedZip as a Blob and the symmetricKey used to encrypt it, as a Uint8Array.  The encrypted zip will contain a single file called \"string.txt\"\n */\nexport async function zipAndEncryptString(string) {\n  const zip = new JSZip();\n  zip.file(\"string.txt\", string);\n  return encryptZip(zip);\n}\n\n/**\n * Zip and encrypt multiple files.\n * @param {array} files An array of the files you wish to zip and encrypt\n * @returns {Promise<Object>} A promise containing the encryptedZip as a Blob and the symmetricKey used to encrypt it, as a Uint8Array.  The encrypted zip will contain a folder \"encryptedAssets\" and all of the files will be inside it.\n */\nexport async function zipAndEncryptFiles(files) {\n  // let's zip em\n  const zip = new JSZip();\n  for (let i = 0; i < files.length; i++) {\n    zip.folder(\"encryptedAssets\").file(files[i].name, files[i]);\n  }\n  return encryptZip(zip);\n}\n\n/**\n * Decrypt and unzip a zip that was created using encryptZip, zipAndEncryptString, or zipAndEncryptFiles.\n * @param {Blob} encryptedZipBlob The encrypted zip as a Blob\n * @param {Uint8Array} symmKey The symmetric key used that will be used to decrypt this zip.\n * @returns {Promise<Object>} A promise containing a JSZip object indexed by the filenames of the zipped files.  For example, if you have a file called \"meow.jpg\" in the root of your zip, you could get it from the JSZip object by doing this: const imageBlob = await decryptedZip['meow.jpg'].async('blob')\n */\nexport async function decryptZip(encryptedZipBlob, symmKey) {\n  // const keypair = await checkAndDeriveKeypair()\n\n  // log('Got keypair out of localstorage: ' + keypair)\n  // const privkey = keypair.secretKey\n\n  // let decryptedSymmKey = await decryptWithWeb3PrivateKey(symmKey)\n  // if (!decryptedSymmKey) {\n  //   // fallback to trying the private derived via signature\n  //   log('probably not metamask')\n  //   decryptedSymmKey = decryptWithPrivkey(symmKey, privkey)\n  // }\n  // log('decrypted', decryptedSymmKey)\n\n  // import the decrypted symm key\n  const importedSymmKey = await importSymmetricKey(symmKey);\n\n  const decryptedZipArrayBuffer = await decryptWithSymmetricKey(\n    encryptedZipBlob,\n    importedSymmKey\n  );\n\n  // unpack the zip\n  const zip = new JSZip();\n  const unzipped = await zip.loadAsync(decryptedZipArrayBuffer);\n\n  // load the files into data urls with the metadata attached\n  // const files = await Promise.all(unzipped.files.map(async f => {\n  //   // const dataUrl = await fileToDataUrl(f)\n  //   return {\n  //     type: f.type,\n  //     name: f.name,\n  //     file: f\n  //   }\n  // }))\n\n  return unzipped.files;\n}\n\n/**\n * Encrypt a zip file created with JSZip using a new random symmetric key via WebCrypto.\n * @param {JSZip} zip The JSZip instance to encrypt\n * @returns {Promise<Object>} A promise containing the encryptedZip as a Blob and the symmetricKey used to encrypt it, as a Uint8Array string.\n */\nexport async function encryptZip(zip) {\n  const zipBlob = await zip.generateAsync({ type: \"blob\" });\n  const zipBlobArrayBuffer = await zipBlob.arrayBuffer();\n  // log('blob', zipBlob)\n\n  const symmKey = await generateSymmetricKey();\n  const encryptedZipBlob = await encryptWithSymmetricKey(\n    symmKey,\n    zipBlobArrayBuffer\n  );\n\n  // to download the encrypted zip file for testing, uncomment this\n  // saveAs(encryptedZipBlob, 'encrypted.bin')\n\n  const exportedSymmKey = new Uint8Array(\n    await crypto.subtle.exportKey(\"raw\", symmKey)\n  );\n  // log('exportedSymmKey in hex', uint8arrayToString(exportedSymmKey, 'base16'))\n\n  // encrypt the symmetric key with the\n  // public key derived from the eth wallet\n  // const keypair = await checkAndDeriveKeypair()\n  // const pubkey = keypair.publicKey\n  // const privkey = keypair.secretKey\n\n  // encrypt symm key\n  // const encryptedSymmKeyData = encryptWithPubkey(pubkey, JSON.stringify(exportedSymmKey), 'x25519-xsalsa20-poly1305')\n  // const packed = JSON.stringify(encryptedSymmKeyData)\n\n  //   log('packed symmetric key ', packed)\n  //   const unpacked = JSON.parse(packed)\n  //   // test decrypt\n  //   const decryptedSymmKey = decryptWithPrivkey(unpacked, privkey)\n  //   log('decrypted', decryptedSymmKey)\n  //\n  //   // import the decrypted symm key\n  //   const importedSymmKey = await importSymmetricKey(decryptedSymmKey)\n  //\n  //   const decryptedZipArrayBuffer = await decryptWithSymmetricKey(\n  //     encryptedZipBlob,\n  //     importedSymmKey\n  //   )\n  //\n  //   // compare zip before and after as a sanity check\n  //   const isEqual = compareArrayBuffers(\n  //     zipBlobArrayBuffer,\n  //     decryptedZipArrayBuffer\n  //   )\n  //   log('Zip before and after decryption are equal: ', isEqual)\n  //   if (!isEqual) {\n  //     throw new Error('Decrypted zip does not match original zip.  Something is wrong.')\n  //   }\n\n  // to download the zip, for testing, uncomment this\n  //   const decryptedBlob = new Blob(\n  //     [decryptedZipArrayBuffer],\n  //     { type: 'application/zip' }\n  //   )\n  //   log('decrypted blob', decryptedBlob)\n  //\n  //   saveAs(decryptedBlob, 'decrypted.zip')\n  // log('saved')\n\n  return {\n    symmetricKey: exportedSymmKey,\n    encryptedZip: encryptedZipBlob,\n  };\n}\n\n/**\n * Encrypt a single file, save the key to the Lit network, and then zip it up with the metadata.\n * @param {Object} params\n * @param {Object} params.authSig The authSig of the user.  Returned via the checkAndSignAuthMessage function\n * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n * @param {string} params.chain The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n * @param {File} params.file The file you wish to encrypt\n * @param {LitNodeClient} params.litNodeClient An instance of LitNodeClient that is already connected\n * @param {string} params.readme An optional readme text that will be inserted into readme.txt in the final zip file.  This is useful in case someone comes across this zip file and wants to know how to decrypt it.  This file could contain instructions and a URL to use to decrypt the file.\n * @returns {Promise<Object>} A promise containing an object with 3 keys: zipBlob, encryptedSymmetricKey, and symmetricKey.  zipBlob is a zip file that contains an encrypted file and the metadata needed to decrypt it via the Lit network.  encryptedSymmetricKey is the symmetric key needed to decrypt the content, encrypted with the Lit network public key.  You may wish to store encryptedSymmetricKey in your own database to support quicker re-encryption operations when adding additional access control conditions in the future, but this is entirely optional, and this key is already stored inside the zipBlob.  symmetricKey is the raw symmetric key used to encrypt the files.  DO NOT STORE IT.  It is provided in case you wish to create additional \"OR\" access control conditions for the same file.\n */\nexport async function encryptFileAndZipWithMetadata({\n  authSig,\n  accessControlConditions,\n  evmContractConditions,\n  solRpcConditions,\n  unifiedAccessControlConditions,\n  chain,\n  file,\n  litNodeClient,\n  readme,\n}) {\n  const symmetricKey = await generateSymmetricKey();\n  const exportedSymmKey = new Uint8Array(\n    await crypto.subtle.exportKey(\"raw\", symmetricKey)\n  );\n  // log('exportedSymmKey in hex', uint8arrayToString(exportedSymmKey, 'base16'))\n\n  const encryptedSymmetricKey = await litNodeClient.saveEncryptionKey({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    symmetricKey: exportedSymmKey,\n    authSig,\n    chain,\n  });\n  log(\"encrypted key saved to Lit\", encryptedSymmetricKey);\n\n  // encrypt the file\n  var fileAsArrayBuffer = await file.arrayBuffer();\n  const encryptedZipBlob = await encryptWithSymmetricKey(\n    symmetricKey,\n    fileAsArrayBuffer\n  );\n\n  const zip = new JSZip();\n  const metadata = metadataForFile({\n    name: file.name,\n    type: file.type,\n    size: file.size,\n    encryptedSymmetricKey,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n  });\n\n  zip.file(\"lit_protocol_metadata.json\", JSON.stringify(metadata));\n  if (readme) {\n    zip.file(\"readme.txt\", readme);\n  }\n  zip.folder(\"encryptedAssets\").file(file.name, encryptedZipBlob);\n\n  const zipBlob = await zip.generateAsync({ type: \"blob\" });\n\n  return { zipBlob, encryptedSymmetricKey, symmetricKey: exportedSymmKey };\n}\n\n/**\n * Given a zip file with metadata inside it, unzip, load the metadata, and return the decrypted file and the metadata.  This zip file would have been created with the encryptFileAndZipWithMetadata function.\n * @param {Object} params\n * @param {Object} params.authSig The authSig of the user.  Returned via the checkAndSignAuthMessage function\n * @param {File} params.file The zip file with metadata inside it and the encrypted asset\n * @param {LitNodeClient} params.litNodeClient An instance of LitNodeClient that is already connected\n * @returns {Promise<Object>} A promise containing an object that contains decryptedFile and metadata properties.  The decryptedFile is an ArrayBuffer that is ready to use, and metadata is an object that contains all the properties of the file like it's name and size and type.\n */\nexport async function decryptZipFileWithMetadata({\n  authSig,\n  file,\n  litNodeClient,\n  additionalAccessControlConditions,\n}) {\n  const zip = await JSZip.loadAsync(file);\n  const metadata = JSON.parse(\n    await zip.file(\"lit_protocol_metadata.json\").async(\"string\")\n  );\n  log(\"zip metadata\", metadata);\n\n  let symmKey;\n  try {\n    symmKey = await litNodeClient.getEncryptionKey({\n      accessControlConditions: metadata.accessControlConditions,\n      evmContractConditions: metadata.evmContractConditions,\n      solRpcConditions: metadata.solRpcConditions,\n      unifiedAccessControlConditions: metadata.unifiedAccessControlConditions,\n      toDecrypt: metadata.encryptedSymmetricKey,\n      chain: metadata.chain,\n      authSig,\n    });\n  } catch (e) {\n    if (e.errorCode === \"not_authorized\") {\n      // try more additionalAccessControlConditions\n      if (!additionalAccessControlConditions) {\n        throw e;\n      }\n      log(\"trying additionalAccessControlConditions\");\n\n      for (let i = 0; i < additionalAccessControlConditions.length; i++) {\n        const accessControlConditions =\n          additionalAccessControlConditions[i].accessControlConditions;\n        log(\"trying additional condition\", accessControlConditions);\n        try {\n          symmKey = await litNodeClient.getEncryptionKey({\n            accessControlConditions: accessControlConditions,\n            toDecrypt:\n              additionalAccessControlConditions[i].encryptedSymmetricKey,\n            chain: metadata.chain,\n            authSig,\n          });\n\n          // // okay we got the additional symmkey, now we need to decrypt the symmkey and then use it to decrypt the original symmkey\n          // const importedAdditionalSymmKey = await importSymmetricKey(symmKey)\n          // symmKey = await decryptWithSymmetricKey(additionalAccessControlConditions[i].encryptedSymmetricKey, importedAdditionalSymmKey)\n\n          break; // it worked, we can leave the loop and stop checking additional access control conditions\n        } catch (e) {\n          // swallow not_authorized because we are gonna try some more accessControlConditions\n          if (e.errorCode !== \"not_authorized\") {\n            throw e;\n          }\n        }\n      }\n      if (!symmKey) {\n        // we tried all the access control conditions and none worked\n        throw e;\n      }\n    } else {\n      throw e;\n    }\n  }\n  const importedSymmKey = await importSymmetricKey(symmKey);\n\n  // log('symmetricKey', importedSymmKey)\n\n  const encryptedFile = await zip\n    .folder(\"encryptedAssets\")\n    .file(metadata.name)\n    .async(\"blob\");\n  // log('encryptedFile', encryptedFile)\n\n  const decryptedFile = await decryptWithSymmetricKey(\n    encryptedFile,\n    importedSymmKey\n  );\n\n  // log('decryptedFile', decryptedFile)\n\n  return { decryptedFile, metadata };\n}\n\n/**\n * Encrypt a file without doing any zipping or packing.  This is useful for large files.  A 1gb file can be encrypted in only 2 seconds, for example.  A new random symmetric key will be created and returned along with the encrypted file.\n * @param {Object} params\n * @param {File} params.file The file you wish to encrypt\n * @returns {Promise<Object>} A promise containing an object with keys encryptedFile and symmetricKey.  encryptedFile is a Blob, and symmetricKey is a Uint8Array that can be used to decrypt the file.\n */\nexport async function encryptFile({ file }) {\n  // generate a random symmetric key\n  const symmetricKey = await generateSymmetricKey();\n  const exportedSymmKey = new Uint8Array(\n    await crypto.subtle.exportKey(\"raw\", symmetricKey)\n  );\n\n  // encrypt the file\n  var fileAsArrayBuffer = await file.arrayBuffer();\n  const encryptedFile = await encryptWithSymmetricKey(\n    symmetricKey,\n    fileAsArrayBuffer\n  );\n\n  return { encryptedFile, symmetricKey: exportedSymmKey };\n}\n\n/**\n * Decrypt a file that was encrypted with the encryptFile function, without doing any unzipping or unpacking.  This is useful for large files.  A 1gb file can be decrypted in only 1 second, for example.\n * @param {Object} params\n * @param {File} params.file The file you wish to decrypt\n * @param {Uint8Array} params.symmetricKey The symmetric key used that will be used to decrypt this.\n * @returns {Promise<Object>} A promise containing the decrypted file.  The file is an ArrayBuffer.\n */\nexport async function decryptFile({ file, symmetricKey }) {\n  const importedSymmKey = await importSymmetricKey(symmetricKey);\n\n  // decrypt the file\n  const decryptedFile = await decryptWithSymmetricKey(file, importedSymmKey);\n\n  return decryptedFile;\n}\n\nasync function getNpmPackage(packageName) {\n  // log('getting npm package: ' + packageName)\n  if (PACKAGE_CACHE[packageName]) {\n    // log('found in cache')\n    return PACKAGE_CACHE[packageName];\n  }\n\n  const resp = await fetch(\"https://unpkg.com/\" + packageName);\n  if (!resp.ok) {\n    log(\"error with response: \", resp);\n    throw Error(resp.statusText);\n  }\n  const blob = await resp.blob();\n  // log('got blob', blob)\n  const dataUrl = await fileToDataUrl(blob);\n  // log('got dataUrl', dataUrl)\n  PACKAGE_CACHE[packageName] = dataUrl;\n  return dataUrl;\n}\n\n/**\n * Create a ready-to-go LIT using provided HTML/CSS body and an encrypted zip data url.  You need to design your LIT with HTML and CSS, and provide an unlock button with the id \"unlockButton\" inside your HTML.  This function will handle the rest.\n * @param {Object} params\n * @param {string} params.title The title that will be used for the title tag in the outputted HTML\n * @param {number} params.htmlBody The HTML body for the locked state of the LIT.  All users will be able to see this HTML.  This HTML must have a button with an id of \"unlockButton\" which will be automatically set up to decrypt and load the encryptedZipDataUrl\n * @param {string} params.css Any CSS you would like to include in the outputted HTML\n * @param {number} params.encryptedZipDataUrl a data URL of the encrypted zip that contains the locked content that only token holders will be able to view.\n * @param {string} params.tokenAddress The token address of the corresponding NFT for this LIT.  ERC721 and ERC 1155 tokens are currently supported.\n * @param {number} params.tokenId The ID of the token of the corresponding NFT for this LIT.  Only holders of this token ID will be able to unlock and decrypt this LIT.\n * @param {string} params.chain The chain that the corresponding NFT was minted on.  \"ethereum\" and \"polygon\" are currently supported.\n * @param {Array} [params.npmPackages=[]] An array of strings of NPM package names that should be embedded into this LIT.  These packages will be pulled down via unpkg, converted to data URLs, and embedded in the LIT HTML.  You can include any packages from npmjs.com.\n * @returns {Promise<string>} A promise containing the HTML string that is now a LIT.  You can send this HTML around and only token holders will be able to unlock and decrypt the content inside it.  Included in the HTML is this LIT JS SDK itself, the encrypted locked content, an automatic connection to the LIT nodes network, and a handler for a button with id \"unlockButton\" which will perform the unlock operation when clicked.\n */\nexport async function createHtmlLIT({\n  title,\n  htmlBody,\n  css,\n  encryptedZipDataUrl,\n  accessControlConditions,\n  encryptedSymmetricKey,\n  chain,\n  npmPackages = [],\n}) {\n  // uncomment this to embed the LIT JS SDK directly instead of retrieving it from unpkg when a user views the LIT\n  // npmPackages.push('lit-js-sdk')\n  // log('createHtmlLIT with npmPackages', npmPackages)\n  let scriptTags = \"\";\n  for (let i = 0; i < npmPackages.length; i++) {\n    const scriptDataUrl = await getNpmPackage(npmPackages[i]);\n    const tag = `<script src=\"${scriptDataUrl}\"></script>\\n`;\n    scriptTags += tag;\n  }\n\n  const formattedAccessControlConditions = accessControlConditions.map((c) =>\n    canonicalAccessControlConditionFormatter(c)\n  );\n\n  // log('scriptTags: ', scriptTags)\n\n  return `\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>${title}</title>\n    <style>\n      html, body, #root {\n        height: 100%;\n      }\n    </style>\n    <style id=\"jss-server-side\">${css}</style>\n    ${scriptTags}\n    <script>\n      var encryptedZipDataUrl = \"${encryptedZipDataUrl}\"\n      var accessControlConditions = ${JSON.stringify(\n        formattedAccessControlConditions\n      )}\n      var chain = \"${chain}\"\n      var encryptedSymmetricKey = \"${uint8arrayToString(\n        encryptedSymmetricKey,\n        \"base16\"\n      )}\"\n      var locked = true\n      var useLitPostMessageProxy = false\n      var sandboxed = false\n\n      document.addEventListener('lit-ready', function(){\n        var unlockButton = document.getElementById('unlockButton')\n        if (unlockButton) {\n          unlockButton.disabled = false\n        }\n\n        var loadingSpinner = document.getElementById('loadingSpinner')\n        if (loadingSpinner) {\n          loadingSpinner.style = 'display: none;'\n        }\n\n        var loadingText = document.getElementById('loadingText')\n        if (loadingText){\n          loadingText.innerText = ''\n        }\n      })\n    </script>\n    <script onload='LitJsSdk.litJsSdkLoadedInALIT()' src=\"https://jscdn.litgateway.com/index.web.js\"></script>\n  </head>\n  <body>\n    <div id=\"root\">${htmlBody}</div>\n    <script>\n      var unlockButton = document.getElementById('unlockButton')\n      unlockButton.onclick = function() {\n        if (window.sandboxed) {\n          var loadingText = document.getElementById('loadingText')\n          if (loadingText){\n            loadingText.innerText = 'Could not unlock because OpenSea does not allow wallet access.  Click the arrow icon \"View on Lit Protocol\" in the top right to open this in a new window.'\n            loadingText.style = 'color: rgba(255,100,100,1);'\n          }\n        } else {\n          LitJsSdk.toggleLock()\n        }\n      }\n      unlockButton.disabled = true\n    </script>\n  </body>\n</html>\n  `;\n}\n\n/**\n * Lock and unlock the encrypted content inside a LIT.  This content is only viewable by holders of the NFT that corresponds to this LIT.  Locked content will be decrypted and placed into the HTML element with id \"mediaGridHolder\".  The HTML element with the id \"lockedHeader\" will have it's text automatically changed to LOCKED or UNLOCKED to denote the state of the LIT.  Note that if you're creating a LIT using the createHtmlLIT function, you do not need to use this function, because this function is automatically bound to any button in your HTML with the id \"unlockButton\".\n * @returns {Promise} the promise will resolve when the LIT has been unlocked or an error message has been shown informing the user that they are not authorized to unlock the LIT\n */\nexport async function toggleLock() {\n  const mediaGridHolder = document.getElementById(\"mediaGridHolder\");\n  const lockedHeader = document.getElementById(\"lockedHeader\");\n\n  if (window.locked) {\n    // save public content before decryption, so we can toggle back to the\n    // locked state in the future\n    window.publicContent = mediaGridHolder.innerHTML;\n\n    if (!window.useLitPostMessageProxy && !window.litNodeClient.ready) {\n      alert(\n        \"The LIT network is still connecting.  Please try again in about 10 seconds.\"\n      );\n      return;\n    }\n\n    const authSig = await checkAndSignAuthMessage({ chain: window.chain });\n    if (authSig.errorCode && authSig.errorCode === \"wrong_chain\") {\n      alert(\n        \"You are connected to the wrong blockchain.  Please switch your metamask to \" +\n          window.chain\n      );\n      return;\n    }\n\n    // get the merkle proof\n    // const { balanceStorageSlot } = LIT_CHAINS[window.chain]\n    // let merkleProof = null\n    // try {\n    //   merkleProof = await getMerkleProof({ tokenAddress: window.tokenAddress, balanceStorageSlot, tokenId: window.tokenId })\n    // } catch (e) {\n    //   log(e)\n    //   alert('Error - could not obtain merkle proof.  Some nodes do not support this operation yet.  Please try another ETH node.')\n    //   return\n    // }\n\n    if (window.useLitPostMessageProxy) {\n      // instead of asking the network for the key part, ask the parent frame\n      // the parentframe will then call unlockLit() with the encryption key\n      sendMessageToFrameParent({\n        command: \"getEncryptionKey\",\n        target: \"LitNodeClient\",\n        params: {\n          accessControlConditions: window.accessControlConditions,\n          toDecrypt: window.encryptedSymmetricKey,\n          authSig,\n          chain: window.chain,\n        },\n      });\n      return;\n    }\n\n    // get the encryption key\n    const symmetricKey = await window.litNodeClient.getEncryptionKey({\n      accessControlConditions: window.accessControlConditions,\n      toDecrypt: window.encryptedSymmetricKey,\n      authSig,\n      chain: window.chain,\n    });\n\n    if (!symmetricKey) {\n      return; // something went wrong, maybe user is unauthorized\n    }\n\n    await unlockLitWithKey({ symmetricKey });\n  } else {\n    mediaGridHolder.innerHTML = window.publicContent;\n    lockedHeader.innerText = \"LOCKED\";\n    window.locked = true;\n  }\n}\n\n/**\n * Manually unlock a LIT with a symmetric key.  You can obtain this key by calling \"checkAndSignAuthMessage\" to get an authSig, then calling \"LitNodeClient.getEncryptionKey\" to get the key.  If you want to see an example, check out the implementation of \"toggleLock\" which does all those operations and then calls this function at the end (unlockLitWithKey)\n * @param {Object} params\n * @param {Uint8Array} params.symmetricKey The decryption key obtained by calling \"LitNodeClient.getEncryptionKey\"\n * @returns {promise} A promise that will resolve when the LIT is unlocked\n */\nexport async function unlockLitWithKey({ symmetricKey }) {\n  const mediaGridHolder = document.getElementById(\"mediaGridHolder\");\n  const lockedHeader = document.getElementById(\"lockedHeader\");\n\n  // convert data url to blob\n  const encryptedZipBlob = await (\n    await fetch(window.encryptedZipDataUrl)\n  ).blob();\n  const decryptedFiles = await decryptZip(encryptedZipBlob, symmetricKey);\n  const mediaGridHtmlBody = await decryptedFiles[\"string.txt\"].async(\"text\");\n  mediaGridHolder.innerHTML = mediaGridHtmlBody;\n  lockedHeader.innerText = \"UNLOCKED\";\n  window.locked = false;\n}\n\n/**\n * Verify a JWT from the LIT network.  Use this for auth on your server.  For some background, users can define resources (URLs) for authorization via on-chain conditions using the saveSigningCondition function.  Other users can then request a signed JWT proving that their ETH account meets those on-chain conditions using the getSignedToken function.  Then, servers can verify that JWT using this function.  A successful verification proves that the user meets the on-chain conditions defined in the saveSigningCondition step.  For example, the on-chain condition could be posession of a specific NFT.\n * @param {Object} params\n * @param {string} params.jwt A JWT signed by the LIT network using the BLS12-381 algorithm\n * @returns {Object} An object with 4 keys: \"verified\": A boolean that represents whether or not the token verifies successfully.  A true result indicates that the token was successfully verified.  \"header\": the JWT header.  \"payload\": the JWT payload which includes the resource being authorized, etc.  \"signature\": A uint8array that represents the raw  signature of the JWT.\n */\nexport function verifyJwt({ jwt }) {\n  log(\"verifyJwt\", jwt);\n  // verify that the wasm was loaded\n  if (!globalThis.wasmExports) {\n    log(\"wasmExports is not loaded.\");\n    // initWasmBlsSdk().then((exports) => {\n    //   // log('wtf, window? ', typeof window !== 'undefined')\n    //   window.wasmExports = exports;\n    // });\n  }\n\n  const pubKey = uint8arrayFromString(NETWORK_PUB_KEY, \"base16\");\n  // log(\"pubkey is \", pubKey);\n  const jwtParts = jwt.split(\".\");\n  const sig = uint8arrayFromString(jwtParts[2], \"base64url\");\n  // log(\"sig is \", uint8arrayToString(sig, \"base16\"));\n  const unsignedJwt = `${jwtParts[0]}.${jwtParts[1]}`;\n  // log(\"unsignedJwt is \", unsignedJwt);\n  const message = uint8arrayFromString(unsignedJwt);\n  // log(\"message is \", message);\n\n  // TODO check for expiration\n\n  // p is public key uint8array\n  // s is signature uint8array\n  // m is message uint8array\n  // function is: function (p, s, m)\n\n  const verified = Boolean(wasmBlsSdkHelpers.verify(pubKey, sig, message));\n\n  return {\n    verified,\n    header: JSON.parse(\n      uint8arrayToString(uint8arrayFromString(jwtParts[0], \"base64url\"))\n    ),\n    payload: JSON.parse(\n      uint8arrayToString(uint8arrayFromString(jwtParts[1], \"base64url\"))\n    ),\n    signature: sig,\n  };\n}\n\n/**\n * Get all the metadata needed to decrypt something in the future.  If you're encrypting files with Lit and storing them in IPFS or Arweave, then this function will provide you with a properly formatted metadata object that you should save alongside the files.\n * @param {Object} params\n * @param {string} params.objectUrl The url to the object, like an IPFS or Arweave url.\n * @param {Array} params.accessControlConditions The array of access control conditions defined for the object\n * @param {string} params.chain The blockchain on which the access control conditions should be checked\n * @param {Uint8Array} params.encryptedSymmetricKey The encrypted symmetric key that was returned by the LitNodeClient.saveEncryptionKey function\n * @returns {Object} An object with 3 keys: \"verified\": A boolean that represents whether or not the token verifies successfully.  A true result indicates that the token was successfully verified.  \"header\": the JWT header.  \"payload\": the JWT payload which includes the resource being authorized, etc.\n */\nfunction metadataForFile({\n  name,\n  type,\n  size,\n  accessControlConditions,\n  evmContractConditions,\n  solRpcConditions,\n  unifiedAccessControlConditions,\n  chain,\n  encryptedSymmetricKey,\n}) {\n  return {\n    name,\n    type,\n    size,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n    encryptedSymmetricKey: uint8arrayToString(encryptedSymmetricKey, \"base16\"),\n  };\n}\n\nfunction humanizeComparator(comparator) {\n  if (comparator === \">\") {\n    return \"more than\";\n  } else if (comparator === \">=\") {\n    return \"at least\";\n  } else if (comparator === \"=\") {\n    return \"exactly\";\n  } else if (comparator === \"<\") {\n    return \"less than\";\n  } else if (comparator === \"<=\") {\n    return \"at most\";\n  } else if (comparator === \"contains\") {\n    return \"contains\";\n  }\n}\n\n/**\n * The human readable name for an access control condition\n * @param {Object} params\n * @param {Array} params.accessControlConditions The array of access control conditions that you want to humanize\n * @returns {Promise<string>} A promise containing a human readable description of the access control conditions\n */\nexport async function humanizeAccessControlConditions({\n  accessControlConditions,\n  evmContractConditions,\n  solRpcConditions,\n  unifiedAccessControlConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  if (accessControlConditions) {\n    return humanizeEvmBasicAccessControlConditions({\n      accessControlConditions,\n      tokenList,\n      myWalletAddress,\n    });\n  } else if (evmContractConditions) {\n    return humanizeEvmContractConditions({\n      evmContractConditions,\n      tokenList,\n      myWalletAddress,\n    });\n  } else if (solRpcConditions) {\n    return humanizeSolRpcConditions({\n      solRpcConditions,\n      tokenList,\n      myWalletAddress,\n    });\n  } else if (unifiedAccessControlConditions) {\n    return humanizeUnifiedAccessControlConditions({\n      unifiedAccessControlConditions,\n      tokenList,\n      myWalletAddress,\n    });\n  }\n}\n\nasync function humanizeUnifiedAccessControlConditions({\n  unifiedAccessControlConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  const promises = await Promise.all(\n    unifiedAccessControlConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeUnifiedAccessControlConditions({\n          unifiedAccessControlConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      if (acc.conditionType === \"evmBasic\") {\n        return humanizeEvmBasicAccessControlConditions({\n          accessControlConditions: [acc],\n          tokenList,\n          myWalletAddress,\n        });\n      } else if (acc.conditionType === \"evmContract\") {\n        return humanizeEvmContractConditions({\n          evmContractConditions: [acc],\n          tokenList,\n          myWalletAddress,\n        });\n      } else if (acc.conditionType === \"solRpc\") {\n        return humanizeSolRpcConditions({\n          solRpcConditions: [acc],\n          tokenList,\n          myWalletAddress,\n        });\n      } else if (acc.conditionType === \"cosmos\") {\n        return humanizeCosmosConditions({\n          cosmosConditions: [acc],\n          tokenList,\n          myWalletAddress,\n        });\n      } else {\n        throwError({\n          message: `Unrecognized condition type: ${acc.conditionType}`,\n          name: \"InvalidUnifiedConditionType\",\n          errorCode: \"invalid_unified_condition_type\",\n        });\n      }\n    })\n  );\n  return promises.join(\"\");\n}\n\nasync function humanizeEvmBasicAccessControlConditions({\n  accessControlConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  log(\"humanizing evm basic access control conditions\");\n  log(\"myWalletAddress\", myWalletAddress);\n  log(\"accessControlConditions\", accessControlConditions);\n  let fixedConditions = accessControlConditions;\n\n  // inject and operator if needed\n  // this is done because before we supported operators,\n  // we let users specify an entire array of conditions\n  // that would be \"AND\"ed together.  this injects those ANDs\n  if (accessControlConditions.length > 1) {\n    let containsOperator = false;\n    for (let i = 0; i < accessControlConditions.length; i++) {\n      if (accessControlConditions[i].operator) {\n        containsOperator = true;\n      }\n    }\n    if (!containsOperator) {\n      fixedConditions = [];\n\n      // insert ANDs between conditions\n      for (let i = 0; i < accessControlConditions.length; i++) {\n        fixedConditions.push(accessControlConditions[i]);\n        if (i < accessControlConditions.length - 1) {\n          fixedConditions.push({\n            operator: \"and\",\n          });\n        }\n      }\n    }\n  }\n\n  const promises = await Promise.all(\n    fixedConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeEvmBasicAccessControlConditions({\n          accessControlConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      if (\n        acc.standardContractType === \"timestamp\" &&\n        acc.method === \"eth_getBlockByNumber\"\n      ) {\n        return `Latest mined block must be past the unix timestamp ${acc.returnValueTest.value}`;\n      } else if (\n        acc.standardContractType === \"MolochDAOv2.1\" &&\n        acc.method === \"members\"\n      ) {\n        // molochDAOv2.1 membership\n        return `Is a member of the DAO at ${acc.contractAddress}`;\n      } else if (\n        acc.standardContractType === \"ERC1155\" &&\n        acc.method === \"balanceOf\"\n      ) {\n        // erc1155 owns an amount of specific tokens\n        return `Owns ${humanizeComparator(acc.returnValueTest.comparator)} ${\n          acc.returnValueTest.value\n        } of ${acc.contractAddress} tokens with token id ${acc.parameters[1]}`;\n      } else if (\n        acc.standardContractType === \"ERC1155\" &&\n        acc.method === \"balanceOfBatch\"\n      ) {\n        // erc1155 owns an amount of specific tokens from a batch of token ids\n        return `Owns ${humanizeComparator(acc.returnValueTest.comparator)} ${\n          acc.returnValueTest.value\n        } of ${acc.contractAddress} tokens with token id ${acc.parameters[1]\n          .split(\",\")\n          .join(\" or \")}`;\n      } else if (\n        acc.standardContractType === \"ERC721\" &&\n        acc.method === \"ownerOf\"\n      ) {\n        // specific erc721\n        return `Owner of tokenId ${acc.parameters[0]} from ${acc.contractAddress}`;\n      } else if (\n        acc.standardContractType === \"ERC721\" &&\n        acc.method === \"balanceOf\" &&\n        acc.contractAddress === \"0x22C1f6050E56d2876009903609a2cC3fEf83B415\" &&\n        acc.returnValueTest.comparator === \">\" &&\n        acc.returnValueTest.value === \"0\"\n      ) {\n        // for POAP main contract where the user owns at least 1 poap\n        return `Owns any POAP`;\n      } else if (\n        acc.standardContractType === \"POAP\" &&\n        acc.method === \"tokenURI\"\n      ) {\n        // owns a POAP\n        return `Owner of a ${acc.returnValueTest.value} POAP on ${acc.chain}`;\n      } else if (\n        acc.standardContractType === \"POAP\" &&\n        acc.method === \"eventId\"\n      ) {\n        // owns a POAP\n        return `Owner of a POAP from event ID ${acc.returnValueTest.value} on ${acc.chain}`;\n      } else if (\n        acc.standardContractType === \"ERC721\" &&\n        acc.method === \"balanceOf\"\n      ) {\n        // any erc721 in collection\n        return `Owns ${humanizeComparator(acc.returnValueTest.comparator)} ${\n          acc.returnValueTest.value\n        } of ${acc.contractAddress} tokens`;\n      } else if (\n        acc.standardContractType === \"ERC20\" &&\n        acc.method === \"balanceOf\"\n      ) {\n        let tokenFromList;\n        if (tokenList) {\n          tokenFromList = tokenList.find(\n            (t) => t.address === acc.contractAddress\n          );\n        }\n        let decimals, name;\n        if (tokenFromList) {\n          decimals = tokenFromList.decimals;\n          name = tokenFromList.symbol;\n        } else {\n          decimals = await decimalPlaces({\n            contractAddress: acc.contractAddress,\n            chain: acc.chain,\n          });\n        }\n        log(\"decimals\", decimals);\n        return `Owns ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${formatUnits(acc.returnValueTest.value, decimals)} of ${\n          name || acc.contractAddress\n        } tokens`;\n      } else if (\n        acc.standardContractType === \"\" &&\n        acc.method === \"eth_getBalance\"\n      ) {\n        return `Owns ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${formatEther(acc.returnValueTest.value)} ETH`;\n      } else if (acc.standardContractType === \"\" && acc.method === \"\") {\n        if (\n          myWalletAddress &&\n          acc.returnValueTest.value.toLowerCase() ===\n            myWalletAddress.toLowerCase()\n        ) {\n          return `Controls your wallet (${myWalletAddress})`;\n        } else {\n          return `Controls wallet with address ${acc.returnValueTest.value}`;\n        }\n      }\n    })\n  );\n  return promises.join(\"\");\n}\n\nasync function humanizeSolRpcConditions({\n  solRpcConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  log(\"humanizing sol rpc conditions\");\n  log(\"myWalletAddress\", myWalletAddress);\n  log(\"solRpcConditions\", solRpcConditions);\n\n  const promises = await Promise.all(\n    solRpcConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeSolRpcConditions({\n          solRpcConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      if (acc.method === \"getBalance\") {\n        return `Owns ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${formatSol(acc.returnValueTest.value)} SOL`;\n      } else if (acc.method === \"\") {\n        if (\n          myWalletAddress &&\n          acc.returnValueTest.value.toLowerCase() ===\n            myWalletAddress.toLowerCase()\n        ) {\n          return `Controls your wallet (${myWalletAddress})`;\n        } else {\n          return `Controls wallet with address ${acc.returnValueTest.value}`;\n        }\n      } else {\n        let msg = `Solana RPC method ${acc.method}(${acc.params.join(\n          \", \"\n        )}) should have a result of ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${acc.returnValueTest.value}`;\n        if (acc.returnValueTest.key !== \"\") {\n          msg += ` for key ${acc.returnValueTest.key}`;\n        }\n        return msg;\n      }\n    })\n  );\n  return promises.join(\"\");\n}\n\nasync function humanizeEvmContractConditions({\n  evmContractConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  log(\"humanizing evm contract conditions\");\n  log(\"myWalletAddress\", myWalletAddress);\n  log(\"evmContractConditions\", evmContractConditions);\n\n  const promises = await Promise.all(\n    evmContractConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeEvmContractConditions({\n          evmContractConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      let msg = `${acc.functionName}(${acc.functionParams.join(\n        \", \"\n      )}) on contract address ${\n        acc.contractAddress\n      } should have a result of ${humanizeComparator(\n        acc.returnValueTest.comparator\n      )} ${acc.returnValueTest.value}`;\n      if (acc.returnValueTest.key !== \"\") {\n        msg += ` for key ${acc.returnValueTest.key}`;\n      }\n      return msg;\n    })\n  );\n  return promises.join(\"\");\n}\n\nasync function humanizeCosmosConditions({\n  cosmosConditions,\n  tokenList,\n  myWalletAddress,\n}) {\n  log(\"humanizing cosmos conditions\");\n  log(\"myWalletAddress\", myWalletAddress);\n  log(\"cosmosConditions\", cosmosConditions);\n\n  const promises = await Promise.all(\n    cosmosConditions.map(async (acc) => {\n      if (Array.isArray(acc)) {\n        // this is a group.  recurse.\n        const group = await humanizeCosmosConditions({\n          accessControlConditions: acc,\n          tokenList,\n          myWalletAddress,\n        });\n        return `( ${group} )`;\n      }\n\n      if (acc.operator) {\n        if (acc.operator.toLowerCase() === \"and\") {\n          return \" and \";\n        } else if (acc.operator.toLowerCase() === \"or\") {\n          return \" or \";\n        }\n      }\n\n      if (acc.path === \"/cosmos/bank/v1beta1/balances/:userAddress\") {\n        return `Owns ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${formatAtom(acc.returnValueTest.value)} ATOM`;\n      } else if (acc.path === \":userAddress\") {\n        if (\n          myWalletAddress &&\n          acc.returnValueTest.value.toLowerCase() ===\n            myWalletAddress.toLowerCase()\n        ) {\n          return `Controls your wallet (${myWalletAddress})`;\n        } else {\n          return `Controls wallet with address ${acc.returnValueTest.value}`;\n        }\n      } else if (\n        acc.chain === \"kyve\" &&\n        acc.path === \"/kyve/registry/v1beta1/funders_list/0\"\n      ) {\n        return `Is a current KYVE funder`;\n      } else {\n        let msg = `Cosmos RPC request for ${\n          acc.path\n        } should have a result of ${humanizeComparator(\n          acc.returnValueTest.comparator\n        )} ${acc.returnValueTest.value}`;\n        if (acc.returnValueTest.key !== \"\") {\n          msg += ` for key ${acc.returnValueTest.key}`;\n        }\n        return msg;\n      }\n    })\n  );\n  return promises.join(\"\");\n}\n\nfunction formatSol(amount) {\n  return formatUnits(amount, 9);\n}\n\nfunction formatAtom(amount) {\n  return formatUnits(amount, 6);\n}\n\nexport async function getTokenList() {\n  // erc20\n  const erc20Url = \"https://tokens.coingecko.com/uniswap/all.json\";\n  const erc20Promise = fetch(erc20Url).then((r) => r.json());\n\n  // erc721\n  const erc721Url =\n    \"https://raw.githubusercontent.com/0xsequence/token-directory/main/index/mainnet/erc721.json\";\n  const erc721Promise = fetch(erc721Url).then((r) => r.json());\n\n  const [erc20s, erc721s] = await Promise.all([erc20Promise, erc721Promise]);\n  const sorted = [...erc20s.tokens, ...erc721s.tokens].sort((a, b) =>\n    a.name > b.name ? 1 : -1\n  );\n  return sorted;\n}\n\nexport const sendMessageToFrameParent = (data) => {\n  window.parent.postMessage(data, \"*\");\n};\n","import {\n  fromString as uint8arrayFromString,\n  toString as uint8arrayToString,\n} from \"uint8arrays\";\nimport naclUtil from \"tweetnacl-util\";\n\nimport { version } from \"../version\";\n\nimport { mostCommonString, throwError, log } from \"../lib/utils\";\nimport { wasmBlsSdkHelpers } from \"../lib/bls-sdk\";\nimport {\n  hashAccessControlConditions,\n  hashEVMContractConditions,\n  hashSolRpcConditions,\n  hashResourceId,\n  hashUnifiedAccessControlConditions,\n  canonicalAccessControlConditionFormatter,\n  canonicalEVMContractConditionFormatter,\n  canonicalSolRpcConditionFormatter,\n  canonicalResourceIdFormatter,\n  canonicalUnifiedAccessControlConditionFormatter,\n} from \"./crypto\";\n\n/**\n * @typedef {Object} AccessControlCondition\n * @property {string} contractAddress - The address of the contract that will be queried\n * @property {string} chain - The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n * @property {string} standardContractType - If the contract is an ERC20, ERC721, or ERC1155, please put that here\n * @property {string} method - The smart contract function to call\n * @property {Array} parameters - The parameters to use when calling the smart contract.  You can use the special \":userAddress\" parameter which will be replaced with the requesting user's wallet address, verified via message signature\n * @property {Object} returnValueTest - An object containing two keys: \"comparator\" and \"value\".  The return value of the smart contract function will be compared against these.  For example, to check if someone holds an NFT, you could use \"comparator: >\" and \"value: 0\" which would check that a user has a token balance greater than zero.\n */\n\n/**\n * @typedef {Object} EVMContractCondition\n * @property {string} contractAddress - The address of the contract that will be queried\n * @property {string} chain - The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n * @property {string} functionName - The smart contract function to call\n * @property {Array} functionParams - The parameters to use when calling the smart contract.  You can use the special \":userAddress\" parameter which will be replaced with the requesting user's wallet address, verified via message signature\n * @property {Object} functionAbi - The ABI of the smart contract function to call.  This is used to encode the function parameters and decode the return value of the function.  Do not pass the entire contract ABI here.  Instead, find the function you want to call in the contract ABI and pass that function's ABI here.\n * @property {Object} returnValueTest - An object containing three keys: \"key\", \"comparator\" and \"value\".  The return value of the smart contract function will be compared against these.  For example, to check if someone holds an NFT, you could use \"key\": \"\", \"comparator: >\" and \"value: 0\" which would check that a user has a token balance greater than zero.  The \"key\" is used when the return value is a struct which contains multiple values and should be the name of the returned value from the function abi.  You must always pass \"key\" when using \"returnValueTest\", even if you pass an empty string for it, because the function only returns a single value.\n */\n\n/**\n * @typedef {Object} SolRpcCondition\n * @property {string} method - The Solana RPC method to be called.  You can find a list here: https://docs.solana.com/developing/clients/jsonrpc-api\n * @property {Array} params - The parameters to use when making the RPC call.  You can use the special \":userAddress\" parameter which will be replaced with the requesting user's wallet address, verified via message signature\n * @property {string} chain - The chain name of the chain that this contract is deployed on.  See ALL_LIT_CHAINS for currently supported chains.  On Solana, we support \"solana\" for mainnet, \"solanaDevnet\" for devnet and \"solanaTestnet\" for testnet.\n * @property {Object} returnValueTest - An object containing three keys: \"key\", \"comparator\" and \"value\".  The return value of the rpc call will be compared against these.  The \"key\" selector supports JSONPath syntax, so you can filter and iterate over the results.  For example, to check if someone holds an NFT with address 29G6GSKNGP8K6ATy65QrNZk4rNgsZX1sttvb5iLXWDcE, you could use \"method\": \"GetTokenAccountsByOwner\", \"params\": [\":userAddress\",{\"programId\":\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\"},{\"encoding\":\"jsonParsed\"}], \"key\": \"$[?(@.account.data.parsed.info.mint == \"29G6GSKNGP8K6ATy65QrNZk4rNgsZX1sttvb5iLXWDcE\")].account.data.parsed.info.tokenAmount.amount\", \"comparator: >\" and \"value: 0\" which would check that a user has a token balance greater than zero.  The \"key\" is used when the return value is an array or object which contains multiple values and should be the name of the returned value or a JSONPath item.  You must always pass \"key\" when using \"returnValueTest\", even if you pass an empty string for it, because the rpc call only returns a single value.\n */\n\n/**\n * @typedef {Object} CosmosCondition\n * @property {string} path - The RPC URL path that will be called.  This will typically contain any parameters you need for the call.  Note that you can use the special \":userAddress\" parameter which will be replaced with the requesting user's wallet address, verified via message signature.  For example, this path would be used to get the requesting user's balance: \"/cosmos/bank/v1beta1/balances/:userAddress\"\n * @property {string} chain - The chain name of the chain that this contract is deployed on.  See ALL_LIT_CHAINS for currently supported chains.  On Cosmos we currently support \"cosmos\" and \"kyve\"\n * @property {Object} returnValueTest - An object containing three keys: \"key\", \"comparator\" and \"value\".  The return value of the rpc call will be compared against these.  The \"key\" selector supports JSONPath syntax, so you can filter and iterate over the results.  For example, to check the balance of someone's account, you can use the key \"$.balances[0].amount\" which will pull out balances[0].amount from the JSON response and compare it against the \"value\" field according to the \"comparator\".  The \"key\" is used when the return value is an array or object which contains multiple values and should be the name of the returned value or a JSONPath item.  You must always pass \"key\" when using \"returnValueTest\", even if you pass an empty string for it, because the rpc call only returns a single value.\n */\n\n/**\n * @typedef {Object} ResourceId\n * @property {string} baseUrl - The base url of the resource that will be authorized\n * @property {string} path - The path of the url of the resource that will be authorized\n * @property {string} orgId - The org id that the user would be authorized to belong to.  The orgId key must be present but it may contain an empty string if you don't need to store anything in it.\n * @property {string} role - The role that the user would be authorized to have.  The role key must be present but it may contain an empty string if you don't need to store anything in it.\n * @property {string} extraData - Any extra data you may want to store.  You may store stringified JSON in here, for example.  The extraData key must be present but it may contain an empty string if you don't need to store anything in it.\n */\n\n/**\n * @typedef {Object} CallRequest\n * @property {string} to - The address of the contract that will be queried\n * @property {string} from - Optional.  The address calling the function.\n * @property {string} data - Hex encoded data to send to the contract.\n */\n\n/**\n * A LIT node client.  Connects directly to the LIT nodes to store and retrieve encryption keys and signing requests.  Only holders of an NFT that corresponds with a LIT may store and retrieve the keys.\n * @param {Object} config\n * @param {boolean} [config.alertWhenUnauthorized=true] Whether or not to show a JS alert() when a user tries to unlock a LIT but is unauthorized.  An exception will also be thrown regardless of this option.\n * @param {number} [config.minNodeCount=6] The minimum number of nodes that must be connected for the LitNodeClient to be ready to use.\n * @param {boolean} [config.debug=true] Whether or not to show debug messages.\n */\nexport default class LitNodeClient {\n  constructor(config) {\n    this.config = {\n      alertWhenUnauthorized: true,\n      minNodeCount: 6,\n      debug: true,\n      bootstrapUrls: [\n        \"https://node2.litgateway.com:7370\",\n        \"https://node2.litgateway.com:7371\",\n        \"https://node2.litgateway.com:7372\",\n        \"https://node2.litgateway.com:7373\",\n        \"https://node2.litgateway.com:7374\",\n        \"https://node2.litgateway.com:7375\",\n        \"https://node2.litgateway.com:7376\",\n        \"https://node2.litgateway.com:7377\",\n        \"https://node2.litgateway.com:7378\",\n        \"https://node2.litgateway.com:7379\",\n      ],\n    };\n    if (config) {\n      this.config = { ...this.config, ...config };\n    }\n\n    this.connectedNodes = new Set();\n    this.serverKeys = {};\n    this.ready = false;\n    this.subnetPubKey = null;\n    this.networkPubKey = null;\n    this.networkPubKeySet = null;\n\n    try {\n      if (typeof window !== \"undefined\" && window && window.localStorage) {\n        let configOverride = window.localStorage.getItem(\"LitNodeClientConfig\");\n        if (configOverride) {\n          configOverride = JSON.parse(configOverride);\n          this.config = { ...this.config, ...configOverride };\n        }\n      }\n    } catch (e) {\n      console.log(\"Error accessing local storage\", e);\n    }\n\n    globalThis.litConfig = this.config;\n  }\n\n  /**\n   * Request a signed JWT of any solidity function call from the LIT network.  There are no prerequisites for this function.  You should use this function if you need to transmit information across chains, or from a blockchain to a centralized DB or server.  The signature of the returned JWT verifies that the response is genuine.\n   * @param {Object} params\n   * @param {Array.<CallRequest>} params.callRequests The call requests to make.  The responses will be signed and returned.\n   * @param {string} params.chain The chain name of the chain that this contract is deployed on.  See LIT_CHAINS for currently supported chains.\n   * @returns {Object} A signed JWT that proves the response to the function call is genuine. You may present this to a smart contract, or a server for authorization, and it can be verified using the verifyJwt function.\n   */\n  async getSignedChainDataToken({ callRequests, chain }) {\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // we need to send jwt params iat (issued at) and exp (expiration)\n    // because the nodes may have different wall clock times\n    // the nodes will verify that these params are withing a grace period\n    const now = Date.now();\n    const iat = Math.floor(now / 1000);\n    const exp = iat + 12 * 60 * 60; // 12 hours in seconds\n\n    // ask each node to sign the content\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.getChainDataSigningShare({\n          url,\n          callRequests,\n          chain,\n          iat,\n          exp,\n        })\n      );\n    }\n    const signatureShares = await Promise.all(nodePromises);\n    log(\"signatureShares\", signatureShares);\n    const goodShares = signatureShares.filter((d) => d.signatureShare !== \"\");\n    if (goodShares.length < this.config.minNodeCount) {\n      log(\n        `majority of shares are bad. goodShares is ${JSON.stringify(\n          goodShares\n        )}`\n      );\n      if (this.config.alertWhenUnauthorized) {\n        alert(\n          \"You are not authorized to receive a signature to grant access to this content\"\n        );\n      }\n\n      throwError({\n        message: `You are not authorized to recieve a signature on this item`,\n        name: \"UnauthorizedException\",\n        errorCode: \"not_authorized\",\n      });\n    }\n\n    // sanity check\n    if (\n      !signatureShares.every(\n        (val, i, arr) => val.unsignedJwt === arr[0].unsignedJwt\n      )\n    ) {\n      const msg =\n        \"Unsigned JWT is not the same from all the nodes.  This means the combined signature will be bad because the nodes signed the wrong things\";\n      log(msg);\n      alert(msg);\n    }\n\n    // sort the sig shares by share index.  this is important when combining the shares.\n    signatureShares.sort((a, b) => a.shareIndex - b.shareIndex);\n\n    // combine the signature shares\n\n    const pkSetAsBytes = uint8arrayFromString(this.networkPubKeySet, \"base16\");\n    log(\"pkSetAsBytes\", pkSetAsBytes);\n\n    const sigShares = signatureShares.map((s) => ({\n      shareHex: s.signatureShare,\n      shareIndex: s.shareIndex,\n    }));\n    const signature = wasmBlsSdkHelpers.combine_signatures(\n      pkSetAsBytes,\n      sigShares\n    );\n    log(\"raw sig\", signature);\n    log(\"signature is \", uint8arrayToString(signature, \"base16\"));\n\n    const unsignedJwt = mostCommonString(\n      signatureShares.map((s) => s.unsignedJwt)\n    );\n\n    // convert the sig to base64 and append to the jwt\n    const finalJwt = `${unsignedJwt}.${uint8arrayToString(\n      signature,\n      \"base64url\"\n    )}`;\n\n    return finalJwt;\n  }\n\n  /**\n   * Request a signed JWT from the LIT network.  Before calling this function, you must either create or know of a resource id and access control conditions for the item you wish to gain authorization for.  You can create an access control condition using the saveSigningCondition function.\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n   * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address that meets the access control conditions.\n   * @param {ResourceId} params.resourceId The resourceId representing something on the web via a URL\n   * @returns {Object} A signed JWT that proves you meet the access control conditions for the given resource id.  You may present this to a server for authorization, and the server can verify it using the verifyJwt function.\n   */\n  async getSignedToken({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n    authSig,\n    resourceId,\n  }) {\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // we need to send jwt params iat (issued at) and exp (expiration)\n    // because the nodes may have different wall clock times\n    // the nodes will verify that these params are withing a grace period\n    const now = Date.now();\n    const iat = Math.floor(now / 1000);\n    const exp = iat + 12 * 60 * 60; // 12 hours in seconds\n\n    let formattedAccessControlConditions;\n    let formattedEVMContractConditions;\n    let formattedSolRpcConditions;\n    let formattedUnifiedAccessControlConditions;\n    if (accessControlConditions) {\n      formattedAccessControlConditions = accessControlConditions.map((c) =>\n        canonicalAccessControlConditionFormatter(c)\n      );\n      log(\n        \"formattedAccessControlConditions\",\n        JSON.stringify(formattedAccessControlConditions)\n      );\n    } else if (evmContractConditions) {\n      formattedEVMContractConditions = evmContractConditions.map((c) =>\n        canonicalEVMContractConditionFormatter(c)\n      );\n      log(\n        \"formattedEVMContractConditions\",\n        JSON.stringify(formattedEVMContractConditions)\n      );\n    } else if (solRpcConditions) {\n      formattedSolRpcConditions = solRpcConditions.map((c) =>\n        canonicalSolRpcConditionFormatter(c)\n      );\n      log(\n        \"formattedSolRpcConditions\",\n        JSON.stringify(formattedSolRpcConditions)\n      );\n    } else if (unifiedAccessControlConditions) {\n      formattedUnifiedAccessControlConditions =\n        unifiedAccessControlConditions.map((c) =>\n          canonicalUnifiedAccessControlConditionFormatter(c)\n        );\n      log(\n        \"formattedUnifiedAccessControlConditions\",\n        JSON.stringify(formattedUnifiedAccessControlConditions)\n      );\n    } else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    const formattedResourceId = canonicalResourceIdFormatter(resourceId);\n\n    // ask each node to sign the content\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.getSigningShare({\n          url,\n          accessControlConditions: formattedAccessControlConditions,\n          evmContractConditions: formattedEVMContractConditions,\n          solRpcConditions: formattedSolRpcConditions,\n          unifiedAccessControlConditions:\n            formattedUnifiedAccessControlConditions,\n          resourceId: formattedResourceId,\n          authSig,\n          chain,\n          iat,\n          exp,\n        })\n      );\n    }\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n    const signatureShares = res.values;\n    log(\"signatureShares\", signatureShares);\n\n    // sanity check\n    if (\n      !signatureShares.every(\n        (val, i, arr) => val.unsignedJwt === arr[0].unsignedJwt\n      )\n    ) {\n      const msg =\n        \"Unsigned JWT is not the same from all the nodes.  This means the combined signature will be bad because the nodes signed the wrong things\";\n      log(msg);\n      alert(msg);\n    }\n\n    // sort the sig shares by share index.  this is important when combining the shares.\n    signatureShares.sort((a, b) => a.shareIndex - b.shareIndex);\n\n    // combine the signature shares\n\n    const pkSetAsBytes = uint8arrayFromString(this.networkPubKeySet, \"base16\");\n    log(\"pkSetAsBytes\", pkSetAsBytes);\n\n    const sigShares = signatureShares.map((s) => ({\n      shareHex: s.signatureShare,\n      shareIndex: s.shareIndex,\n    }));\n    const signature = wasmBlsSdkHelpers.combine_signatures(\n      pkSetAsBytes,\n      sigShares\n    );\n    log(\"raw sig\", signature);\n    log(\"signature is \", uint8arrayToString(signature, \"base16\"));\n\n    const unsignedJwt = mostCommonString(\n      signatureShares.map((s) => s.unsignedJwt)\n    );\n\n    // convert the sig to base64 and append to the jwt\n    const finalJwt = `${unsignedJwt}.${uint8arrayToString(\n      signature,\n      \"base64url\"\n    )}`;\n\n    return finalJwt;\n  }\n\n  /**\n   * Associated access control conditions with a resource on the web.  After calling this function, users may use the getSignedToken function to request a signed JWT from the LIT network.  This JWT proves that the user meets the access control conditions, and is authorized to access the resource you specified in the resourceId parameter of the saveSigningCondition function.\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n   * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address that meets the access control conditions\n   * @param {ResourceId} params.resourceId The resourceId representing something on the web via a URL\n   * @param {boolean} params.permanent Whether or not the access control condition should be saved permanently.  If false, the access control conditions will be updateable by the creator.  If you don't pass this param, it's set to true by default.\n   * @returns {boolean} Success\n   */\n  async saveSigningCondition({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n    authSig,\n    resourceId,\n    permanant,\n    permanent = true,\n  }) {\n    log(\"saveSigningCondition\");\n\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // this is to fix my spelling mistake that we must now maintain forever lol\n    if (typeof permanant !== \"undefined\") {\n      permanent = permanant;\n    }\n\n    // hash the resource id\n    const hashOfResourceId = await hashResourceId(resourceId);\n    const hashOfResourceIdStr = uint8arrayToString(\n      new Uint8Array(hashOfResourceId),\n      \"base16\"\n    );\n\n    let hashOfConditions;\n    // hash the access control conditions\n    if (accessControlConditions) {\n      hashOfConditions = await hashAccessControlConditions(\n        accessControlConditions\n      );\n    } else if (evmContractConditions) {\n      hashOfConditions = await hashEVMContractConditions(evmContractConditions);\n    } else if (solRpcConditions) {\n      hashOfConditions = await hashSolRpcConditions(solRpcConditions);\n    } else if (unifiedAccessControlConditions) {\n      hashOfConditions = await hashUnifiedAccessControlConditions(\n        unifiedAccessControlConditions\n      );\n    } else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    const hashOfConditionsStr = uint8arrayToString(\n      new Uint8Array(hashOfConditions),\n      \"base16\"\n    );\n    // create access control conditions on lit nodes\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.storeSigningConditionWithNode({\n          url,\n          key: hashOfResourceIdStr,\n          val: hashOfConditionsStr,\n          authSig,\n          chain,\n          permanent: permanent ? 1 : 0,\n        })\n      );\n    }\n\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n\n    return true;\n  }\n\n  /**\n   * Retrieve the symmetric encryption key from the LIT nodes.  Note that this will only work if the current user meets the access control conditions specified when the data was encrypted.  That access control condition is typically that the user is a holder of the NFT that corresponds to this encrypted data.  This NFT token address and ID was specified when this LIT was created.\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n   * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {string} params.toDecrypt The ciphertext that you wish to decrypt encoded as a hex string\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address meets the access control conditions.\n   * @returns {Uint8Array} The symmetric encryption key that can be used to decrypt the locked content inside the LIT.  You should pass this key to the decryptZip function.\n   */\n  async getEncryptionKey({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    toDecrypt,\n    chain,\n    authSig,\n  }) {\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    let formattedAccessControlConditions;\n    let formattedEVMContractConditions;\n    let formattedSolRpcConditions;\n    let formattedUnifiedAccessControlConditions;\n    if (accessControlConditions) {\n      formattedAccessControlConditions = accessControlConditions.map((c) =>\n        canonicalAccessControlConditionFormatter(c)\n      );\n      log(\n        \"formattedAccessControlConditions: \",\n        JSON.stringify(formattedAccessControlConditions)\n      );\n    } else if (evmContractConditions) {\n      formattedEVMContractConditions = evmContractConditions.map((c) =>\n        canonicalEVMContractConditionFormatter(c)\n      );\n      log(\n        \"formattedEVMContractConditions\",\n        JSON.stringify(formattedEVMContractConditions)\n      );\n    } else if (solRpcConditions) {\n      formattedSolRpcConditions = solRpcConditions.map((c) =>\n        canonicalSolRpcConditionFormatter(c)\n      );\n      log(\n        \"formattedSolRpcConditions\",\n        JSON.stringify(formattedSolRpcConditions)\n      );\n    } else if (unifiedAccessControlConditions) {\n      formattedUnifiedAccessControlConditions =\n        unifiedAccessControlConditions.map((c) =>\n          canonicalUnifiedAccessControlConditionFormatter(c)\n        );\n      log(\n        \"formattedUnifiedAccessControlConditions\",\n        JSON.stringify(formattedUnifiedAccessControlConditions)\n      );\n    } else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    // ask each node to decrypt the content\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.getDecryptionShare({\n          url,\n          accessControlConditions: formattedAccessControlConditions,\n          evmContractConditions: formattedEVMContractConditions,\n          solRpcConditions: formattedSolRpcConditions,\n          unifiedAccessControlConditions:\n            formattedUnifiedAccessControlConditions,\n          toDecrypt,\n          authSig,\n          chain,\n        })\n      );\n    }\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n    const decryptionShares = res.values;\n    log(\"decryptionShares\", decryptionShares);\n\n    // sort the decryption shares by share index.  this is important when combining the shares.\n    decryptionShares.sort((a, b) => a.shareIndex - b.shareIndex);\n\n    // combine the decryption shares\n\n    // set decryption shares bytes in wasm\n    decryptionShares.forEach((s, idx) => {\n      wasmExports.set_share_indexes(idx, s.shareIndex);\n      const shareAsBytes = uint8arrayFromString(s.decryptionShare, \"base16\");\n      for (let i = 0; i < shareAsBytes.length; i++) {\n        wasmExports.set_decryption_shares_byte(i, idx, shareAsBytes[i]);\n      }\n    });\n\n    // set the public key set bytes in wasm\n    const pkSetAsBytes = uint8arrayFromString(this.networkPubKeySet, \"base16\");\n    wasmBlsSdkHelpers.set_mc_bytes(pkSetAsBytes);\n\n    // set the ciphertext bytes\n    const ciphertextAsBytes = uint8arrayFromString(toDecrypt, \"base16\");\n    for (let i = 0; i < ciphertextAsBytes.length; i++) {\n      wasmExports.set_ct_byte(i, ciphertextAsBytes[i]);\n    }\n\n    const decrypted = wasmBlsSdkHelpers.combine_decryption_shares(\n      decryptionShares.length,\n      pkSetAsBytes.length,\n      ciphertextAsBytes.length\n    );\n    // log('decrypted is ', uint8arrayToString(decrypted, 'base16'))\n\n    return decrypted;\n  }\n\n  /**\n   * Securely save the association between access control conditions and something that you wish to decrypt\n   * @param {Object} params\n   * @param {Array.<AccessControlCondition>} params.accessControlConditions The access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<EVMContractCondition>} params.evmContractConditions  EVM Smart Contract access control conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.  This is different than accessControlConditions because accessControlConditions only supports a limited number of contract calls.  evmContractConditions supports any contract call.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {Array.<SolRpcCondition>} params.solRpcConditions  Solana RPC call conditions that the user must meet to obtain this signed token.  This could be posession of an NFT, for example.\n   * @param {Array.<AccessControlCondition|EVMContractCondition|SolRpcCondition>} params.unifiedAccessControlConditions  An array of unified access control conditions.  You may use AccessControlCondition, EVMContractCondition, or SolRpcCondition objects in this array, but make sure you add a conditionType for each one.  You must pass either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions.\n   * @param {string} params.chain The chain name of the chain that you are querying.  See ALL_LIT_CHAINS for currently supported chains.\n   * @param {AuthSig} params.authSig The authentication signature that proves that the user owns the crypto wallet address meets the access control conditions\n   * @param {string} params.symmetricKey The symmetric encryption key that was used to encrypt the locked content inside the LIT as a Uint8Array.  You should use zipAndEncryptString or zipAndEncryptFiles to get this encryption key.  This key will be hashed and the hash will be sent to the LIT nodes.  You must pass either symmetricKey or encryptedSymmetricKey.\n   * @param {Uint8Array} params.encryptedSymmetricKey The encrypted symmetric key of the item you with to update.  You must pass either symmetricKey or encryptedSymmetricKey.\n   * @param {boolean} params.permanent Whether or not the access control condition should be saved permanently.  If false, the access control conditions will be updateable by the creator.  If you don't pass this param, it's set to true by default.\n   * @returns {Uint8Array} The symmetricKey parameter that has been encrypted with the network public key.  Save this - you will neeed it to decrypt the content in the future.\n   */\n  async saveEncryptionKey({\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    chain,\n    authSig,\n    symmetricKey,\n    encryptedSymmetricKey,\n    permanant,\n    permanent = true,\n  }) {\n    log(\"LitNodeClient.saveEncryptionKey\");\n\n    if (!this.ready) {\n      throwError({\n        message:\n          \"LitNodeClient is not ready.  Please call await litNodeClient.connect() first.\",\n        name: \"LitNodeClientNotReadyError\",\n        errorCode: \"lit_node_client_not_ready\",\n      });\n    }\n\n    // to fix spelling mistake\n    if (typeof permanant !== \"undefined\") {\n      permanent = permanant;\n    }\n\n    if (\n      (!symmetricKey || symmetricKey == \"\") &&\n      (!encryptedSymmetricKey || encryptedSymmetricKey == \"\")\n    ) {\n      throw new Error(\n        \"symmetricKey and encryptedSymmetricKey are blank.  You must pass one or the other\"\n      );\n    }\n\n    if (\n      (!accessControlConditions || accessControlConditions.length == 0) &&\n      (!evmContractConditions || evmContractConditions.length == 0) &&\n      (!solRpcConditions || solRpcConditions.length == 0) &&\n      (!unifiedAccessControlConditions ||\n        unifiedAccessControlConditions.length == 0)\n    ) {\n      throw new Error(\n        \"accessControlConditions and evmContractConditions and solRpcConditions and unifiedAccessControlConditions are blank\"\n      );\n    }\n    if (!authSig) {\n      throw new Error(\"authSig is blank\");\n    }\n\n    // encrypt with network pubkey\n    let encryptedKey;\n    if (encryptedSymmetricKey) {\n      encryptedKey = encryptedSymmetricKey;\n    } else {\n      encryptedKey = wasmBlsSdkHelpers.encrypt(\n        uint8arrayFromString(this.subnetPubKey, \"base16\"),\n        symmetricKey\n      );\n      log(\n        \"symmetric key encrypted with LIT network key: \",\n        uint8arrayToString(encryptedKey, \"base16\")\n      );\n    }\n    // hash the encrypted pubkey\n    const hashOfKey = await crypto.subtle.digest(\"SHA-256\", encryptedKey);\n    const hashOfKeyStr = uint8arrayToString(\n      new Uint8Array(hashOfKey),\n      \"base16\"\n    );\n\n    // hash the access control conditions\n    let hashOfConditions;\n    // hash the access control conditions\n    if (accessControlConditions) {\n      hashOfConditions = await hashAccessControlConditions(\n        accessControlConditions\n      );\n    } else if (evmContractConditions) {\n      hashOfConditions = await hashEVMContractConditions(evmContractConditions);\n    } else if (solRpcConditions) {\n      hashOfConditions = await hashSolRpcConditions(solRpcConditions);\n    } else if (unifiedAccessControlConditions) {\n      hashOfConditions = await hashUnifiedAccessControlConditions(\n        unifiedAccessControlConditions\n      );\n    } else {\n      throwError({\n        message: `You must provide either accessControlConditions or evmContractConditions or solRpcConditions or unifiedAccessControlConditions`,\n        name: \"InvalidArgumentException\",\n        errorCode: \"invalid_argument\",\n      });\n    }\n\n    const hashOfConditionsStr = uint8arrayToString(\n      new Uint8Array(hashOfConditions),\n      \"base16\"\n    );\n\n    // create access control conditions on lit nodes\n    const nodePromises = [];\n    for (const url of this.connectedNodes) {\n      nodePromises.push(\n        this.storeEncryptionConditionWithNode({\n          url,\n          key: hashOfKeyStr,\n          val: hashOfConditionsStr,\n          authSig,\n          chain,\n          permanent: permanent ? 1 : 0,\n        })\n      );\n    }\n\n    const res = await this.handleNodePromises(nodePromises);\n    if (res.success === false) {\n      this.throwNodeError(res);\n      return;\n    }\n\n    return encryptedKey;\n  }\n\n  async storeSigningConditionWithNode({\n    url,\n    key,\n    val,\n    authSig,\n    chain,\n    permanent,\n  }) {\n    log(\"storeSigningConditionWithNode\");\n    const urlWithPath = `${url}/web/signing/store`;\n    const data = {\n      key,\n      val,\n      authSig,\n      chain,\n      permanant: permanent,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async storeEncryptionConditionWithNode({\n    url,\n    key,\n    val,\n    authSig,\n    chain,\n    permanent,\n  }) {\n    log(\"storeEncryptionConditionWithNode\");\n    const urlWithPath = `${url}/web/encryption/store`;\n    const data = {\n      key,\n      val,\n      authSig,\n      chain,\n      permanant: permanent,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async getChainDataSigningShare({ url, callRequests, chain, iat, exp }) {\n    log(\"getChainDataSigningShare\");\n    const urlWithPath = `${url}/web/signing/sign_chain_data`;\n    const data = {\n      callRequests,\n      chain,\n      iat,\n      exp,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async getSigningShare({\n    url,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    resourceId,\n    authSig,\n    chain,\n    iat,\n    exp,\n  }) {\n    log(\"getSigningShare\");\n    const urlWithPath = `${url}/web/signing/retrieve`;\n    const data = {\n      accessControlConditions,\n      evmContractConditions,\n      solRpcConditions,\n      unifiedAccessControlConditions,\n      resourceId,\n      authSig,\n      chain,\n      iat,\n      exp,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async getDecryptionShare({\n    url,\n    accessControlConditions,\n    evmContractConditions,\n    solRpcConditions,\n    unifiedAccessControlConditions,\n    toDecrypt,\n    authSig,\n    chain,\n  }) {\n    log(\"getDecryptionShare\");\n    const urlWithPath = `${url}/web/encryption/retrieve`;\n    const data = {\n      accessControlConditions,\n      evmContractConditions,\n      solRpcConditions,\n      unifiedAccessControlConditions,\n      toDecrypt,\n      authSig,\n      chain,\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  async handshakeWithSgx({ url }) {\n    const urlWithPath = `${url}/web/handshake`;\n    log(`handshakeWithSgx ${urlWithPath}`);\n    const data = {\n      clientPublicKey: \"test\",\n    };\n    return await this.sendCommandToNode({ url: urlWithPath, data });\n  }\n\n  sendCommandToNode({ url, data }) {\n    log(`sendCommandToNode with url ${url} and data`, data);\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"lit-js-sdk-version\": version,\n      },\n      body: JSON.stringify(data),\n    }).then(async (response) => {\n      const isJson = response.headers\n        .get(\"content-type\")\n        ?.includes(\"application/json\");\n      const data = isJson ? await response.json() : null;\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data || response.status;\n        return Promise.reject(error);\n      }\n\n      return data;\n    });\n  }\n\n  async handleNodePromises(promises) {\n    const responses = await Promise.allSettled(promises);\n    log(\"responses\", responses);\n    const successes = responses.filter((r) => r.status === \"fulfilled\");\n    if (successes.length >= this.config.minNodeCount) {\n      return {\n        success: true,\n        values: successes.map((r) => r.value),\n      };\n    }\n\n    // if we're here, then we did not succeed.  time to handle and report errors.\n    const rejected = responses.filter((r) => r.status === \"rejected\");\n    const mostCommonError = JSON.parse(\n      mostCommonString(rejected.map((r) => JSON.stringify(r.reason)))\n    );\n    log(`most common error: ${JSON.stringify(mostCommonError)}`);\n    return {\n      success: false,\n      error: mostCommonError,\n    };\n  }\n\n  throwNodeError(res) {\n    if (res.error && res.error.errorCode) {\n      if (\n        res.error.errorCode === \"not_authorized\" &&\n        this.config.alertWhenUnauthorized\n      ) {\n        // alert(\"You are not authorized to access to this content Grgw\");\n      }\n      throwError({ ...res.error, name: \"NodeError\" });\n    } else {\n      throwError({\n        message: `There was an error getting the signing shares from the nodes`,\n        name: \"UnknownError\",\n        errorCode: \"unknown_error\",\n      });\n    }\n  }\n\n  /**\n   * Connect to the LIT nodes.\n   * @returns {Promise} A promise that resolves when the nodes are connected.\n   */\n  connect() {\n    // handshake with each node\n    for (const url of this.config.bootstrapUrls) {\n      this.handshakeWithSgx({ url }).then((resp) => {\n        this.connectedNodes.add(url);\n        this.serverKeys[url] = {\n          serverPubKey: resp.serverPublicKey,\n          subnetPubKey: resp.subnetPublicKey,\n          networkPubKey: resp.networkPublicKey,\n          networkPubKeySet: resp.networkPublicKeySet,\n        };\n      });\n    }\n\n    return new Promise((resolve) => {\n      const interval = setInterval(() => {\n        if (Object.keys(this.serverKeys).length >= this.config.minNodeCount) {\n          clearInterval(interval);\n          // pick the most common public keys for the subnet and network from the bunch, in case some evil node returned a bad key\n          this.subnetPubKey = mostCommonString(\n            Object.values(this.serverKeys).map(\n              (keysFromSingleNode) => keysFromSingleNode.subnetPubKey\n            )\n          );\n          this.networkPubKey = mostCommonString(\n            Object.values(this.serverKeys).map(\n              (keysFromSingleNode) => keysFromSingleNode.networkPubKey\n            )\n          );\n          this.networkPubKeySet = mostCommonString(\n            Object.values(this.serverKeys).map(\n              (keysFromSingleNode) => keysFromSingleNode.networkPubKeySet\n            )\n          );\n          this.ready = true;\n          log(\"lit is ready\");\n          if (typeof document !== \"undefined\") {\n            document.dispatchEvent(new Event(\"lit-ready\"));\n          }\n\n          resolve();\n        }\n      }, 500);\n    });\n  }\n}\n","// Generated by genversion.\nexport const version = '1.1.197'\n","import \"regenerator-runtime/runtime\";\n\n// add window global on nodejs\nimport {\n  listenForChildFrameMessages,\n  listenForFrameParentMessages,\n  inIframe,\n} from \"./utils/frameComms\";\n\nif (typeof window !== \"undefined\") {\n  // only run this in browser\n  if (inIframe()) {\n    listenForFrameParentMessages();\n  } else {\n    listenForChildFrameMessages();\n  }\n}\n\nimport {\n  fromString as uint8arrayFromString,\n  toString as uint8arrayToString,\n} from \"uint8arrays\";\n\nimport {\n  encryptString,\n  decryptString,\n  zipAndEncryptString,\n  zipAndEncryptFiles,\n  encryptZip,\n  decryptZip,\n  encryptFile,\n  decryptFile,\n  createHtmlLIT,\n  toggleLock,\n  unlockLitWithKey,\n  verifyJwt,\n  encryptFileAndZipWithMetadata,\n  decryptZipFileWithMetadata,\n  humanizeAccessControlConditions,\n  getTokenList,\n  checkAndSignAuthMessage,\n} from \"./utils/lit\";\n\nimport {\n  connectWeb3,\n  disconnectWeb3,\n  mintLIT,\n  signAndSaveAuthMessage,\n  findLITs,\n  sendLIT,\n  decimalPlaces,\n  lookupNameServiceAddress,\n  encodeCallData,\n  decodeCallResult,\n  signMessageAsync,\n} from \"./utils/eth\";\n\nimport {\n  decryptWithPrivKey,\n  encryptWithPubKey,\n  canonicalAccessControlConditionFormatter,\n  canonicalEVMContractConditionFormatter,\n  canonicalUnifiedAccessControlConditionFormatter,\n  hashAccessControlConditions,\n  hashEVMContractConditions,\n  hashUnifiedAccessControlConditions,\n  encryptWithSymmetricKey,\n  decryptWithSymmetricKey,\n} from \"./utils/crypto\";\n\nimport {\n  fileToDataUrl,\n  injectViewerIFrame,\n  downloadFile,\n} from \"./utils/browser\";\n\nimport { LIT_CHAINS, LIT_SVM_CHAINS, ALL_LIT_CHAINS } from \"./lib/constants\";\nimport { printError } from \"./lib/utils\";\nimport { initWasmBlsSdk, wasmBlsSdkHelpers } from \"./lib/bls-sdk.js\";\n\nimport LitNodeClient from \"./utils/litNodeClient\";\n\nimport { litJsSdkLoadedInALIT } from \"./utils/init\";\n\nimport { version } from \"./version\";\n\ninitWasmBlsSdk().then((exports) => {\n  globalThis.wasmExports = exports;\n  // console.log(\"wasmExports loaded\");\n});\n\nconst functions = {\n  encryptString,\n  decryptString,\n  zipAndEncryptString,\n  zipAndEncryptFiles,\n  encryptZip,\n  decryptZip,\n  encryptFile,\n  decryptFile,\n  connectWeb3,\n  disconnectWeb3,\n  checkAndSignAuthMessage,\n  signAndSaveAuthMessage,\n  createHtmlLIT,\n  mintLIT,\n  toggleLock,\n  encryptWithSymmetricKey,\n  decryptWithSymmetricKey,\n  LIT_CHAINS,\n  LIT_SVM_CHAINS,\n  ALL_LIT_CHAINS,\n  LitNodeClient,\n  encryptWithPubKey,\n  decryptWithPrivKey,\n  fileToDataUrl,\n  findLITs,\n  sendLIT,\n  litJsSdkLoadedInALIT,\n  unlockLitWithKey,\n  injectViewerIFrame,\n  printError,\n  canonicalAccessControlConditionFormatter,\n  canonicalEVMContractConditionFormatter,\n  canonicalUnifiedAccessControlConditionFormatter,\n  verifyJwt,\n  encryptFileAndZipWithMetadata,\n  hashAccessControlConditions,\n  hashEVMContractConditions,\n  hashUnifiedAccessControlConditions,\n  decryptZipFileWithMetadata,\n  downloadFile,\n  decimalPlaces,\n  humanizeAccessControlConditions,\n  lookupNameServiceAddress,\n  getTokenList,\n  version,\n  encodeCallData,\n  decodeCallResult,\n  uint8arrayFromString,\n  uint8arrayToString,\n  signMessageAsync,\n  wasmBlsSdkHelpers,\n  initWasmBlsSdk,\n};\n\nmodule.exports = functions;\n","import { unlockLitWithKey } from \"./lit\";\n\nexport const listenForChildFrameMessages = async () => {\n  console.log(\"calling listenForChildFrameMessages from \" + window.origin);\n  // listen for requests from child frames\n  window.addEventListener(\n    \"message\",\n    async (event) => {\n      // console.log('onMessage in sdk: ', event)\n\n      let childFrameThatSentMessageIndex = false;\n      for (let i = 0; i < frames.length; i++) {\n        if (frames[i] === event.source) {\n          childFrameThatSentMessageIndex = i;\n        }\n      }\n\n      if (childFrameThatSentMessageIndex !== false) {\n        console.log(\"onMessage in parent: \", event);\n\n        const { command, params } = event.data;\n        if (command === \"LIT_SYN\") {\n          window.frames[childFrameThatSentMessageIndex].postMessage(\n            { response: \"LIT_ACK\" },\n            \"*\"\n          );\n          return;\n        }\n        //       if (command === 'signAndGetEncryptionKey') {\n        //         authSig = await checkAndSignAuthMessage({ chain: params.chain })\n        //         if (authSig.errorCode && authSig.errorCode === 'wrong_chain') {\n        //           alert('You are connected to the wrong blockchain.  Please switch your metamask to ' + params.chain)\n        //         }\n        //\n        //         // get the merkle proof\n        //         const { balanceStorageSlot } = LIT_CHAINS[params.chain]\n        //         try {\n        //           merkleProof = await getMerkleProof({ tokenAddress: params.tokenAddress, balanceStorageSlot, tokenId: params.tokenId })\n        //         } catch (e) {\n        //           console.log(e)\n        //           alert('Error - could not obtain merkle proof.  Some nodes do not support this operation yet.  Please try another ETH node.')\n        //           return\n        //         }\n        //         const encryptionKey = await window.litNodeClient.getEncryptionKey({\n        //           ...params, authSig, merkleProof\n        //         })\n        //         window.frames[childFrameThatSentMessageIndex].postMessage({ respondingToCommand: command, encryptionKey }, '*')\n        //         return\n        //       }\n        if (event.data.target === \"LitNodeClient\") {\n          // forward this on to the nodes\n          if (command === \"getEncryptionKey\") {\n            const encryptionKey = await window.litNodeClient.getEncryptionKey({\n              ...params,\n            });\n            window.frames[childFrameThatSentMessageIndex].postMessage(\n              { respondingToCommand: command, encryptionKey },\n              \"*\"\n            );\n          }\n        }\n      }\n    },\n    false\n  );\n};\n\nexport const listenForFrameParentMessages = async () => {\n  console.log(\"calling listenForFrameParentMessages from \" + window.origin);\n  // listen for requests from child frames\n  window.addEventListener(\n    \"message\",\n    async (event) => {\n      const messageIsFromFrameParent = event.source === window.parent;\n\n      if (messageIsFromFrameParent) {\n        console.log(\"onMessage in frame: \", event);\n      }\n\n      // console.log('messageIsFromFrameParent: ', messageIsFromFrameParent)\n\n      if (messageIsFromFrameParent) {\n        const { response, respondingToCommand } = event.data;\n        if (response === \"LIT_ACK\") {\n          window.useLitPostMessageProxy = true;\n          if (typeof document !== \"undefined\") {\n            document.dispatchEvent(new Event(\"lit-ready\"));\n          }\n          return;\n        }\n        if (respondingToCommand === \"getEncryptionKey\") {\n          const { encryptionKey } = event.data;\n          unlockLitWithKey({ symmetricKey: encryptionKey });\n        }\n      }\n    },\n    false\n  );\n};\n\nexport const inIframe = () => {\n  try {\n    return window.self !== window.top;\n  } catch (e) {\n    return true;\n  }\n};\n","import { sendMessageToFrameParent } from \"./lit\";\nimport LitNodeClient from \"./litNodeClient\";\n\nexport const litJsSdkLoadedInALIT = () => {\n  try {\n    window.localStorage.getItem(\"test\");\n  } catch (e) {\n    console.log(\n      \"Could not use localstorage in a Lit. This usually means we are stuck in the opensea sandbox.\"\n    );\n    window.sandboxed = true;\n    setTimeout(function () {\n      if (typeof document !== \"undefined\") {\n        document.dispatchEvent(new Event(\"lit-ready\"));\n      }\n    }, 1000);\n    return;\n  }\n  sendMessageToFrameParent({ command: \"LIT_SYN\" }, \"*\");\n  setTimeout(function () {\n    if (!window.useLitPostMessageProxy) {\n      // console.log(\n      //   \"inside lit - no parent frame lit node connection.  connecting ourselves.\"\n      // );\n      // we're on our own with no parent frame.  initiate our own connection to lit nodes\n      const litNodeClient = new LitNodeClient();\n      litNodeClient.connect();\n      window.litNodeClient = litNodeClient;\n    } else {\n      // console.log(\n      //   \"inside lit - parent frame is connected to lit nodes.  using that.\"\n      // );\n    }\n  }, 1000);\n};\n"],"names":["runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","mostCommonString","arr","sort","a","b","filter","v","_ref","message","errorCode","log","args","arguments","litConfig","debug","unshift","console","encryptWithSymmetricKey","symmKey","data","crypto","getRandomValues","subtle","encrypt","iv","encryptedZipData","Uint8Array","e","decryptWithSymmetricKey","encryptedBlob","arrayBuffer","recoveredIv","encryptedZipArrayBuffer","decrypt","generateSymmetricKey","generateKey","SYMM_KEY_ALGO_PARAMS","importSymmetricKey","importKey","hashUnifiedAccessControlConditions","unifiedAccessControlConditions","conds","map","c","toHash","JSON","stringify","TextEncoder","encode","digest","canonicalUnifiedAccessControlConditionFormatter","cond","Array","isArray","operator","conditionType","canonicalSolRpcConditionFormatter","canonicalEVMContractConditionFormatter","canonicalCosmosConditionFormatter","throwError","returnValueTest","path","chain","comparator","hashSolRpcConditions","solRpcConditions","params","canonicalResourceIdFormatter","resId","baseUrl","orgId","role","extraData","canonicalAbiParams","param","functionAbi","inputs","outputs","constant","stateMutability","contractAddress","functionName","functionParams","canonicalAbi","hashEVMContractConditions","accessControlConditions","canonicalAccessControlConditionFormatter","standardContractType","parameters","hashAccessControlConditions","assert","val","msg","inherits","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require$$0","parseHex4Bits","string","index","charCodeAt","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","len","Math","min","move","dest","src","num","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","j","w","off","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","for","inspect","zeros","groupSizes","groupBases","smallMulTo","out","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","_countBits","clz32","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","lo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","mulTo","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","s","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","m","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","p","acc","modn","egcd","x","y","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","n","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","input","output","outLen","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","_permanentCensorErrors","_censorErrors","LogLevels","default","warning","_logLevel","_globalLogger","_normalizeError","missing","form","normalize","join","String","fromCharCode","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","version","_log","logLevel","level","toLowerCase","throwArgumentError","apply","levels","DEBUG","INFO","warn","WARNING","makeError","code","errors","UNKNOWN_ERROR","messageDetails","hex","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","target","kind","checkAbstract","static","censorship","permanent","globalLogger","_BN","INPUT_ERROR","WINDOW","root","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","ArrayBuffer","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","isView","buffer","createOutputMethod","outputType","Keccak","update","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","createMethod","algorithms","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","blocks","finalized","block","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","f","bytes","encodeString","strs","finalize","array","Uint32Array","offset","l","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","logger","getChecksumAddress","address","isHexString","chars","substring","expanded","hashed","arrayify","sha3","keccak_256","toUpperCase","ibanLookup","safeDigits","floor","log10","LN10","getAddress","match","parseInt","checksum","ibanChecksum","LIT_CHAINS","ethereum","chainId","symbol","decimals","rpcUrls","blockExplorerUrls","vmType","polygon","fantom","xdai","bsc","arbitrum","avalanche","fuji","harmony","kovan","mumbai","goerli","ropsten","rinkeby","cronos","optimism","celo","aurora","eluvio","alfajores","xdc","evmos","evmosTestnet","LIT_SVM_CHAINS","solana","solanaDevnet","solanaTestnet","LIT_COSMOS_CHAINS","cosmos","kyve","evmosCosmos","evmosCosmosTestnet","ALL_LIT_CHAINS","_catch","body","recover","decimalPlaces","_ref14","web3","JsonRpcProvider","contract","Contract","ERC20","signAndSaveAuthMessage","_ref6","account","resources","domain","location","host","uri","origin","preparedMessage","prepareMessage","signMessage","_ref7","_temp14","setTimeout","signMessageAsync","getSigner","signature","verifyMessage","alert","_temp15","connectWeb3","resp","signedResult","localStorage","setItem","sig","derivedVia","signedMessage","commsKeyPair","nacl","box","keyPair","publicKey","naclUtil","encodeBase64","secretKey","checkAndSignEVMAuthMessage","_ref4","selectedChain","_ref5","authSig","parse","getItem","mustResign","parsedSiwe","SiweMessage","_temp11","_temp3","_temp4","_temp5","selectedChainId","_temp7","provider","WalletConnectProvider","_exit","request","switchError","chainName","nativeCurrency","addError","_temp9","getNetwork","_temp10","_temp","_ref3$chainId","providerOptions","walletconnect","package","options","rpc","dialog","LitConnectModal","getWalletProvider","Web3Provider","enable","listAccounts","accounts","signer","messageBytes","toUtf8Bytes","JsonRpcSigner","send","hexlify","_exit2","_temp17","_result5","includes","_await$signer$signMes","_temp16","_ref3","now","Date","toISOString","AUTH_SIGNATURE_BODY","signed","uint8arrayToString","toBase58","signArbitrary","sorted","uint8arrayFromString","fromString","encodedSignedMsg","sortedObject","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","digest_hex","sortedKeys","initWasmBlsSdk","pako","inflate","base64ToUint8Array","indexOf","missingOctets","endsWith","getBase64Code","subarray","init","imports","wbg","__wbindgen_throw","arg0","arg1","ptr","cachedTextDecoder","decode","cachegetUint8Memory0","wasm","memory","_input","load","instance","__wbindgen_wasm_module","Response","WebAssembly","instantiate","instantiateStreaming","_await$WebAssembly$in","headers","get","Instance","commitment_sizes_by_threshold","poly_sizes_by_threshold","base64codes","charCode","wasmBlsSdkHelpers","sk_bytes_to_pk_bytes","pkBytes","wasmExports","set_sk_byte","derive_pk_from_sk","_i","pkByte","get_pk_byte","sign_msg","sigBytes","set_msg_byte","_i3","sigByte","get_sig_byte","from","verify","verified","set_pk_byte","_i4","set_sig_byte","_i5","set_rng_values","RNG_VALUES_SIZE","get_rng_values_size","rngValues","set_rng_value","ctBytes","_i6","ctSize","_i7","ctByte","get_ct_byte","msgBytes","set_ct_byte","msgSize","_i9","msgByte","get_msg_byte","generate_poly","threshold","polySize","polyBytes","polyByte","get_poly_byte","get_msk_bytes","mskBytes","mskByte","get_msk_byte","get_mpk_bytes","mpkBytes","mpkByte","get_mpk_byte","get_mc_bytes","mcBytes","mcSize","mcByte","get_mc_byte","set_mc_bytes","set_mc_byte","get_skshare","skshareBytes","skshareByte","get_skshare_byte","get_pkshare","pkshareBytes","pkshareByte","get_pkshare_byte","combine_signatures","sigshares","shareIndex","share","shareHex","byte","sigIndex","byteIndex","set_signature_share_byte","set_share_indexes","combine_signature_shares","_sigByte","create_decryption_share","uiShareIndex","derivedShareIndex","ct","_i10","dshareBytes","_i11","dshareByte","get_decryption_shares_byte","combine_decryption_shares","totalShares","TextDecoder","ignoreBOM","fatal","fileToDataUrl","file","FileReader","reader","onloadend","readAsDataURL","_settle","pact","_Pact","bind","observer","onFulfilled","onRejected","callback","_this","_forTo","check","_cycle","thenable","cosmosConditions","tokenList","myWalletAddress","all","_exit11","_temp38","_result20","humanizeComparator","formatUnits","_temp39","humanizeCosmosConditions","group","promises","humanizeEvmContractConditions","evmContractConditions","_temp33","_result19","_exit9","_temp34","_temp28","_result18","_exit7","formatSol","humanizeSolRpcConditions","_temp29","fixedConditions","containsOperator","_i2","_temp23","_result7","_exit5","tokenFromList","_decimals","_temp21","find","_temp22","_decimalPlaces","formatEther","humanizeEvmBasicAccessControlConditions","_temp24","_result6","_exit3","humanizeUnifiedAccessControlConditions","unlockLitWithKey","symmetricKey","mediaGridHolder","document","getElementById","lockedHeader","fetch","encryptedZipDataUrl","_fetch","blob","encryptedZipBlob","decryptZip","decryptedFiles","mediaGridHtmlBody","innerHTML","innerText","locked","encryptZip","zip","generateAsync","zipBlob","zipBlobArrayBuffer","exportKey","_crypto$subtle$export2","encryptedZip","importedSymmKey","decryptedZipArrayBuffer","JSZip","loadAsync","unzipped","files","checkAndSignAuthMessage","chainInfo","checkAndSignSolAuthMessage","connectSolProvider","getProvider","connect","_ref2","checkAndSignCosmosAuthMessage","connectCosmosProvider","keplr","offlineSigner","getOfflineSigner","getAccounts","_temp2","PACKAGE_CACHE","sendMessageToFrameParent","parent","postMessage","LitNodeClient","config","alertWhenUnauthorized","minNodeCount","bootstrapUrls","_extends","connectedNodes","Set","serverKeys","ready","subnetPubKey","networkPubKey","networkPubKeySet","configOverride","getSignedChainDataToken","callRequests","_this2","_step","iat","exp","nodePromises","_iterator","_createForOfIteratorHelperLoose","getChainDataSigningShare","signatureShares","goodShares","d","signatureShare","every","unsignedJwt","pkSetAsBytes","sigShares","getSignedToken","resourceId","_this4","formattedAccessControlConditions","formattedEVMContractConditions","formattedSolRpcConditions","formattedUnifiedAccessControlConditions","formattedResourceId","getSigningShare","handleNodePromises","success","throwNodeError","saveSigningCondition","permanant","_ref3$permanent","_this6","hashResourceId","hashOfResourceId","hashOfConditionsStr","hashOfConditions","storeSigningConditionWithNode","hashOfResourceIdStr","_hashEVMContractCondi","_hashSolRpcConditions","_temp8","_hashUnifiedAccessCon","_temp6","getEncryptionKey","toDecrypt","_this8","_step4","_iterator4","getDecryptionShare","decryptionShares","idx","shareAsBytes","decryptionShare","set_decryption_shares_byte","ciphertextAsBytes","saveEncryptionKey","encryptedSymmetricKey","_ref5$permanent","encryptedKey","_this10","hashOfKey","_temp13","_step5","_iterator5","storeEncryptionConditionWithNode","hashOfKeyStr","_temp12","_hashUnifiedAccessCon2","sendCommandToNode","handshakeWithSgx","urlWithPath","clientPublicKey","_ref12","response","_response$headers$get","_temp18","ok","status","isJson","json","allSettled","responses","successes","_this24","rejected","mostCommonError","_step6","_this25","_loop","serverPubKey","serverPublicKey","subnetPublicKey","networkPublicKey","networkPublicKeySet","_iterator6","setInterval","clearInterval","interval","keysFromSingleNode","dispatchEvent","Event","top","inIframe","addEventListener","event","source","messageIsFromFrameParent","respondingToCommand","useLitPostMessageProxy","encryptionKey","listenForFrameParentMessages","frames","childFrameThatSentMessageIndex","_event$data","command","litNodeClient","listenForChildFrameMessages","encryptString","encodedString","encryptedString","_crypto$subtle$export","decryptString","encryptedStringBlob","decryptedStringArrayBuffer","zipAndEncryptString","zipAndEncryptFiles","folder","encryptFile","_crypto$subtle$export4","exportedSymmKey","fileAsArrayBuffer","encryptedFile","decryptFile","disconnectWeb3","removeItem","createHtmlLIT","title","htmlBody","css","_ref6$npmPackages","npmPackages","scriptTags","getNpmPackage","packageName","statusText","dataUrl","scriptDataUrl","mintLIT","quantity","_ref9","tokenAddress","LIT","mint","tx","wait","txReceipt","tokenId","events","txHash","transactionHash","mintingAddress","toggleLock","publicContent","encryptWithPubKey","receiverPublicKey","pubKeyUInt8Array","ephemeralKeyPair","decodeBase64","msgParamsUInt8Array","decodeUTF8","randomBytes","nonceLength","nonce","ephemPublicKey","ciphertext","encryptedMessage","decryptWithPrivKey","encryptedData","receiverPrivateKey","recieverEncryptionPrivateKey","decryptedMessage","open","encodeUTF8","findLITs","_ref10","_ref11","chainHexId","chainHexIdToChainName","tokenIds","maxTokenId","balanceOfBatch","balances","tokenIdsWithNonzeroBalances","sendLIT","tokenMetadata","to","_ref13","safeTransferFrom","litJsSdkLoadedInALIT","sandboxed","injectViewerIFrame","destinationId","fileUrl","className","URL","iframe","createElement","sandbox","loading","allow","appendChild","printError","stack","verifyJwt","_ref8","jwt","pubKey","jwtParts","Boolean","header","payload","encryptFileAndZipWithMetadata","readme","_crypto$subtle$export3","metadata","decryptZipFileWithMetadata","additionalAccessControlConditions","decryptedFile","_zip$file$async","_litNodeClient$getEnc","_result3","_litNodeClient$getEnc2","_interrupt2","downloadFile","filename","mimetype","element","setAttribute","style","display","click","removeChild","humanizeAccessControlConditions","lookupNameServiceAddress","resolveName","getTokenList","erc20Promise","erc721Promise","erc20s","erc721s","tokens","encodeCallData","ethers","utils","Interface","abi","encodeFunctionData","decodeCallResult","decodeFunctionResult"],"mappings":"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"}